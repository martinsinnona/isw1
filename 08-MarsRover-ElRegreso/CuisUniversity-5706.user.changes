

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (3 April 2023 20:28:04) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


Object subclass: #XXX
        instanceVariableNames: ''
        classVariableNames: ''
        poolDictionaries: ''
        category: 'CollectionExercise'!

!classDefinition: #XXX category: 'CollectionExercise' stamp: 'sm 4/3/2023 20:39:20'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CollectionExercise'!
!XXX methodsFor: 'nil' stamp: 'sm 4/3/2023 20:41:14'!
findOddsPart0

        | elements index odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.
        index := 1.

        [index <= elements size]
        whileTrue: [
                ((elements at: index) odd) ifTrue: [odds add: (elements at: index)].
                index := index +1.
                ].
        ^odds! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 20:51:49'!
findOddsPart0eJ

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do :[:each | odds ifTrue:[odds add: each]]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 20:52:20' prior: 50603964!
findOddsPart0eJ

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do: [:each | odds ifTrue:[odds add: each]]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 20:53:37' prior: 50603973!
findOddsPart0eJ

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do: [:each | odds ifTrue:[odds add: each]]
	
	^odds! !

XXX findOddsPart0eJ !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 20:56:19' prior: 50603982!
findOddsPart0eJ

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do: [:each | each odd ifTrue:[odds add: each]]
	
	^odds! !

XXX findOddsPart0eJ !

findOddsPart0eJ !

XXX findOddsPart0eJ !

XXX findOddsPart0!

xxx findOddsPart0!

xxx := XXX new.!

xxx := XXX new.
xxx findOddsPart0!

xxx findOddsPart0ej!

xxx findOddsPart0eJ!

xxx := XXX new.
xxx findOddsPart0eJ!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:01:40' prior: 50603992!
findOddsPart0eJ

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do: [:each | each odd ifTrue:[odds add: each]].
	
	^odds! !

xxx := XXX new.
xxx findOddsPart0eJ!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:02:11'!
findOddsPart1

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do: [:each | each odd ifTrue:[odds add: each]].
	
	^odds! !

!methodRemoval: XXX #findOddsPart0eJ stamp: 'sm 4/3/2023 21:02:21'!
findOddsPart0eJ

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements do: [:each | each odd ifTrue:[odds add: each]].
	
	^odds!

self!

self species!

self!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:11:00'!
findOddsPart2

        | elements odds |

        elements:= #(1 2 5 6 9).

        odds := OrderedCollection new.

	elements select: odds.
	
	^odds! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:13:13' prior: 50604036!
findOddsPart2

        | elements odds |

        elements:= #(1 2 5 6 9).

	odds := elements select: [elements odd].
	
	^odds! !

xxx := XXX new.
xxx findOddsPart2!

xxx := XXX new.
xxx findOddsPart2!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:17:27' prior: 50604044!
findOddsPart2

        | elements odds |

        elements:= #(1 2 5 6 9).

	odds := elements select: [:element | element odd].
	
	^odds! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:19:51'!
findOddCollect

        | elements odds |

        elements:= #(1 2 5 6 9).

	odds := elements collect: [:element | element odd].
	
	^odds! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:21:25'!
findOddDoubles

        ^#(1 2 5 6 9) collect: [: element | element * 2]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:24:48'!
findFirstEven

        ^#(1 2 5 6 9) detect: [: element | element even]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:28:17'!
findFirstEvenWithoutMatching

        ^#(1 2 5 6 9) detect: [: element | element even] ifNone: ['no hay pares']s! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:28:20' prior: 50604077!
findFirstEvenWithoutMatching

        ^#(1 2 5 6 9) detect: [: element | element even] ifNone: ['no hay pares']! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:28:38' prior: 50604084!
findFirstEvenWithoutMatching

        ^#(1 5 9) detect: [: element | element even] ifNone: ['no hay pares']! !

        ^#(1 5 9) detect: [: element | element even] ifNone: ['no hay pares']!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:31:50'!
findFirstEvenWithoutMatchingThrowsException

        ^#(1 5 9) detect: [: element | element even] ifNone: [self error: 'no hay pares']! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:39:26'!
sumElementsInjecting

        ^#(1 5 9) inject: 0 into: [:sum :element | sum + element]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:39:52'!
sumElementsSum

        ^#(1 5 9) sum! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/3/2023 21:40:51'!
extractVowels

        ^'abcdefguijp' select: [:char | char isVowel]! !

----SNAPSHOT----(3 April 2023 21:49:13) CuisUniversity-5706.image priorSource: 8713034!

----STARTUP---- (10 April 2023 20:00:30) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/CodigoRepetido-Ejercicio.st----!
!CustomerBook methodsFor: 'customer management' stamp: 'sm 4/10/2023 21:18:33'!
yyy: clientName addOrRemove: condition

	! !
!CustomerBook methodsFor: 'customer management' stamp: 'sm 4/10/2023 21:20:45'!
addOrRemove: condition client: clientName

	! !
!CustomerBook methodsFor: 'customer management' stamp: 'sm 4/10/2023 21:21:16'!
addOrRemoveCustomer: condition named: clientName

	! !

!methodRemoval: CustomerBook #addOrRemove:client: stamp: 'sm 4/10/2023 21:21:33'!
addOrRemove: condition client: clientName

	!

!methodRemoval: CustomerBook #yyy:addOrRemove: stamp: 'sm 4/10/2023 21:21:36'!
yyy: clientName addOrRemove: condition

	!
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:27:27'!
yyy

	| customerBook millisecondsBeforeRunning millisecondsAfterRunning |
	
	customerBook := CustomerBook new.
	
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	customerBook addCustomerNamed: 'John Lennon'.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (50 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:35:17'!
calculaElTiempoQueDemora: unClosure yEvaluarQueSeaMenorA: unNumero

	| millisecondsBeforeRunning millisecondsAfterRunning |
	
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	unClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (unNumero * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:37:14' prior: 50604165!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook |
	
	customerBook := CustomerBook new.
	
	self calculaElTiempoQueDemora: [customerBook addCustomerNamed: 'John Lennon'.] yEvaluarQueSeaMenorA: 50.
	

	
! !

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'sm 4/10/2023 21:37:56'!
PASSED!

!methodRemoval: CustomerBook #addOrRemoveCustomer:named: stamp: 'sm 4/10/2023 21:38:48'!
addOrRemoveCustomer: condition named: clientName

	!
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:40:35' prior: 50604182!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook |
	
	customerBook := CustomerBook new.
	
	self calculaElTiempoQueDemora: [	customerBook removeCustomerNamed: 'Paul McCartney'.
] yEvaluarQueSeaMenorA: 100! !

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'sm 4/10/2023 21:40:44'!
ERROR!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'sm 4/10/2023 21:40:53'!
ERROR!
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:42:19' prior: 50604508!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook |
	
	customerBook := CustomerBook new.
	
	customerBook addCustomerNamed:  'Paul McCartney'.
	
	self calculaElTiempoQueDemora: [	customerBook removeCustomerNamed: 'Paul McCartney'.
] yEvaluarQueSeaMenorA: 100! !

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'sm 4/10/2023 21:42:23'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'sm 4/10/2023 21:42:23'!
PASSED!
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:50:38'!
yyy: aClosure www: anErrorClosure

	| customerBook |
			
	customerBook := CustomerBook new.

	[aClosure value.
	self fail ]
		on: Error 
		do: anErrorClosure! !
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:52:17'!
yyy: aClosure www: anErrorClosure xxx: typeOfError

	| customerBook |
			
	customerBook := CustomerBook new.

	[aClosure value.
	self fail ]
		on: typeOfError 
		do: anErrorClosure! !

!methodRemoval: CustomerBookTest #yyy:www: stamp: 'sm 4/10/2023 21:52:23'!
yyy: aClosure www: anErrorClosure

	| customerBook |
			
	customerBook := CustomerBook new.

	[aClosure value.
	self fail ]
		on: Error 
		do: anErrorClosure!

!methodRemoval: CustomerBookTest #yyy stamp: 'sm 4/10/2023 21:52:25'!
yyy

	| customerBook millisecondsBeforeRunning millisecondsAfterRunning |
	
	customerBook := CustomerBook new.
	
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	customerBook addCustomerNamed: 'John Lennon'.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (50 * millisecond)
	
!

----SNAPSHOT----(10 April 2023 21:54:36) CuisUniversity-5706.image priorSource: 8719079!
!CustomerBookTest methodsFor: 'testing' stamp: 'sm 4/10/2023 21:54:41'!
whenDo: aClosure yyy: typeOfError www: anErrorClosure

	| customerBook |
			
	customerBook := CustomerBook new.

	[aClosure value.
	self fail ]
		on: typeOfError 
		do: anErrorClosure! !

----SNAPSHOT----(10 April 2023 21:54:47) CuisUniversity-5706.image priorSource: 8734742!

----STARTUP---- (11 April 2023 23:20:24) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


----SNAPSHOT----(11 April 2023 23:22:32) CuisUniversity-5706.image priorSource: 8735098!

----STARTUP---- (16 April 2023 18:32:40) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


!classRemoval: #CustomerBook stamp: 'sm 4/16/2023 18:33:05'!
Object subclass: #CustomerBook
	instanceVariableNames: 'suspended active'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CustomerBookTest stamp: 'sm 4/16/2023 18:33:05'!
TestCase subclass: #CustomerBookTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #NotFound stamp: 'sm 4/16/2023 18:33:06'!
Error subclass: #NotFound
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CantSuspend stamp: 'sm 4/16/2023 18:33:06'!
Error subclass: #CantSuspend
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #XXX stamp: 'sm 4/16/2023 18:33:09'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CollectionExercise'!

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/NaturalNumbers.st----!
!II class methodsFor: 'private auxiliary operations' stamp: 'sm 4/16/2023 18:46:51' prior: 50604829!
timesDivideTo: aDividend

"No tenemos comparacion disponible para saber si divisor es mas grande que dividendo, habra que ver si falla"
"El + I es para salvar el caso de division entre iguales"

"hago 2/3 => 3 timesDivideTo 2
(2 + 1 - 3) = 0    => 0 divideWithDividendGreaterOrEqualThanDivisor: 2 and: 3"

	^ [(aDividend + I - self) divideWithDividendGreaterEqualThanDivisor:  aDividend and: self		] 
		on: Error 
		do: [self error: self canNotDivideByBiggerNumberErrorDescription]! !

II next!

!classDefinition: #III category: 'NaturalNumbers' stamp: 'sm 4/16/2023 18:47:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'III class' category: 'NaturalNumbers' stamp: 'sm 4/16/2023 18:47:25'!
III class
	instanceVariableNames: ''!

II / III!
!II class methodsFor: 'private auxiliary operations' stamp: 'sm 4/16/2023 19:14:42' prior: 50604809!
divideWithDividendGreaterEqualThanDivisor: aDividend and: aDivisor

	^[(aDividend - aDivisor) / aDivisor + I
		] on:Error do: [I]! !

III / II!

!classDefinition: #IIII category: 'NaturalNumbers' stamp: 'sm 4/16/2023 19:24:00'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IIII class' category: 'NaturalNumbers' stamp: 'sm 4/16/2023 19:24:00'!
IIII class
	instanceVariableNames: ''!

----SNAPSHOT----(16 April 2023 21:04:52) CuisUniversity-5706.image priorSource: 8735299!

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Exercise'!

!classDefinition: #XXX category: 'Collections-Exercise' stamp: 'sm 4/16/2023 21:06:16'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Exercise'!
!XXX methodsFor: 'nil' stamp: 'sm 4/16/2023 21:13:07'!
findsOddsPart0! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:14:10' prior: 50604923!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9)! !

XXX new !

XXX new !

XXX new !

XXX new findsOddsPart0 !

XXX new findsOddsPart0 !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:16:11' prior: 50604927!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9)
	
	^4! !

XXX new findsOddsPart0 !

XXX new findsOddsPart0 !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:17:07' prior: 50604935!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	^4! !

XXX new findsOddsPart0 !

XXX new findsOddsPart0!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:20:05' prior: 50604942!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	index := 1.
	
	[index <= elements size] 
	whileTrue: [
		((elements at: index) odd) ifTrue: [elements add: (elements at: index)].
			
	]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:20:31' prior: 50604949!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	index := 1.
	
	[index <= elements size] 
	whileTrue: [
		((elements at: index) odd) ifTrue: [elements add: (elements at: index)].
		index := index + 1	
	].

	^ odds.! !

XXX new findsOddsPart0!

XXX new findsOddsPart0!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:21:12' prior: 50604960!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	index := 1.
	
	[index <= elements size] 
	whileTrue: [
		((elements at: index) odd) ifTrue: [odds add: (elements at: index)].
		index := index + 1	
	].

	^ odds.! !

XXX new findsOddsPart0!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:29:09'!
findsOddsPart1

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	index := 1.
	
	[index <= elements size] 
	whileTrue: [
		((elements at: index) odd) ifTrue: [odds add: (elements at: index)].
		index := index + 1	
	].

	^ odds.! !

----SNAPSHOT----(16 April 2023 21:33:32) CuisUniversity-5706.image priorSource: 8744286!

#(1 2 3) do: []!

#(1 2 3) do: [:i | ]!

#(1 2 3) do: [:i | ]!

#(1 2 3) do: [:i | ]!

#(1 2 3) do: [:i | ^i]!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:42:02' prior: 50604985!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | ]

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:50:48' prior: 50605003!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | (element odd) ifTrue: [odds add element]].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:51:26' prior: 50605011!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:51:42' prior: 50605020!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add: element]
	].

	^ odds.! !

XXX new findsOddsPart0.!

XXX new findsOddsPart1.!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:52:15'!
findsOddsPart2

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add: element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:56:25' prior: 50605039!
findsOddsPart2

	|elements|
	
	elements := #(1 2 5 6 9).
	
	^ elements select: [:element | element odd].! !

XXX new findsOddsPart2.!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:00:04'!
findsOddsPart3a

	|elements index|
	
	elements := #(1 2 5 6 9).
	index := 1.
	
	[index <= elements size] whileTrue: []
	
	
	^ elements.! !

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/Packages/TerseGuide.pck.st----!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:06:06' prior: 50605055!
findsOddsPart3a

	|elements index doubledElements|
	
	elements := #(1 2 5 6 9).
	doubledElements := OrderedCollection new.
	index := 1.
	
	[index <= elements size] whileTrue: [
		doubledElements add: ((elements at: index) * 2).
	].
	
	^ elements.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:06:16' prior: 50607982!
findsOddsPart3a

	|elements index doubledElements|
	
	elements := #(1 2 5 6 9).
	doubledElements := OrderedCollection new.
	index := 1.
	
	[index <= elements size] whileTrue: [
		doubledElements add: ((elements at: index) * 2).
	].
	
	^ doubledElements .! !

XXX new findsOddsPart3a!

----STARTUP---- (16 April 2023 22:07:14) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!

!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:42:02' prior: 50604985!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | ]

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:50:48' prior: 50608009!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | (element odd) ifTrue: [odds add element]].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:51:26' prior: 50608017!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:51:42' prior: 50608026!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add: element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:52:15'!
findsOddsPart2

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add: element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:56:25' prior: 50608044!
findsOddsPart2

	|elements|
	
	elements := #(1 2 5 6 9).
	
	^ elements select: [:element | element odd].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:00:04'!
findsOddsPart3a

	|elements index|
	
	elements := #(1 2 5 6 9).
	index := 1.
	
	[index <= elements size] whileTrue: []
	
	
	^ elements.! !

!classDefinition: #TerseGuideHelp category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
Workspace subclass: #TerseGuideHelp
	instanceVariableNames: 'topics topicListIndex selectedTopic topicList window textPane'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: #TerseGuideHelp category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
Workspace subclass: #TerseGuideHelp
	instanceVariableNames: 'topics topicListIndex selectedTopic topicList window textPane'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: 'TerseGuideHelp class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
TerseGuideHelp class
	instanceVariableNames: 'topics'!

!classDefinition: 'TerseGuideHelp class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
TerseGuideHelp class
	instanceVariableNames: 'topics'!

!classDefinition: #TerseGuideWindow category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
WorkspaceWindow subclass: #TerseGuideWindow
	instanceVariableNames: 'textModelM list1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: #TerseGuideWindow category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
WorkspaceWindow subclass: #TerseGuideWindow
	instanceVariableNames: 'textModelM list1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: 'TerseGuideWindow class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
TerseGuideWindow class
	instanceVariableNames: ''!

!classDefinition: 'TerseGuideWindow class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
TerseGuideWindow class
	instanceVariableNames: ''!

!classDefinition: #TerseGuideTopic category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
Object subclass: #TerseGuideTopic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: #TerseGuideTopic category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
Object subclass: #TerseGuideTopic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: 'TerseGuideTopic class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
TerseGuideTopic class
	instanceVariableNames: ''!

!classDefinition: 'TerseGuideTopic class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:07:20'!
TerseGuideTopic class
	instanceVariableNames: ''!
!TerseGuideHelp commentStamp: 'dhn 3/7/2015 13:20' prior: 0!
TerseGuideHelp is adapted from the Squeak terse guide by Chris Rathman (http://www.angelfire.com/tx4/cus/notes/smalltalk.html), maintained on the swiki at http://wiki.squeak.org/squeak/5699. Copyrights and credit for the original document belong to Chris Rathman.

Examples of use include:

TerseGuideHelp display: #arithmetic
TerseGuideHelp display: #array
TerseGuideHelp display: #transcript

TerseGuideHelp also serves as the model for TerseGuideWindow, which can be opened by:

TerseGuideWindow openTerseGuide
!
!TerseGuideWindow commentStamp: 'dhn 3/5/2016 21:50' prior: 0!
Show a terse guide to Cuis in a system window. The window has a text pane with a list pane beside it. The text pane is a kind of Workspace which has the behavior that statements in it can be Done (Cmd-d) or Printed (Cmd-p) in order to observe their effect.

TerseGuideWindow openTerseGuide
!
!TerseGuideTopic commentStamp: '<historical>' prior: 0!
I represent a topic that can be added to the TerseGuide. Subclasses of me should implement #title and #examples. For instance:

>>title
    ^ 'Numbers'

>> examples
     ^ {
            { #code -> '4 factorial' . #category -> 'Common functions' . #description -> 'factorial' } as: Dictionary.
            { #code -> '2 even' . #category -> 'Common functions' . #description -> 'check if a number is even' } as: Dictionary.
        }!
!TerseGuideHelp methodsFor: 'topics' stamp: 'RNG 7/15/2018 01:31:53'!
addAdditionalTopicsTo: topicsList
	
	self class additionalTopics do: [ :each |
		topicsList at: each title put: each
	].! !
!TerseGuideHelp methodsFor: 'topics' stamp: 'jmv 5/6/2020 11:10:35'!
coreTopics
	
	^ `Dictionary new
	at: 'Arithmetic' put: #arithmetic;
	at: 'Arrays' put: #array;
	at: 'Assignment' put: #assignment;
	at: 'Associations' put: #association;
	at: 'Bags' put: #bag;
	at: 'Bit-Wise' put: #bitwise;
	at: 'Blocks' put: #block;
	at: 'Booleans' put: #boolean;
	at: 'Canvas' put: #canvas;
	at: 'Character' put: #character;
	at: 'Coding' put: #coding;
	at: 'Colors' put: #colors;
	at: 'Conditional Statements' put: #conditionalStatement;
	at: 'Conversion' put: #conversion;
	at: 'Date' put: #date;
	at: 'Debugging' put: #debugging;
	at: 'Dictionary' put: #dictionary;
	at: 'Dynamic Messages' put: #dynamic;
	at: 'Exceptions' put: #exceptions;
	at: 'Features' put: #feature;
	at: 'File Operations' put: #fileMan;
	at: 'Fonts' put: #font;
	at: 'Forms' put: #form;
	at: 'Heap' put: #heap;
	at: 'Internal Streams' put: #internalStream;
	at: 'Intervals' put: #interval;
	at: 'Introduction' put: #introduction;
	at: 'Iterations' put: #iterationStatement;
	at: 'Layout Morph' put: #layoutMorph;
	at: 'Layout Spec' put: #layoutSpec;
	at: 'Literals' put: #literals;
	at: 'Metaclass' put: #metaclass;
	at: 'Method Calls' put: #methodCall;
	at: 'Miscellaneous' put: #misc;
	at: 'Morphs' put: #morph;
	at: 'Object' put: #anObject;
	at: 'Ordered Collections' put: #orderedCollection;
	at: 'Point' put: #point;
	at: 'PopUpMenu' put: #popUpMenu;
	at: 'Primitives' put: #primitive;
	at: 'Rectangle' put: #rectangle;
	at: 'Sets' put: #set;
	at: 'Sorted Collections' put: #sortedCollection;
	at: 'Strings' put: #string;
	at: 'Symbols' put: #symbol;
	at: 'Syntax' put: #syntax;
	at: 'Time' put: #time;
	at: 'Transcript' put: #transcript;	
	at: 'Trie' put: #trie;
	at: 'Custom Browsers' put: #customBrowsers;
	yourself`! !
!TerseGuideHelp methodsFor: 'topics' stamp: 'RNG 7/15/2018 01:31:23'!
terseTopics
	"Translate a list item to a class method selector"
	|allTopics|
	allTopics _ self coreTopics.
	self addAdditionalTopicsTo: allTopics.
	^ allTopics! !
!TerseGuideHelp methodsFor: 'initialization' stamp: 'dhn 5/17/2016 16:50' overrides: 16981503!
initialize
	super initialize.
	topics _ self terseTopics.
	topicList _ self class pages.
! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 6/15/2016 18:29'!
selectedTopic: aTopic
	"Set the value of selectedTopic and set the contents of the text pane"
	
	selectedTopic _ aTopic.
	textPane model actualContents: self updateTopicText.
	self triggerEvent: #topicListIndex! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 2/26/2015 07:59'!
topicList
	^ topicList! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 2/26/2015 08:42'!
topicListIndex
	topicList ifNil: [ ^ topicListIndex _ 0 ].
	^ topicList indexOf: selectedTopic! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 10/18/2015 20:20'!
topicListIndex: index
	"Set the vakue of topicListIndex and set the value of selectedTopic"
	
	topicListIndex _ index.
	self selectedTopic: 
		(topicList at: index ifAbsent: nil)! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'RNG 7/15/2018 01:45:10'!
updateTopicText
	"Answer the text of the selected topic and change the window label accordingly"
	| topic topicTitle |
	
	topicListIndex = 0 ifTrue: [ window setLabel: 'Terse Guide'. ^ ''].
	topic _ topics at: selectedTopic.
	topicTitle _ topic isSymbol ifTrue: [ self terseTopics keyAtValue: topic ] ifFalse: [ topic title ].
	window setLabel: ('Terse Guide to ', topicTitle).
	^ topic isSymbol ifTrue: [ self class perform: topic ] ifFalse: [ topic script ]! !
!TerseGuideHelp methodsFor: 'accessing' stamp: 'dhn 10/18/2015 20:01'!
textPane: anObject
	"Set the value of textPane"
	
	textPane _ anObject! !
!TerseGuideHelp methodsFor: 'accessing' stamp: 'dhn 2/27/2015 21:07'!
window: anObject
	"Set the value of window"

	window _ anObject! !
!TerseGuideHelp methodsFor: 'testing' stamp: 'jmv 5/29/2020 16:30:16' overrides: 16981603!
styleByParagraphs
	"Answer true if each paragraph should be styled independent of the others.
	We want to allow mutil-paragraph comments, and we are careful for our contents to be valid Smalltalk."

	^false! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 13:18:04'!
anObject
	"Object"
	^
'| x y |
x _ self activeHand.
	"Answer a hand for the morphic world that is the current UI focus.
	This is the UI root animated by the active Process.
	This method could answer nil, if not in a UI process!!"

y _ self as: HandMorph.
	"Create an object of class aSimilarClass that has similar contents to the receiver."

y _ x asString.
	"Answer a string that represents the receiver."

x _ #foo.
y become: x. 
	"Swap the object pointers of the receiver and the argument.
	Fails if either object is a SmallInteger"

self break.
	"This is a simple message to use for inserting breakpoints during debugging.
	The debugger is opened by sending a signal. This gives a chance to restore
	invariants related to multiple processes."

y changed.
	"Receiver changed in a general way; inform all the dependents by 
	sending each dependent an update: message."

x class.
	"Answer the object which is the receiver''s class."

x className.
	"Answer a string characterizing the receiver''s class, for use in list views for example"

nil confirm: ''Are you hungry?''.	
	"Put up a yes/no menu with a caption. Answer true if the response 
	is yes, false if no. This is a modal question--the user must respond 
	yes or no."

x _ nil confirm: ''Are you hungry?'' orCancel: [x _ ''perhaps''].
	"Put up a yes/no/cancel menu with caption aString. Answer true if  
	the response is yes, false if no. If cancel is chosen, evaluate  
	cancelBlock. This is a modal question--the user must respond yes, no, or cancel."

y disableCode: [nil confirm: ''Is this necessary?''.].
	"Use this method instead of commenting temporarily disabled code.
	This way, it will be accessible with senders, references to variables, etc.
	Besides, you''ll avoid problems when the code to disable has comments!!"

y disableCode: [self executeMethod: #fullPrintString. "Execute compiledMethod against the receiver with no args"].

x fullPrintString.
	"Answer a String whose characters are a description of the receiver."

self halt.
	"This is the typical message to use for inserting breakpoints during 
	debugging. It behaves like halt:, but does not call on halt: in order to 
	avoid putting this message on the stack. Halt is especially useful when 
	the breakpoint message is an arbitrary one."

self halt: ''something to aid debugging''.
	"This is the typical message to use for inserting breakpoints during 
	debugging. It creates and schedules a Notifier with a label."

self inboundPointers.  "Answers a collection of all objects in the system that point to myself"

self inboundPointersExcluding: #().  "Answer a list of all objects in the system that point to me, excluding those in the collection of objectsToExclude. I do my best to avoid creating any temporary objects that point to myself"

nil inform: ''Nothing exceeds like excess.''.  "Display a message for the user to read and then dismiss."

x inspectWithLabel: ''Interesting Instance''.  "Create and schedule an Inspector labelled aLabel."

x isKindOf: Set. 	"Answer whether the argument is a superclass or class of the receiver."

y isMemberOf: Symbol. 
	"Answer whether the receiver is an instance of the argument class"

y longPrintString.
	"Answer a String whose characters are a description of the receiver."

nil notify: ''this is a notice''. 
	"Create and schedule a Notifier with the argument as the message in 
	order to request confirmation before a process can proceed."

x _ y outboundPointers.
"Answers a list of all objects I am causing not to be garbage-collected"

x perform: #asBag. 
	"Send the unary selector, a symbol, to the receiver.
	Fail if the number of arguments expected by the selector is not zero."

x perform: #at: with: 2. 
	"Send the selector, a symbol, to the receiver with an argument.
	Fail if the number of arguments expected by the selector is not one."

x perform: #at:put: with: 2 with: ''bar''. 
	"Send the selector, a symbol, to the receiver with the given arguments.
	Fail if the number of arguments expected by the selector is not two."

x perform: #at:put: withArguments: {2. 17.6}. 
	"Send the selector, a symbol, to the receiver with arguments in an array.
	Fail if the number of arguments expected by the selector does not match 
	the size of the array."

y printOn: String new writeStream.
	"Append to the argument, a stream, a sequence of characters that  
	identifies the receiver."

nil shouldBeImplemented.
	"Announce that this message should be implemented"

nil shouldNotImplement.
	"Announce that, although the receiver inherits this message, it should 
	not implement it."

y storeOn: String new writeStream. 
	"Append to the argument a sequence of characters that is an 
	expression whose evaluation creates an object similar to the receiver."

y storeString.
	"Answer a String representation of the receiver from which the receiver 
	can be reconstructed."

self subclassResponsibility.
	"This message sets up a framework for the behavior of the class'' subclasses.
	 Announce that the subclass should have implemented this message."

self triggerEvent: #mouseOver.
	"Evaluate all actions registered for the argument, an EventSelector. Return the 
	value of the last registered action."

x yourself.

y ~= #foo. 
	"Answer whether the receiver and the argument do not represent the 
	same object."

y ~~ #foo. 
	"Answer whether the receiver and the argument are not the same object 
	(do not have the same object pointer)."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 13:43:44'!
arithmetic
	"Arithmetic Expressions"
	^
'| x y |
x _ 6 + 3.								"addition"
x _ 6 - 3.								"subtraction"
x _ 6 * 3.								"multiplication"
x _ 1 + 2 * 3.							"evaluation always left to right (1 + 2) * 3"
x _ 5 / 3.								"division with fractional result"
x _ 5 / 3.0.							"division with float result"
x _ 5.0 // 3.0.						"integer divide"
x _ 5.0 \\ 3.0.						"integer remainder"
x _ -5.									"unary minus"
x _ 5 sign.								"numeric sign (1, -1 or 0)"
x _ 5 negated.							"negate receiver"
x _ 1.2 integerPart.					"integer part of number (1.0)"
x _ 1.2 fractionPart.				"fractional part of number (0.2)"
x _ 5 reciprocal.						"reciprocal function"
x _ 6 * 3.1.							"auto convert to float"
x _ 5 squared.							"square function"
x _ 25 sqrt.							"square root"
x _ 5 raisedTo: 2.					"power function"
x _ 5 raisedToInteger: 2.			"power function with integer"
x _ 5 exp.								"exponential"
x _ -5 abs.								"absolute value"
x _ 3.99 rounded.						"round"
x _ 3.99 truncated.					"truncate"
x _ 3.99 roundTo: 1.					"round to specified decimal places"
x _ 3.99 truncateTo: 1.				"truncate to specified decimal places"
x _ 3.99 floor.						"integer nearest the receiver toward negative infinity"
x _ 3.99 ceiling.						"integer nearest the receiver toward  infinity"
x _ 5 factorial.						"factorial"
x _ -5 quo: 3.							"integer divide rounded toward zero"
x _ -5 rem: 3.							"integer remainder rounded toward zero"
x _ 28 gcd: 12.						"greatest common divisor"
x _ 28 lcm: 12.						"least common multiple"
x _ 28 mod: 12.						"modulo"
x _ 100 ln.								"natural logarithm"
x _ 100 log.							"base 10 logarithm"
x _ 100 log: 10	.					"logarithm with specified base"
x _ 100 floorLog: 10.				"floor of the log"
x _ 180 degreesToRadians.			"convert degrees to radians"
x _ 3.14 radiansToDegrees.			"convert radians to degrees"
x _ 0.7 sin.							"sine"
x _ 0.7 cos.							"cosine"
x _ 0.7 tan.							"tangent"
x _ 0.7 arcSin.						"arcsine"
x _ 0.7 arcCos.						"arccosine"
x _ 0.7 arcTan.						"arctangent"
x _ 10 max: 20.						"get maximum of two numbers"
x _ 10 min: 20.						"get minimum of two numbers"
x _ Float pi.							"pi"
x _ Float e.							"exp constant"
x _ Float infinity.					"infinity"
x _ Float nan.							"not-a-number"
x _ Random new next; yourself.	"establish a local pseudo-random number generator"
x next.									"random number on the interval (0.0,1.0)"
y _ 100 atRandom.						"random integer on the interval (1,receiver)"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:04:52'!
array
	"Arrays"
	^
'"
	Array:              Fixed length collection
	ByteArray:     Array limited to byte elements (0-255)
	WordArray:    Array limited to word elements (0-2^32)
"
| b x y sum max |	"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ #(4 3 2 1).								"constant array"
x _ Array with: 5 with: 4 with: 3 with: 2.         "create array with 4 elements"
x _ Array new: 4.								"allocate an array with specified size"
x													"set array elements"
   at: 1 put: 5;
   at: 2 put: 4;
   at: 3 put: 3;
   at: 4 put: 7;
   yourself.									"without this, x will be 7 (the last element)"

b _ x isEmpty.									"test if array is empty"
y _ x size.										"array size"
y _ x at: 4.									"get array element at index"
b _ x includes: 3.							"test if element is in array"
y _ x copyFrom: 2 to: 4.					"subarray"
y _ x indexOf: 3 ifAbsent: [0].			"first position of element within array"
y _ x occurrencesOf: 3.						"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].  "iterate over the array"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].				"return collection of elements that pass test"
y _ x reject: [:a | a < 2].				"return collection of elements that fail test"
y _ x collect: [:a | a + a].				"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].	"return first element that passes test"
y _ x findFirst: [:a | a < 3].			"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum array elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)].  "sum array elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum array elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in array"
   ifTrue: [a]
   ifFalse: [c]].
y _ x shuffled.								"randomly shuffle collection"
y _ x asArray.									"convert to array"
y _ x asByteArray.							"convert to byte array"
y _ x asWordArray.							"convert to word array"
y _ x asOrderedCollection.					"convert to ordered collection"
y _ x asSortedCollection.					"convert to sorted collection"
y _ x asBag.									"convert to bag collection"
y _ x asSet.									"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 17:09:56'!
assignment
	"Assignment"
	^
'| x y z |
"either the Cuis or the ASCII convention can be used for assignment"
x _ 4.								"assignment (Cuis) using the underline character ($_)"
z := 7.								"assignment (ASCII)"
x _ y _ z _ 6.						"compound assignment"
x _ (y _ 6) + 1.
x _ Object new.					"bind to an allocated instance of a class"
x _ 123 class.						"discover the class of the object"
x _ Integer superclass.			"discover the superclass of a class"
x _ Object allInstances.		"get an array of all instances of a class"
x _ Integer allSuperclasses.	"get all superclasses of a class"
x _ 1.2 hash.						"hash value for object"
y _ x copy.							"copy the object"
y _ x shallowCopy.				"copy the object (not overridden)"
y _ x veryDeepCopy.				"complete tree copy using a dictionary"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 6/7/2015 12:37'!
association
	"Associations"
	^
'| x y |
x _ #myVar->''hello''.		"Create an association"
y _ x key.
y _ x value.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:11:33'!
bag
	"Bags"
	^
'| b x y sum max |
x _ Bag with: 4 with: 3 with: 2 with: 1.	"create a Bag collection with 4 elements"
x _ Bag new.										"allocate collection"
x add: 4; add: 3; add: 1; add: 2; yourself.	"add element to collection; see NOTE"
x add: 3 withOccurrences: 2.					"add multiple copies to collection"
y _ x addAll: #(7 8 9).							"add elements to the collection and answer the added elements; see NOTE"
y _ x removeAll: #(7 8 9).						"remove elements from the collection and answer the removed elements; see NOTE"
y _ x remove: 4 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
b _ x includes: 3.								"test if element is in collection"
y _ x occurrencesOf: 3.							"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

"NOTE: methods in subclasses of Collection, of which Bag is one, answer
 the ARGUMENT instead of the resulting collection. Examples of such 
 methods are #addAll: and #removeAll:. Sending #yourself to the collection
 will answer the collection instead of the argument."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 9/5/2015 20:34'!
bitwise
	"Bitwise Manipulation"
	^
'| b x |
x _ 16rFF bitAnd: 16r0F.			"and bits"
x _ 16rF0 bitOr: 16r0F.				"or bits"
x _ 16rFF bitXor: 16r0F.			"xor bits"
x _ 16rFF bitInvert.					"invert bits"
x _ 16r0F bitShift: 4.				"left shift"
x _ 16rF0 bitShift: -4.				"right shift"
x _ 16r80 bitAt: 8.					"bit at position (0|1)"
x _ 16r80 highBit.					"position of highest bit set"
b _ 16rFF allMask: 16r0F.			"test if all bits set in mask are set in receiver"
b _ 16rFF anyMask: 16r0F.			"test if any bits set in mask are set in receiver"
b _ 16rFF noMask: 16r0F.			"test if all bits set in mask are clear in receiver"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:17:04'!
block
	"Blocks"
	^
'"
	Blocks:
		- blocks are objects and may be assigned to a variable
		- value is last expression evaluated unless explicit return
		- blocks may be nested
		- specification [ arguments | | localvars | expressions ]	
		- ^expression terminates block & method (exits all nested blocks)
		- blocks intended for long term storage should not contain ^
"
| x y z fac |
x _ [ y _ 1. z _ 2. ]. x value.					"simple block usage"
x _ [ :argOne :argTwo |   argOne, '' and '' , argTwo.].     "set up block with argument passing"
Transcript show: (x value: ''First'' value: ''Second''); newLine.  "use block with argument passing"
x _ [:e | | v | v _ 1. e + v] value: 2.		"localvar in a block"
fac _ [ :n | n > 1 ifTrue:  [n * (fac value: n-1)] ifFalse: [1]].  "closure on block variable"
fac value: 5.											"closure variable scoped to its block"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:19:28'!
boolean
	"Booleans"
	^
'| b x y |
x _ 1. y _ 2.
b _ (x = y).							"equals"
b _ (x ~= y).							"not equals"
b _ (x == y).							"identical"
b _ (x ~~ y).							"not identical"
b _ (x > y).							"greater than"
b _ (x < y).							"less than"
b _ (x >= y).							"greater than or equal"
b _ (x <= y).							"less than or equal"
b _ b not.								"boolean not"
b _ (x < 5) & (y > 1).				"boolean and"
b _ (x < 5) | (y > 1).				"boolean or"
b _ (x < 5) and: [y > 1].			"boolean and (short-circuit)"
b _ (x < 5) or: [y > 1].			"boolean or (short-circuit)"
b _ (x < 5) eqv: (y > 1).			"test if both true or both false"
b _ (x < 5) xor: (y > 1).			"test if one true and other false"
b _ 5 between: 3 and: 12.			"between (inclusive)"
b _ 123 isKindOf: Number.			"test if object is class or subclass of"
b _ 123 isMemberOf: SmallInteger.	"test if object is type of class"
b _ 123 respondsTo: #sqrt.			"test if object responds to message"
b _ x isNil.							"test if object is nil"
b _ x isZero.							"test if number is zero"
b _ x positive.						"test if number is positive"
b _ x strictlyPositive.				"test if number is greater than zero"
b _ x negative.						"test if number is negative"
b _ x even.								"test if number is even"
b _ x odd.								"test if number is odd"
b _ x isLiteral.						"test if literal constant"
b _ x isInteger.						"test if object is integer"
b _ x isFloat.							"test if object is float"
b _ x isNumber.						"test if object is number"
b _ x isSymbol.						"test if object is a Symbol"
b _ $A isUppercase.					"test if upper case character"
b _ $A isLowercase.					"test if lower case character"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/19/2016 20:44'!
canvas
	"Canvas"
	^
'| x y |

"
	There is no Canvas class.
	
	A canvas is produced by sending #getCanvas to a Form.
"

x _ Form extent: 200@100 depth: 32.	"Answer a form with color depth 32"

y _ x getCanvas.							"convert form to canvas (a BitBltCanvas)"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:20:26'!
character
	"Character"
	^
'| x y b |
x _ $A.										"character assignment"
y _ x isLowercase.						"test if lower case"
y _ x isUppercase.						"test if upper case"
y _ x isLetter.							"test if letter"
y _ x isDigit.								"test if digit"
y _ x isAlphaNumeric.					"test if alphanumeric"
y _ x isSeparator.						"test if seperator char"
y _ x isVowel.								"test if vowel"
y _ x digitValue.							"convert to numeric digit value"
y _ x asLowercase.						"convert to lower case"
y _ x asUppercase.						"convert to upper case"
y _ x asciiValue.							"convert to numeric ascii value"
y _ x asString.							"convert to string"
b _ $A <= $B.								"comparison"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 3/9/2019 11:52:37'!
coding
	"Code Patterns"
	^
'"
These are Cuis code patterns intended to help the programmer exploit some of the features of Cuis classes. The examples separate the model from the view and feature two styles: coupled and decoupled.

The coupled style employs the ''dependency mechanism'' and requires the model to change when the view changes and when views which use the model are added. The primary methods of the dependency mechanism are #changed: and #update: .

The decoupled style employs the ''observer pattern'' which ensures that the model can remain unaffected by changes to the view or by additional views. The primary methods of the observer pattern are #triggerEvent: and #when:send:to: . This is the preferred style for Cuis, although both styles can be found in the base.
"
| b n |

"To examine the patterns, in the parent directory which contains Cuis-Smalltalk-Dev* do the following:
	''git clone https://github.com/Cuis-Smalltalk/CodeExamples''
	
then, do the following:	
"
Feature require: #''Code-Patterns''.				"load the package"

"To browse the examples, do (Cmd-d) these statements..."

b _ BrowserWindow openBrowser.					"open a browser"
n _ b model systemCategoryList findFirst: [:a | a = #''Code-Patterns''].  "index to the above package"
b model systemCategoryListIndex: n.				"go to the system category"

"The following statements execute the examples..."

DependencyExamples relatedViews. 				"a decoupled example"
DependencyExamples unrelatedViews. 				"another decoupled example"
DependencyExamples coupledView. 					"a coupled example"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:38:36'!
colors
	"Colors"
	^
'
| x t arr |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"

x _ (Color r: 0 g: 0 b: 0) name.		"answer the name of the color, if possible"
x _ (Color r: 1.0 g: 1.0 b: 1.0) name.

arr _ #((0.0 0.0 0.0) (0.0 0.0 1.0) (0.0 1.0 0.0) (0.0 1.0 1.0) (1.0 0.0 0.0) (1.0 0.0 1.0) (1.0 1.0 0.0) (1.0 1.0 1.0)).
(arr collect: [:a | Color colorFrom: a]) explore.

"In the parent directory which contains Cuis-Smalltalk-Dev* do the following:
	''git clone https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-UI''

then, do the following:
"
Feature require: #''Color-Edit-Panel''. "Color Editor feature and its dependencies"

"From the menu 
      ''World>New morph...>Kernel>A-Dra'' 
select ColorEditorPanel"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:27:14'!
conditionalStatement
	"Conditional Statements"
	^
'| x switch result |
x _ 11.
x > 10 ifTrue: [Transcript show: ''ifTrue''; newLine].		"if then"
x > 10 ifFalse: [Transcript show: ''ifFalse''; newLine].	"if else"
x > 10										"if then else"
   ifTrue: [Transcript show: ''ifTrue''; newLine]
   ifFalse: [Transcript show: ''ifFalse''; newLine].
x > 10										"if else then"
   ifFalse: [Transcript show: ''ifFalse''; newLine]
   ifTrue: [Transcript show: ''ifTrue''; newLine].
Transcript
   show:
      (x > 10
         ifTrue: [''ifTrue'']
         ifFalse: [''ifFalse'']);
   newLine.
Transcript																"nested if then else"
   show:
      (x > 10
         ifTrue: [x > 5
            ifTrue: [''A'']
            ifFalse: [''B'']]
         ifFalse: [''C'']);
   newLine.
switch _ Dictionary new.											"switch (case) functionality"
switch at: $A put: [Transcript show: ''Case A''; newLine].
switch at: $B put: [Transcript show: ''Case B''; newLine].
switch at: $C put: [Transcript show: ''Case C''; newLine].
result _ (switch at: $B) value.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:33:43'!
conversion
	"Conversion"
	^
'| x |
x _ 3.99 asInteger.			"convert number to integer (truncates in Cuis)"
x _ 3.99 asFraction.			"convert number to fraction"
x _ 3 asFloat.					"convert number to float"
x _ 65 asCharacter.			"convert integer to character"
x _ $A asciiValue.			"convert character to integer"
x _ 3.99 printString.		"convert object to string via printOn:"
x _ 3.99 storeString.		"convert object to string via storeOn:"
x _ 15 printStringBase: 16.
x _ 15 storeStringBase: 16.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'RNG 12/13/2019 13:07:13'!
customBrowsers
	"Custom Browsers"
	^
'"Open a window with all methods from a particular category"
Smalltalk 
	browseMessageList: (Smalltalk allMethodsInCategory: ''testing'')
	name: ''Testing methods''
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:38:28'!
date
	"Date"
	^
'| w x y b block str fmt |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Date today.								"create date for today"
w _ Date dateAndTimeNow.					"create array with current date and time"
x _ Date newDay: 12 month: #July year: 1999.	"create date from parts"
x _ Date fromDays: 36002.					"create date from elapsed days since 1/1/1901"
y _ Date dayOfWeek: #Monday.				"day of week as int (1-7)"
y _ Date indexOfMonth: #August.			"month of year as int (1-12)"
y _ Date daysInMonth: 2 forYear: 1996.	"day of month as int (1-31)"
y _ Date daysInYear: 1996.					"days in year (365|366)"
y _ Date nameOfDay: 1.						"weekday name (#Monday,...)"
y _ Date nameOfMonth: 3.					"month name (#January,...)"
y _ Date leapYear: 1997.					"1 if leap year; 0 if not leap year"
y _ x weekday.									"day of week (#Monday,...)"
y _ x previous: #Monday.					"date for previous day of week (one week ago)"
y _ x dayOfMonth.								"day of month (1-31)"
y _ x firstDayOfMonth.						"day of year for first day of month"
y _ x monthName.								"month of year (#January,...)"
y _ x monthIndex.								"month of year (1-12)"
y _ x daysInMonth.							"days in month (1-31)"
y _ x year.										"year (19xx)"
y _ x daysInYear.								"days in year (365|366)"
y _ x daysLeftInYear.						"days left in year (364|365)"
y _ x printFormat: #(2 1 3 $/ 1 1).		"print formatted date"
b _ (x < Date today).						"comparison"
y _ x julianDayNumber.
y _ x mmddyyyy.	"Answer the receiver rendered in standard fmt mm/dd/yyyy. Note that the name #mmddyyyy is slightly misleading -- the month and day numbers don''t show leading zeros, so that for example feb 1 1996 is 2/1/96"
y _ x month.
y _ x monthAbbreviation.
y _ x monthIndex.
y _ x monthName.
fmt _ #(1 2 3 $  3 1 ).		"Specify a format for the date, in the following scheme:"
									"#(item item item sep monthfmt yearfmt twoDigits) 
									items: 1=day 2=month 3=year will appear in the order given, 
									separated by sep which is either an ascii code or character. 
									monthFmt: 1=09 2=Sep 3=September 
									yearFmt: 1=1996 2=96 
									digits: (missing or)1=9 2=09. 
									See the examples in printOn: and mmddyy"
y _ x printFormat: fmt.	 	"Answer a String describing the receiver using the format denoted by the argument, fmt"
str _ ReadWriteStream on: String new.	"Specify a stream"
y _ x printOn: str.

str _ String new writeStream.	
y _ x printOn: str format: #(3 2 1 $.  1 2 ).  "the stream, not the receiver, contains the date in the specified format"
str contents.

y _ x secondsSinceSqueakEpoch.	"Answer the seconds since the Squeak epoch: 1 January 1901"
y _ x storeOn: str.
y _ x week.
y _ x weekday. 			"Answer the name of the day of the week on which the receiver falls."
y _ x weekdayIndex. 		"Sunday=1, ... , Saturday=7"
y _ x year.
y _ x yearNumber.
y _ x yyyymmdd. 			"Format the date in ISO 8601 standard like ''2002-10-22''."
block _ [ :d :m :y | {d. m. y} ].  "Specify an order for the date"
y _ x dayMonthYearDo: block. "Supply integers for day, month and year to aBlock and return the result"
y _ x dayMonthYearDo: [ :d :m :y | {y. m. d.} ].  "Order determined by block, not method name"
y _ x dayOfMonth. 		"Answer the day of the month represented by the receiver."
y _ x dayOfWeek. 			"Answer the day of the week represented by the receiver."
y _ x dayOfWeekName. 	"Answer the day of the week represented by the receiver."
y _ x dayOfYear.			"Answer the day of the year represented by the receiver."
y _ x daysInMonth.		"Answer the number of days in the month represented by the receiver."
y _ x daysInYear.			"Answer the number of days in the year represented by the receiver."
y _ x daysLeftInYear.
y _ x firstDayOfMonth.
y _ x isLeapYear.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 4/12/2019 14:50:40'!
debugging
	"Debugging"
	^
'| a b x |
	"Some statements in this topic are designed to cause an error."
x _ Object new.
x yourself.									"returns receiver"
x inspect.									"open object inspector window"
x confirm: ''Is this correct?''.
x halt.										"breakpoint to open debugger window"
x halt: ''Halt message''.
x notify: ''Notify text''.
x error: ''Error string''.				"open up error window with title"
Smalltalk beep.
x shouldNotImplement.					"flag message should not be implemented"
x subclassResponsibility.				"flag message as abstract"
x errorImproperStore.					"flag an improper store into indexable object"
x errorNonIntegerIndex.					"flag only integers should be used as index"
x errorSubscriptBounds: 13.			"flag subscript out of bounds"
x primitiveFailed.						"system primitive failed"

a _ ''A1''. b _ ''B2''. a become: b.		"switch two objects, if neither is a SmallInteger"
Transcript show: a, b; newLine.

"Doing ''self halt.'' in Morphic code can be risky, because it can open an infinite sequence of debuggers."
{2. x. a.} print. 						"alternative to ''self halt.''"
thisContext printStack: 10.			"alternative to ''self halt.'' showing n lines of the call stack"

x doesNotUnderstand: (Message selector: #foo).  "flag that the message is not handled"

"Writing to-do notes to yourself can be done as follows:"
self flag: #someSymbol  "a reminder comment"
"...where you choose #someSymbol to be something you will not forget (your initials?)."
"Then, to retrieve all such messages, browse senders of #someSymbol using Cmd-n or the SmalltalkEditor menu."
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:52:18'!
dictionary
	"Dictionary"
	^
'"	
	Dictionary:
	IdentityDictionary:   uses identity test (== rather than =)
"
| b x y sum max aDx |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Dictionary new.							"allocate collection"
x add: #a->4; add: #b->3; add: #c->1; add: #d->2; yourself.	"add element to collection"
x at: #e put: 3.								"set element at index; see NOTE"
b _ x isEmpty.									"test if empty"
y _ x size.										"number of elements"
y _ x at: #a ifAbsent: [].					"retrieve value for key #a"
y _ x keyAtValue: 3 ifAbsent: [].		"retrieve key for given value with error block"
y _ x removeKey: #e ifAbsent: [].		"remove element from collection"
b _ x includes: 3.							"test if element is in values collection"
b _ x includesKey: #a.						"test if element is in keys collection"
y _ x occurrencesOf: 3.						"number of times object in collection"
y _ x keys.										"set of keys"
y _ x values.									"bag of values"
x do: [:a | Transcript show: a printString; newLine].  "iterate over the values collection"
x keysDo: [:a | Transcript show: a printString; newLine].  "iterate over the keys collection"
x associationsDo: [:a | Transcript show: a printString; newLine].  "iterate over the associations"
x keysAndValuesDo: [:aKey :aValue | Transcript	"iterate over keys and values"
   show: aKey printString; space;
   show: aValue printString; newLine].
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].  "test if all elements meet condition"
y _ x select: [:a | a > 2].				"return a dictionary with values that pass test"
y _ x reject: [:a | a < 2].				"return a dictionary with values that fail test"
y _ x collect: [:a | a + a].				"transform each element for new dictionary"
y _ x detect: [:a | a > 3] ifNone: [].	"return first value that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum the values"
sum _ x inject: 0 into: [:a :c | a + c].	"sum the values"
max _ x inject: 0 into: [:a :c | (a > c)	"find max value in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.									"collect values in an array"
y _ x asOrderedCollection.					"collect values in an ordered collection"
y _ x asSortedCollection.					"collect values in a sorted collection"
y _ x asBag.									"collect values in a bag"
y _ x asSet.									"collect values in a set"

Smalltalk at: #CuisGlobal put: ''Cuis entry''.	"put global in Smalltalk Dictionary"
x _ Smalltalk at: #CuisGlobal.					"read global from Smalltalk Dictionary"
Transcript show: (CuisGlobal printString).	"entries are directly accessible by name"
Smalltalk keys do: [ :k |						"print out all non-class globals"
   ((Smalltalk at: k) isKindOf: Class)
      ifFalse: [Transcript show: k printString; newLine]].
aDx _ Dictionary new.						"set up user defined dictionary"
aDx at: #MyVar1 put: ''hello1''.			"put entry in dictionary; see NOTE"
aDx add: #MyVar2->''hello2''.				"add entry to dictionary use key->value combo; see NOTE"
aDx size.		"dictionary size"
aDx keys do: [ :k |							"print out keys in dictionary"
   Transcript show: k printString; newLine].
aDx values do: [ :k |						"print out values in dictionary"
   Transcript show: k printString; newLine].
aDx keysAndValuesDo: [:aKey :aValue |	"print out keys and values"
   Transcript
      show: aKey printString;
      space;
      show: aValue printString;
      newLine].
aDx associationsDo: [:aKeyValue |		"another iterator for printing key values"
   Transcript show: aKeyValue printString; newLine].
Smalltalk removeKey: #CuisGlobal ifAbsent: [].  "remove entry from Smalltalk dictionary"

"NOTE: methods in subclasses of Collection, of which Dictionary is one, answer
 the ARGUMENT instead of the resulting collection. Examples of such 
 methods are #add: and #at:put:. Sending #yourself to the collection
 will answer the collection instead of the argument."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/24/2015 14:38'!
dynamic
	"Dynamic Message Calling/Compiling"
	^
'| receiver message result argument keyword1 keyword2 argument1 argument2 |

"unary message"
receiver _ 5.
message _ ''factorial'' asSymbol.
result _ receiver perform: message.
result _ Compiler evaluate: ((receiver storeString), '' '', message).
result _ (Message new setSelector: message arguments: #()) sentTo: receiver.

"binary message"
receiver _ 1.
message _ ''+'' asSymbol.
argument _ 2.
result _ receiver perform: message withArguments: (Array with: argument).
result _ Compiler evaluate: ((receiver storeString), '' '', message, '' '', (argument storeString)).
result _ (Message new setSelector: message arguments: (Array with: argument)) sentTo: receiver.

"keyword messages"
receiver _ 12.
keyword1 _ ''between:'' asSymbol.
keyword2 _ ''and:'' asSymbol.
argument1 _ 10.
argument2 _ 20.
result _ receiver
   perform: (keyword1, keyword2) asSymbol
   withArguments: (Array with: argument1 with: argument2).
result _ Compiler evaluate:
   ((receiver storeString), '' '', keyword1, (argument1 storeString) , '' '', keyword2, (argument2 storeString)).
result _ (Message
   new
      setSelector: (keyword1, keyword2) asSymbol
      arguments: (Array with: argument1 with: argument2))
   sentTo: receiver.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 12/7/2015 15:50'!
exceptions
	"Exceptions"
	^
'"
To see the variety of exceptions that can be useful in Cuis, open a hierarchy browser on Error.
"
| x y |

x _  1. y _ 0.
[x / y] on: ZeroDivide do: [^ ''that is big''].

[''testFile.txt'' asFileEntry fileContents] on: MessageNotUnderstood do: [^ nil].	"avoid the exception for Cancel during the dialog"	

[''testFile.txt'' asFileEntry fileContents] on: FileDoesNotExistException do: [nil confirm: ''Rather do it yourself?''].	"avoid the file-does-not-exist dialog"	

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/23/2016 12:15'!
feature
	"Features"
	^
'"Part of the Cuis strategy to keep a clean, small kernel is the separation of system features into smaller, more easily understood Packages.

The basic idea is that a Feature is implemented by the Package(s) it contains.

You can load Features in your code or by..."

Feature require: #''Feature-Name''.

"You can also use the File List window to install a feature which can be in any directory (World Menu -> Open-> File List). After selecting a feature, click on ''installPackage''.

A feature may depend on other features and particular versions of those features.  Cuis checks for dependencies and if all dependencies are satisfied will load packages in the proper order.

You can create your own packages and add/remove feature requirements using the Package Browser.  World Menu -> Open -> Installed Packages


There are many features for Cuis available at GitHub.

In a web browser, 
1. view https://github.com
2. type ''Cuis-Smalltalk'' in the search box
3. see the number of features available.

When you invoke:"

Feature require: #''Feature-Name''.

"Cuis will search for packages (*.pck.st) which supply the feature in...

1. the image directory and its subdirectories ''Packages'' and ''CompatibilityPackages'' 
2. siblings of the image directory whose names start with ''Cuis-Smalltalk*'' and their subdirectories named ''Packages'' and ''CompatibilityPackages''.
"

Smalltalk imagePath.		"Cuis image directory"


"Additional information is available on the web page:

''https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev/blob/master/Documentation/CuisAndGitHub.md''


For an example of specifying feature requirements, consider the package file ''Cuis-Smalltalk-Dev/Packages/Graphics-Files-Additional.pck.st'' which can be viewed with the File List browser. It provides feature ''Graphics-Files-Additional'' and requires Feature ''Compression''. If in code or in a Workspace you invoke (Cmd-d):"

Feature require: #''Graphics-Files-Additional''.

"...then the Compression package will be loaded, followed by Graphics-Files-Additional."


Feature require: #''Core-Packages''. 		"load all core Cuis Packages"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:59:23'!
fileMan
	"File Operations"
	^
'| b c file dirEntry fullPath |	"For efficient viewing, have a Transcript open and use Cmd-d on these statements"

DirectoryEntry roots.						"answer the drive or drives"
c _ DirectoryEntry currentDirectory.	"answer the current directory"
''testFile.txt'' asFileEntry fileContents: ''Test me now''.  "answer the directory and name of a new file; set its contents"
''testFile.txt'' asFileEntry fileContents.	"print contents of a file"

''testFile.txt'' asFileEntry
	forceWriteStreamDo: [ :ios |			"overwrite old file contents"
		ios nextPut: $M.
		ios nextPutAll: ''y text ''.
		ios nextPutAll: ''data''.
		].
''testFile.txt'' asFileEntry fileContents.	"print contents of a file"

''testFile.txt'' asFileEntry appendStreamDo: [ :fileStream |
	fileStream newLine.
	fileStream nextPutAll: ''Second text line''; newLine.
	].
''testFile.txt'' asFileEntry fileContents. 	"print it"

''testFile.txt'' asFileEntry appendContents: ''The quick red fox''.

''testFile.txt'' asFileEntry fileContents. 	"print it"

''testFile.txt'' asFileEntry forceWriteStreamDo: [ :fileStream |  "overwrite the file"
	| refStyream sharedPoint input |
	"Construct the test data."
	refStyream _ ReferenceStream on: fileStream.
	input _ Array new: 9.
	input at: 1 put: nil.
	input at: 2 put: true.
	input at: 3 put: false.
	input at: 4 put: #(-4 -4.0 ''four'' four).
	input at: 5 put: (Form extent: 63 @ 50 depth: 8).
	(input at: 5) fillWithColor: Color lightOrange.
	input at: 6 put: 1024 @ -2048.
	input at: 7 put: input.							"a cycle"
	input at: 8 put: (Array with: (sharedPoint _ 0 @ -30000)).
	input at: 9 put: sharedPoint.
	refStyream nextPut: input
	].
(''testFile.txt'' asFileEntry readStreamDo: [ :fileStream |
	(ReferenceStream on: fileStream) next.
	]) explore.

''testFile.txt'' asFileEntry delete.			"remove the test file"

b _ ''testFile.txt'' asFileEntry exists.		"test for existence of the file"

''testFile.txt'' asFileEntry fileContents.	"get the file-not-found dialog; note what Cancel does"

[''testFile.txt'' asFileEntry fileContents] on: MessageNotUnderstood do: [^ nil].  "avoid the exception for Cancel during the dialog"	

''testFile.txt'' asFileEntry assureExistence.	"put it back empty"

''testFile.txt'' asFileEntry fileContents. 		"print it"

''testFile.txt'' asFileEntry delete.				"remove the test file"

fullPath _ c pathName, ''\TestDir''.				"identify a directory"
FileIOAccessor new createDirectory: fullPath.	"create a directory"
FileIOAccessor new deleteDirectory: fullPath.	"delete directory; must be empty"
FileIOAccessor new createDirectory: ''./\TestDir''.	"another way, using regex"
FileIOAccessor new deleteDirectory: fullPath.	"delete directory; must be empty"

"The following statements show one way to either create an empty file, or use the file as-is if it already exists"
c _ DirectoryEntry currentDirectory.				"answer the current directory"
dirEntry _ c pathName asDirectoryEntry / ''testFile.txt''.  "create a system-independent path expression"
fullPath _ dirEntry asString.							"convert path expression to string"
fullPath asFileEntry assureExistence.				"create testFile.txt if it does not exist"
fullPath asFileEntry assureExistence.				"do nothing if testFile.txt already exists"
''testFile.txt'' asFileEntry delete.					"remove the test file"

DirectoryEntry smalltalkImageDirectory.			"answer the Smalltalk image directory"
DirectoryEntry vmDirectory.							"answer the VM directory"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'KenD 11/28/2022 13:50:54'!
font
	"Fonts"
	^
'"
Cuis includes by default one StrikeFont, but can also use TrueType fonts.

To add additional included fonts
"

TrueTypeFontFamily readAdditionalFonts.

FontFamily familyNames.				"list the installed fonts"

((LabelMorph contents: ''Text in the selected font.'') changeFont) openInHand. "look at an example"
"
The selection of currently installed fonts may be viewed from the text editor:

World > Open... > Text Editor
...then use (Cmd-k) to see a list of installed fonts.

To use any TrueTypeFont, just open the FileList, select any .ttf file, and click on [read font].
"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:01:26'!
form
	"Forms"
	^
'| x y |
x _ Form dotOfSize: 20.	"Make a form containing a dot (as yet unseen)."
x displayAt: 500@200.	"Cause the form to appear at a point on the display."
Display restore.			"Erase what was displayed."

x _ Form extent: 22@18.
	"Answer a Form with a blank bitmap of depth 1."

x _ Form extent: 22@18 depth: 8.
	"Answer a Form with blank bitmap 22 pixels wide and 18 pixels deep having color depth 8."
	
y _ x getCanvas.			"convert form to canvas (a BitBltCanvas)"

BoxedMorph new drawOn: y; morphExtent: 300@200; openInWorld.
	"Display a morph on a canvas"

x _ Form fromUser.
	"Answer a Form with bitmap initialized from the area of the display screen designated by the user."

x _ Form toothpaste: 15.
	"Draw with mouse button down; terminate by option-click."

x _ Form 
		verticalGradient: 120
		topColor: Color white
		bottomColor: (Color gray: 0.65).
	"Answer a fixed-width form, 120 pixels high, which illustrates shading."

x fillColor: Color green.
	"Set all pixels in the receiver to green."

y _ x icon.
	"Answer a 16 x 16 icon of the receiver"

y _ x magnifyBy: 1.5. 
	"Answer a Form created as a scaling of the receiver. Scale may be a Float, and may be greater or less than 1.0."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:02:59'!
heap
	"Heap"
	^
'| x n sort |
x _ Heap new.						"Answer a heap of default size"
x _ Heap new: (n _ 7).			"Answer a heap of size n"
x _ Heap with: #purple with: #green.	"Answer a Heap with the two arguments as elements."
sort _ [:a :c | a > c].		"Define a sorting order"
x _ Heap withAll: #(11 32 19 21).	"Create a new heap with all the elements from a collection"
x sortBlock: sort.						"Specify how to sort the heap"
x _ Heap withAll: #(11 32 19 21) sortBlock: sort.	"Create a new heap sorted according to a sortBlock"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 17:59:02'!
internalStream
	"Internal  Streams"
	^
'| b x ios str |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
ios _ ReadStream on: ''Hello read stream''.
ios _ ReadStream on: ''Hello read stream'' from: 1 to: 5.
[(x _ ios nextLine) notNil]
   whileTrue: [Transcript show: x; newLine].
ios position: 3.
ios position.
x _ ios next.
x _ ios peek.
x _ ios contents.
b _ ios atEnd.

ios _ ReadWriteStream on: ''Hello read stream''.
ios _ ReadWriteStream on: String new.
ios _ ReadWriteStream on: ''Hello read stream'' from: 1 to: 5.
ios _ ReadWriteStream with: ''Hello read stream''.
ios _ ReadWriteStream with: ''Hello read stream'' from: 1 to: 10.
ios position: 0.
[(x _ ios nextLine) notNil]
   whileTrue: [Transcript show: x; newLine].
ios position: 6.
ios position.
ios nextPutAll: ''Chris''.
x _ ios next.
x _ ios peek.
x _ ios contents.
b _ ios atEnd.

str _ String new writeStream.				"use a stream to form a string"
str nextPutAll: ''As of ''.					"more efficient than concatenation"
str nextPutAll: Date today asString.
str nextPut: $,; space.						"newLine and tab are also possible"
str nextPutAll: Float pi printString, '' radians = ''.  "concatenation can be used"
str nextPutAll: Float pi radiansToDegrees printString.
str nextPutAll: '' degrees.''; newLine.  "complete the formation"
x _ str contents.								"to get the results"

x _ String streamContents: [:string |	"a more compact way"
	string 
		nextPutAll: ''As of '';
		nextPutAll: Date today asString;
		nextPut: $,; space;
		nextPutAll: Float twoPi printString, '' radians = '';  "concatenation can be used"
		nextPutAll: Float twoPi radiansToDegrees printString;
		nextPutAll: '' degrees.''; newLine].  "complete the formation"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:07:36'!
interval
	"Intervals"
	^
'| b x y sum max |
x _ Interval from: 5 to: 10.					"create interval object"
x _ 5 to: 10.
x _ Interval from: 5 to: 10 by: 2.			"create interval object with specified increment"
x _ 5 to: 10 by: 2.
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
x includes: 9.										"test if element is in collection"
x do: [:k | Transcript show: k printString; newLine].	"iterate over interval"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 7].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
y _ x findFirst: [:a | a > 6].				"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 20:36:28'!
introduction
	"Using Terse Guide"
	^
'"
You are reading this in the text pane of the Terse Guide window. This pane is a kind of Workspace and is managed by the SmalltalkEditor of Cuis. This means that you can Do (Cmd-d) or Print (Cmd-p) statements in order to see the result. If you have a Transcript open, the result will appear in it.

The SmalltalkEditor enables you to Do or Print a statement when the cursor is in the statement. It is not necessary to first highlight the entire statement, unless it continues on more than one line.

This text pane is refreshed each time it is accessed. You can change the examples and run them without hurting anything. Go ahead and experiment!!

The Terse Guide does not attempt to provide the entire protocol of a topic. You are encouraged to explore further by using the Protocol Browser as follows:

Button 1>World>Open...>Browser 
then in the upper right pane:
Button 2>Message List>browse protocol

You can narrow the scope of protocol browsing by selecting a class in the upper left pane of the Protocol Browser.
"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:12:40'!
iterationStatement
	"Iterations"
	^
'| x y |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ 4. y _ 1.

#(5 4 3) do: [:a | x _ x + a].					"iterate over a sequenceable collection"
x.

[x > 0] whileTrue: [x _ x - 1. y _ y * 2].	"while true loop"
y.

[x >= 4] whileFalse: [x _ x + 1. y _ y * 2].	"while false loop"
y.

x timesRepeat: [y _ y * 2].						"times repeat loop (i _ 1 to x)"
y.

1 to: x do: [:a | y _ y * 2].						"for loop"
y.

1 to: x by: 2 do: [:a | y _ y / 2].				"for loop with specified increment"
y.
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'KenD 6/2/2020 20:59:34'!
layoutMorph
	"Layout Morph"
	^
'| myLayout |
myLayout _ LayoutMorph new.		"this illustrates a mistake"

"A LayoutMorph places its submorphs in a horizontal Row or a vertical Column"
myLayout _ LayoutMorph newColumn.
myLayout _ LayoutMorph newRow color: Color cyan.
myLayout openInWorld.
myLayout morphExtent: (6 * myLayout morphExtent). "Make larger to hold submorphs"

myLayout addAllMorphs: { BoxedMorph initializedInstance. ImageMorph initializedInstance. BoxedMorph initializedInstance. }.

"When there is space left over, the submorphs can be shifted
 along the layout axis.  This is the axisEdgeWeight, a number from
 0 to 1, which can also be specified by a symbol."

myLayout axisEdgeWeight: #rowRight.
myLayout axisEdgeWeight: #center.
myLayout axisEdgeWeight: #rowLeft.

myLayout beColumn.
myLayout direction." #vertical "
myLayout axisEdgeWeight: #columnBottom.
myLayout axisEdgeWeight: #center.
myLayout axisEdgeWeight: #columnTop.

myLayout beRow.
myLayout direction. " #horizontal "

myLayout separation: 10@20. "set the amount of separation for submorphs"	
myLayout xSeparation.			"answer the x component of the specified separation"
myLayout ySeparation.			"answer the y component of the specified separation"
myLayout beColumn.

"Submorphs may also have a LayoutSpec to specify proportion and offAxis placement"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'jmv 1/18/2022 09:38:18'!
layoutSpec
	"Layout Specification"
	^
'| layout image interiorLayout rect |
"A LayoutMorph places its submorphs along the layout axis.
 The submorphs may use a LayoutSpec to specify, for width and height,
 a fixed or porportional extent, a minimum extent, an offAxisEdgeWeight."

"Some Morphs to use"
rect _ BoxedMorph initializedInstance.
image _ ImageMorph initializedInstance.
rect layoutSpec: (LayoutSpec fixedWidth: 80 proportionalHeight: 0.6 offAxisEdgeWeight: #center).
"Layouts can contain layouts"
interiorLayout _ LayoutMorph newColumn.
interiorLayout separation: 10@20.
interiorLayout layoutSpec: (LayoutSpec proportionalWidth: 0.3 proportionalHeight: 0.8).
interiorLayout addMorph: BoxedMorph initializedInstance.
interiorLayout addAdjusterAndMorph: (BoxedMorph new) proportionalWidth: 1.0.
"A LayoutMorph to contain them"
layout _ LayoutMorph newRow.
layout addAllMorphs: { image. interiorLayout. rect. }.
layout openInWorld.
"Make it bigger"
layout morphExtent: (3 * layout morphExtent).
"Make it colorful"
interiorLayout color: Color cyan.
layout color: Color green lighter lighter.
"add handles; mouse grab lower-right yellow circle with tooltip Change Size."
layout addHalo.
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'jmv 5/6/2020 11:14:41'!
literals
	"Literals"
	^
'"Literals are objects that are created when you compile a method. They are always available when the method is run, and the same instance is used each time. Remember that when a method is run, the source code, compiled to create it, is no longer used at all. This includes the source code for the literals. In the example below, the CompiledMethod will not have a string ''3.14'', but the Float object built after it.
Note: It is considered bad practice to later modify them, as they would no longer match their source code."
| b x |
b _ true.									"true pseudo-variable"
b _ false.									"false pseudo-variable"
x _ nil.										"nil object pseudo-variable"
x _ 1.										"SmallInteger literal"
x _ 3.14.									"Float literal"
x _ 2e-2.									"Fraction literal"
x _ 2.0e-2.									"Float literal"
x _ 7/8.										"Fraction literal"
x _ 16r0F.									"SmallInteger literal".
x _ 16rFFFFFFFF.							"LargePositiveInteger literal".
x _ 16rFFFFFFFF negated.				"LargeNegativeInteger literal".
x _ -1.										"negative SmallInteger literal"
x _ ''Hello''.								"String literal"
x _ ''I''''m here''.							"single quote escape"
x _ $A.										"Character literal"
x _ $ .										"Character literal (space)"
x _ #aSymbol.								"Symbol literal"
x _ #(3 2 1).								"Array literal"
x _ #(''abc'' 2 $a).						"mixing of types allowed (all literal)"
x _ #[3 2 1 0].							"ByteArray literal"
x _ #[1.0 3.141592 6.02e23].			"Float64Array literal"

x _ {''Hello'' size. Float pi. 1.0 arcTan }.    "Warning: NOT a literal. Created on each run"
x _ `{''Hello'' size. Float pi. 1.0 arcTan }`.  "Backtick syntax. Anything can be a literal!!"
x _ `{ 1. 3. 5. 7. 11. 13. 17} asSet`.          "A literal Set"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:49:15'!
metaclass
	"Class / Metaclass"
	^
'| b x |
x _ String name.							"class name"
x _ String category.						"organization category"
x _ String comment.						"class comment"
x _ String kindOfSubclass.				"subclass type - subclass: variableSubclass, etc"
x _ String definition.					"class definition"
x _ String instVarNames.				"immediate instance variable names"
x _ String allInstVarNames.			"accumulated instance variable names"
x _ String classVarNames.				"immediate class variable names"
x _ String allClassVarNames.			"accumulated class variable names"
x _ String sharedPools.					"immediate dictionaries used as shared pools"
x _ String allSharedPools.				"accumulated dictionaries used as shared pools"
x _ String selectors.					"message selectors for class"
x _ String sourceCodeAt: #indexOf:.	"source code for specified method"
x _ String allInstances.				"collection of all instances of class"
x _ String superclass.					"immediate superclass"
x _ String allSuperclasses.			"accumulated superclasses"
x _ String withAllSuperclasses.		"receiver class and accumulated superclasses"
x _ String subclasses.					"immediate subclasses"
x _ String allSubclasses.				"accumulated subclasses"
x _ String withAllSubclasses.			"receiver class and accumulated subclasses"
b _ String instSize.						"number of named instance variables"
b _ String isFixed.						"true if no indexed instance variables"
b _ String isVariable.					"true if has indexed instance variables"
b _ String isPointers.					"true if index instance vars contain objects"
b _ String isBits.						"true if index instance vars contain bytes/words"
b _ String isBytes.						"true if index instance vars contain bytes"
b _ String isWords.						"true if index instance vars contain words"
Object withAllSubclasses size.		"get total number of class entries"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'KenD 5/1/2020 16:49:17'!
methodCall
	"Method Calls"
	^
'"
	Method calls:
		- unary methods are messages with no arguments	
		- binary methods
		- keyword methods are messages with selectors including colons
 
	standard categories/protocols:
		- initialize-release    (methods called for new instance)
		- accessing             (get/set methods)
		- testing               (boolean tests - is)
		- comparing             (boolean tests with parameter
		- displaying            (gui related methods)
		- printing              (methods for printing)
		- updating              (receive notification of changes)
		- private               (methods private to class)
		- instance-creation     (class methods for creating instance)
"
| x |
x _ 2 sqrt.									"unary message"
x _ 2 raisedTo: 10.						"keyword message"
x _ 194 * 9.								"binary message"
Transcript show: (194 * 9) printString; newLine.	"combination (chaining)"
x _ 2 perform: #sqrt.					"indirect method invocation"
Transcript									"cascading ; send multiple messages to first receiver"
   show: ''hello '' ;
   show: ''world'' ;
   newLine.
"Without semicolon cascading"
x := BoxedMorph new.
x color: Color yellow.
x openInWorld.
"Using semicolon cascade -- we don''t need the variable, x"
BoxedMorph new
	color: Color yellow; 
	openInWorld.
3 + 2; * 100.							"result=300. Sends message to same receiver (3)"
"Parentheses are used for grouping.  In many cases parentheses can be replaced by ::"
3 squared ; + 5.  " 8 -- semicolon -> cascade to _original_ receiver (3)"
(3 squared) + 5. " 14 -- use parens to group"
3 squared :: + 5. " 14 -- same but double-colon -> cascade to _result_ of expression at left (9)"
"The double colon is useful in eliding parens from complex keyword expressions"
(3 squared between: 2 squared and: 4 squared) ifTrue: [ #Great ] ifFalse: [ #Oops ].
3 squared between: 2 squared and: 4 squared :: ifTrue: [ #Great ] ifFalse: [ #Oops ].

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 3/5/2015 11:34'!
misc
	"Miscellaneous"
	^
'| x |
Smalltalk condenseChanges.					"compress the change file"
x _ FillInTheBlankMorph request: ''Prompt Me''.		"prompt user for input"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:53:32'!
morph
	"Morphs"
	^
'| x y z w v |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Morph new.				"a new but invisible morph"
x openInWorld.				"make visible in upper left of screen"
x openInHand.				"make visible at cursor location"
								"drag with the left button; show halos with the middle button"
x name: #MyName.			"used in the halos"
x name: ''My Name''.		"alternative, allowing imbedded blanks"
x morphPosition: 100@65.	"set the morph location"
y _ FillInTheBlankMorph request: ''Please Enter Something''.	"prompt user for input"
Feature require: #''Morphic-Widgets-Extras''.	"ensure a requirement is available for the following plot"
x _ FunctionGraphMorph initializedInstance openInHand.	"example, plotting two functions"
x _ SystemWindow new openInWorld.	"open a window"
x setLabel: ''Label for It''.
y _ LayoutMorph example10.				"organizing several morphs"
x addMorph: y.								"place morphs in a SystemWindow"

z _ x submorphs at: 1 :: submorphs at: 1 :: submorphs at: 2 :: submorphs at: 2.  "select a deep submorph"
	"The ''::'' syntax avoids nested parentheses"
z name.						"name of the deep submorph"
w _ z owningWindow.		"answer the first enclosing morph that is a kind of Window"
w class.
v _ x findDeepSubmorphThat: [:m | m name = #G] ifAbsent: [nil].	"find the submorph named #F"
v == z.						"verify that v and z are identical"

LayoutMorph includeInNewMorphMenu.
	"Return true for all classes that can be instantiated from the menu"

y _ Morph initializedInstance openInHand.
	"Answer an instance of the receiver which in some sense is initialized.  In the case of Morphs, this will yield an instance that can be attached to the Hand after having received the same kind of basic initialization that would be obtained from an instance chosen from the ''new morph'' menu.
	Return nil if the receiver is reluctant for some reason to return such a thing"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:56:38'!
orderedCollection
	"Ordered Collections"
	^
'| b x y sum max |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ OrderedCollection with: 4 with: 3 with: 2 with: 1.	"create collection with 4 elements"
x _ OrderedCollection new.						"allocate a collection"
x add: 3; add: 2; add: 1; add: 4; yourself.	"add element to collection"
y _ x addFirst: 5; yourself.					"add element at beginning of collection"
y _ x removeFirst;	yourself.				"remove first element in collection"
y _ x addLast: 6; yourself.					"add element at end of collection"
y _ x removeLast;	yourself.					"remove last element in collection"
y _ x addAll: #(7 8 9); yourself.			"add elements to the collection"
y _ x removeAll: #(1 8 7).						"remove elements from the collection and answer the removed elements"
x at: 2 put: 3; yourself.						"set element at index"
y _ x remove: 5 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
y _ x at: 2.										"retrieve element at index"
y _ x first.										"retrieve first element in collection"
y _ x last.											"retrieve last element in collection"
b _ x includes: 5.								"test if element is in collection"
y _ x copyFrom: 2 to: 3.						"subcollection"
y _ x indexOf: 3 ifAbsent: [0].				"first position of element within collection"
y _ x occurrencesOf: 3.						"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
y _ x findFirst: [:a | a < 2].				"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)]. sum.  "sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x shuffled.									"randomly shuffle collection"
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:57:06'!
point
	"Point"
	^
'| x y |
x _ 200@100.									"obtain a new point"
y _ x x.											"x coordinate"
y _ x y.											"y coordinate"
x _ 200@100 negated.							"negates y"
x _ (200@100) negated.						"negates x and y"
x _ (-200@ -100) abs.						"absolute value of x and y"
x _ (200.5@100.5) rounded.					"round x and y"
x _ (200.5@100.5) truncated.				"truncate x and y"
x _ 200@100 + 100.							"add scale to both x and y"
x _ 200@100 - 100.							"subtract scale from both x and y"
x _ 200@100 * 2.								"multiply x and y by scale"
x _ 200@100 / 2.								"divide x and y by scale"
x _ 200@100 // 2.								"divide x and y by scale"
x _ 200@100 \\ 3.								"remainder of x and y by scale"
x _ 200@100 + (50@25).						"add points"
x _ 200@100 - (50@25).						"subtract points"
x _ 200@100 * (3@4).							"multiply points"
x _ 200@100 // (3@4).						"divide points"
x _ 200@100 max: 50@200.					"max x and y"
x _ 200@100 min: 50@200.					"min x and y"
x _ 20@5 dotProduct: 10@2.					"sum of product (x1*x2 + y1*y2)"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 8/10/2018 18:30:51'!
popUpMenu
	"PopUpMenu"
	^
'| x y b arr lin |
b _ PopUpMenu confirm: ''Are you hungry?''.
b _ PopUpMenu confirm: ''Reboot universe'' orCancel: [''Nevermind''].
b _ PopUpMenu 
		confirm: ''Are you hungry?''
		trueChoice: ''yes, I''''m famished''
		falseChoice: ''no, I just ate''.
PopUpMenu inform: ''I like Cuis''.
arr _ #(''Alpha'' ''Beta'' ''Gamma'' ''something else'').
x _ (PopUpMenu labelArray: arr) startUpWithCaption: ''Please pick one.''.
lin _ #(3).
x _ (PopUpMenu labelArray: arr lines: lin) 
	startUpWithCaption: nil 
	at: 450@200
	allowKeyboard: false.
y _ (PopUpMenu withCaption: ''Special'' chooseFrom: ''Alpha\Beta\Gamma\something else'').

x _ FillInTheBlankMorph request: ''Enter the (whatever)'' initialAnswer: ''the default''.
		"when it is not possible to pre-determine an answer"
		
"For potentially long menus, the following includes ''more...'' and ''start over...'' behavior"
x _ (PopUpMenu labels: (String streamContents: [:s | 1 to: 100 do: [:i | s print: i; newLine]])
		lines: (5 to: 100 by: 5)) startUpWithCaption: ''Long Menu Example''.		
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 3/1/2015 12:58'!
primitive
	"Primitive"
	^
'	"Some messages in the system are responded to primitively. A primitive   
	response is performed directly by the interpreter rather than by evaluating   
	expressions in a method. The methods for these messages indicate the   
	presence of a primitive response by including <primitive: xx> before the   
	first expression in the method.   
	  
	Primitives exist for several reasons. Certain basic or ''primitive'' 
	operations cannot be performed in any other way. Smalltalk without 
	primitives can move values from one variable to another, but cannot add two 
	SmallIntegers together. Many methods for arithmetic and comparison 
	between numbers are primitives. Some primitives allow Smalltalk to 
	communicate with I/O devices such as the disk, the display, and the keyboard. 
	Some primitives exist only to make the system run faster; each does the same 
	thing as a certain Smalltalk method, and its implementation as a primitive is 
	optional.  
	  
	When the Smalltalk interpreter begins to execute a method which specifies a 
	primitive response, it tries to perform the primitive action and to return a 
	result. If the routine in the interpreter for this primitive is successful, 
	it will return a value and the expressions in the method will not be evaluated. 
	If the primitive routine is not successful, the primitive ''fails'', and the 
	Smalltalk expressions in the method are executed instead. These 
	expressions are evaluated as though the primitive routine had not been 
	called.  
	  
	The Smalltalk code that is evaluated when a primitive fails usually 
	anticipates why that primitive might fail. If the primitive is optional, the 
	expressions in the method do exactly what the primitive would have done (See 
	Number @). If the primitive only works on certain classes of arguments, the 
	Smalltalk code tries to coerce the argument or appeals to a superclass to find 
	a more general way of doing the operation (see SmallInteger +). If the 
	primitive is never supposed to fail, the expressions signal an error (see 
	SmallInteger asFloat).  
	  
	Each method that specifies a primitive has a comment in it. If the primitive is 
	optional, the comment will say ''Optional''. An optional primitive that is not 
	implemented always fails, and the Smalltalk expressions do the work 
	instead.  
	 
	If a primitive is not optional, the comment will say, ''Essential''. Some 
	methods will have the comment, ''No Lookup''. See Object 
	howToModifyPrimitives for an explanation of special selectors which are 
	not looked up.  
	  
	For the primitives for +, -, *, and bitShift: in SmallInteger, and truncated 
	in Float, the primitive constructs and returns a 16-bit 
	LargePositiveInteger when the result warrants it. Returning 16-bit 
	LargePositiveIntegers from these primitives instead of failing is 
	optional in the same sense that the LargePositiveInteger arithmetic 
	primitives are optional. The comments in the SmallInteger primitives say, 
	''Fails if result is not a SmallInteger'', even though the implementor has the 
	option to construct a LargePositiveInteger. For further information on 
	primitives, see the ''Primitive Methods'' part of the chapter on the formal 
	specification of the interpreter in the Smalltalk book."'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:58:02'!
rectangle
	"Rectangle"
	^
'| x y b |
x _ Rectangle fromUser.	"Have the user designate the top left and bottom right corners of a rectangle."
y _ Form fromDisplay: x.	"Create a virtual bit map from the rectangle." 
y display.						"Show the rectangle at 0@0 on the display."
Display restore.				"Erase the rectangle."
		
b _ x containsPoint: 195@150.
y _ x encompass: 195@150.

y _ x expandBy: 20.
	"Answer a Rectangle that is outset from the receiver by a Rectangle, Point, or scalar."

y _ x extendBy: 55@77.
	"Answer a Rectangle with the same origin as the receiver, but whose corner is offset by a Rectangle, Point, or scalar."
	
y _ x extent.
	"Answer the receiver''s width @ the receiver''s height."

y _ x flippedBy: #vertical centerAt: 220@330. 
	"Answer a copy of the receiver flipped #vertical or #horizontal, about aPoint."

y _ x insetBy: 60. 
	"Answer a Rectangle that is inset from the receiver by delta. delta is a Rectangle, Point, or scalar."

y _ x insetOriginBy: 20 cornerBy: 20@60. 
	"Answer a Rectangle that is inset from the receiver by a given amount from the origin and corner."

y _ x left.
	"Answer the position of the receiver''s left vertical line."

y _ x left: 70.
	"Answer the receiver with it''s left side at the argument."
	
x _ Rectangle center: 40@50 extent: 200@150. 
	"Answer a rectangle whose center is at a point and whose width by height is a point.  "

x _ Rectangle encompassing: {(55@44). (33@22). (300@122)}.
	"Answer a rectangle which encompasses a list of points."

x _ Rectangle left: 65 right: 300 top: 120 bottom: 350. 
	"Answer a rectangle whose left, right, top, and bottom coordinates are determined by the arguments."

x _ Rectangle origin: 100@80 corner: 400@500. 
	"Answer a rectangle whose corners (top left and bottom right) are determined by the arguments."

x _ Rectangle origin: 100@80 extent: 300@200. 
	"Answer a rectangle whose top left corner is at a point and width by height is specified by a point."

x _ Rectangle originFromUser: 400@300.
	"Answer a rectangle that is determined by having the user designate the top left corner. The width and height are determined by the argument."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:59:42'!
set
	"Sets"
	^
'| b x y sum max |
x _ Set with: 4 with: 3 with: 2 with: 1.	"create collection with 4 elements"
x _ Set new.										"allocate collection"
x add: 4; add: 3; add: 1; add: 2; yourself.	"add element to collection"
y _ x addAll: #(7 8 9).							"add elements to the collection and answer the added elements"
y _ x removeAll: #(7 8 9).						"remove elements from the collection and answer the removed elements"
y _ x remove: 4 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
x includes: 4.										"test if element is in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:03:26'!
sortedCollection
	"Sorted Collections"
	^
'| b x y sum max |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ SortedCollection with: 4 with: 3 with: 2 with: 1.	"create collection with 4 elements"
x _ SortedCollection new.						"allocate collection"
x _ SortedCollection sortBlock: [:a :c | a > c]."set sort criteria"
x add: 3; add: 2; add: 1; add: 4; yourself.	"add element to collection"
y _ x addFirst: 5.								"Error: Not Appropriate for a SortedCollection"
y _ x removeFirst.								"remove first element in collection"
y _ x addLast: 6.									"add element at end of collection"
y _ x removeLast.									"remove last element in collection"
y _ x addAll: #(7 8 9).							"add elements to the collection and answer the added elements"
x sortBlock: [:a :c | a > c].					"sort in descending order"
y _ x removeAll: #(7 8 9).						"remove elements from the collection and answer the removed elements"
y _ x remove: 5 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
y _ x at: 2.											"retrieve element at index"
y _ x first.											"retrieve first element in collection"
y _ x last.											"retrieve last element in collection"
b _ x includes: 4.									"test if element is in collection"
y _ x copyFrom: 2 to: 3.							"subcollection"
y _ x indexOf: 3 ifAbsent: [0].				"first position of element within collection"
y _ x occurrencesOf: 3.							"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
y _ x findFirst: [:a | a < 3].				"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:05:11'!
string
	"Strings"
	^
'| b x y |
x _ ''This is a string''.						"string assignment"
x _ ''String'', ''Concatenation''.			"string concatenation"
b _ x isEmpty.									"test if string is empty"
y _ x size.										"string size"
y _ x at: 2.									"char at location"
y _ x copyFrom: 2 to: 4.					"substring"
y _ x indexOf: $a ifAbsent: [0].			"first position of character within string"
x _ String new: 4.							"allocate string object"
x													"set string elements"
   at: 1 put: $a;
   at: 2 put: $b;
   at: 3 put: $c;
   at: 4 put: $e;
   yourself.
x _ String with: $a with: $b with: $c with: $d.	"set up 4 elements at a time"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the string"
b _ x allSatisfy: [:a | (a >= $a) & (a <= $z)].	"test if all elements meet condition"
y _ x select: [:a | a > $a].				"return all elements that meet condition"

x _ String streamContents: [:str |		"using a stream to form a string"
	str 											"more efficient than concatenation"
		nextPutAll: ''This string'';
		nextPutAll: '' is formed today, '';
		nextPutAll: Date today asString;
		nextPutAll: '', without using concatenation.''].

y _ x asSymbol.								"convert string to symbol"
y _ x asArray.									"convert string to array"
x _ ''KAAPED'' asByteArray.					"convert string to byte array"
y _ x asOrderedCollection.					"convert string to ordered collection"
y _ x asSortedCollection.					"convert string to sorted collection"
y _ x asBag.									"convert string to bag collection"
y _ x asSet.									"convert string to set collection"
y _ ''world'' shuffled.						"randomly shuffle string"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:06:34'!
symbol
	"Symbols"
	^
'| b x y |
x _ #Hello.									"symbol assignment"
y _ #String , #Concatenation.			"symbol concatenation (result is string)"
b _ x isEmpty.								"test if symbol is empty"
y _ x size.									"string size"
y _ x at: 2.								"char at location"
y _ x copyFrom: 2 to: 4.				"substring"
y _ x indexOf: $e ifAbsent: [0].		"first position of character within string"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the string"
b _ x allSatisfy: [:a | (a >= $a) & (a <= $z)].	"test if all elements meet condition"
y _ x select: [:a | a > $a].			"return all elements that meet condition"
y _ x asString.							"convert symbol to string"
y _ x asText.								"convert symbol to text"
y _ x asArray.								"convert symbol to array"
y _ x asOrderedCollection.				"convert symbol to ordered collection"
y _ x asSortedCollection.				"convert symbol to sorted collection"
y _ x asBag.								"convert symbol to bag collection"
y _ x asSet.								"convert symbol to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 17:05:02'!
syntax
	"Syntax Notes"
	^
'"
	Statement form (basic binary):
		<receiver> <message selector> [<argument>]
		There are also unary and keyword forms.

	Allowable characters:
		- a-z
		- A-Z
		- 0-9
		- .+/\*~<=>@%|&?;:''#()[]{}_
		- blank, tab, cr, ff, lf

	Variables:
		- variables must be declared before use
		- shared vars must begin with uppercase
		- local vars must begin with lowercase
		- reserved names: nil, true, false, self, super, and Smalltalk

	Variable scope:
		- Global: defined in Dictionary Smalltalk and accessible by all objects in system
		- Special: (reserved) Smalltalk, super, self, true, false, & nil
		- Method Temporary: local to a method
		- Block Temporary: local to a block
		- Pool: variables in a Dictionary object
		- Method Parameters: automatic local vars created as a result of message call with params
		- Block Parameters: automatic local vars created as a result of value: message call	
		- Class: shared with all instances of one class & its subclasses
		- Class Instance: unique to each instance of a class
		- Instance Variables: unique to each instance

	Comments are enclosed in quotes
	Period (.) is the statement separator
	
	Expressions are evaluated left-to-right.
	Message precedence: unary, binary, then keyword.
	
	A message within parentheses is sent before any messages outside the parentheses.
	Expressions with parentheses can alternatively be written with ''::'' as in the following examples..."
	
BrowserWindow fullOnClass: Parser class selector: #chainExamplesDoubleColon.
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:07:25'!
time
	"Time"
	^
'| x y b d1 d2 w |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Time dateAndTimeNow.			"answer the current date and time"
x _ Time now.							"answer the current time"
b _ (555 factorial) > 1.			"expend some time"
y _ Time now - x.						"time difference"
b _ x < Time now.						"compare times"
b _ y = x.								"check if equal"
d1 _ Time now asDurationSinceMidnight.
d2 _ Time now asDurationSinceMidnight.
y _ x hhmm24.							"Return a string of the form 2154 (for 9:54 pm), of exactly 4 digits"
y _ x hour.								"answer the number of hours in the receiver"
y _ x hour12.
y _ x hour24.
y _ x meridianAbbreviation.		"answer ''AM'' or ''PM''"
y _ x minute.							"answer the number of minutes in the receiver"
y _ x nanoSecond.						"answer the number of nanoSeconds in the receiver"
y _ x print24.							"Return microseconds expressed in 24-hour format"
String streamContents: [:s | Time now print24: true on: s].	"Format is ''hh:mm:ss'' if true or ''h:mm:ss am'' if false"
y _ x printMinutes.						"Return as string ''hh:mm pm''  "
String streamContents: [:s | Time now printOn: s].
y _ x second.							"answer the number of seconds in the receiver"
String streamContents: [:s | Time now storeOn: s].
x _ Time millisecondsToRun: [		"timing facility"
   1 to: 1000 do: [:index | y _ 400 factorial * index]].

w _ Time localMillisecondClock.	"milliseconds since the Smalltalk epoch"
"The Smalltalk epoch began at 00:00 on the morning of January 1, 1901, in the local host time zone."
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:08:36'!
transcript
	"Transcript"
	^
'TranscriptWindow openTranscript.	"in case one is not open already"
Transcript clear.						"clear the transcript window"
Transcript show: ''Hello World''.	"output string in transcript window"
Transcript nextPutAll: ''Hello World''.	"output string in transcript window"
Transcript nextPut: $A.				"output character in transcript window"
Transcript space.						"output space character in transcript window"
Transcript tab.						"output tab character in transcript window"
Transcript newLine.					"linefeed"
''Hello'' printOn: Transcript.		"append print string into the window"
''Hello'' storeOn: Transcript.		"append store string into the window"
Transcript endEntry.					"flush the output buffer"

"NOTE: from the pop-up menu, you can open a snapshot of the transcript in a workspace window."
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/23/2016 12:21'!
trie
	"Trie"
	^
'| t |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
t _ Trie new.
t add: ''car''.
t at: ''car'' put: Float pi.
t at: ''cat'' put: Date today.
t explore.
(t includesKey: ''car'') print.
(t includes: ''cat'') print.
t at: ''crow'' put: 7.
t forPrefix: ''c'' keysAndValuesDo: [:key :val | {key} print].
t forPrefix: ''ca'' keysAndValuesDo: [:key :val | {key} print].

t _ Trie new.
Smalltalk allImplementedMessages do: [ :s | t add: s ].
t explore.

'
! !
!TerseGuideHelp class methodsFor: 'displaying' stamp: 'dhn 11/14/2015 13:08'!
display: aSelector    
	"Open a Workspace on the text in aSelector"    
	| window |
	  
	window _ TerseGuideHelp new.    
	window 	actualContents: (self perform: aSelector).    
	window	openLabel: ('Terse Guide to ', (self class firstPrecodeCommentFor: aSelector))! !
!TerseGuideHelp class methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:33:41'!
additionalTopicTitles

	^ (self additionalTopics collect: [ :topic | topic title ]) asArray! !
!TerseGuideHelp class methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:34:27'!
additionalTopics
	"Topics that can be dynamically added by creating subclasses of TerseGuideTopic"

	^ TerseGuideTopic allSubclasses collect: [ :topicClass | topicClass new ]! !
!TerseGuideHelp class methodsFor: 'accessing' stamp: 'jmv 5/6/2020 11:11:26'!
pages
	"Answer the topics, in order, for the window list pane"
	^ #(
		'Introduction'
		'Syntax'
		'Transcript'
		'Assignment'
		'Literals'
		'Booleans'
		'Arithmetic'
		'Bit-Wise'
		'Conversion'
		'Blocks'
		'Exceptions'
		'Method Calls'
		'Conditional Statements'
		'Iterations'
		'Character'
		'Symbols'
		'Strings'
		'Fonts'
		'Arrays'
		'Ordered Collections'
		'Sorted Collections'
		'Bags'
		'Sets'
		'Intervals'
		'Associations'
		'Dictionary'
		'Trie'
		'Heap'
		'Internal Streams'
		'Coding'
		'File Operations'
		'Features'
		'Date'
		'Time'
		'Point'
		'Rectangle'
		'Forms'
		'Canvas'
		'Colors'
		'Morphs'
		'Layout Morph'
		'Layout Spec'
		'PopUpMenu'
		'Dynamic Messages'
		'Object'
		'Metaclass'
		'Debugging'
		'Miscellaneous'
		'Primitives'
		'Custom Browsers'
	) , self additionalTopicTitles! !
!TerseGuideWindow methodsFor: 'initialization' stamp: 'dhn 6/15/2016 19:03'!
buildMorphicWindow
	"Define the window layout for Terse Guide"
	| row |
	
	list1 _ (PluggableListMorph
				model: model
				listGetter: #topicList
				indexGetter: #topicListIndex
				indexSetter: #topicListIndex:
				mainView: self
				menuGetter: nil
				keystrokeAction: nil)
					name: 'Topic List'.
	textModelM _ TextModelMorph withModel: model.
	textModelM
		askBeforeDiscardingEdits: false;
		name: 'Work Space'.
	model when: #topicListIndex send: #update: to: list1 withArguments: #(#topicListIndex).
	row _ LayoutMorph newRow.
	row
		name: #Row;
		addMorph: list1 proportionalWidth: 0.2;
		addAdjusterAndMorph: textModelM proportionalWidth: 0.8.
	self layoutMorph
		addMorph: row.
	self setLabel: 'Terse Guide'! !
!TerseGuideWindow methodsFor: 'accessing' stamp: 'dhn 5/17/2016 21:21'!
textModelM
	"Answer the value of textModelM"

	^ textModelM! !
!TerseGuideWindow class methodsFor: 'instance creation' stamp: 'dhn 5/17/2016 21:21'!
openTerseGuide
"
	TerseGuideWindow openTerseGuide.
"
	| window help |

	(window _ TerseGuideWindow open: (help _ TerseGuideHelp new) label: 'Terse Guide')
		setWindowColor:  Theme current workspace.
	help textPane: window textModelM.
	help 
		contents: '';
		window: window! !
!TerseGuideTopic methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:02:39'!
examples

	^ #()! !
!TerseGuideTopic methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:37:27'!
script

	^ String streamContents: [ :stream |
		self examples do: [ :example |
			self append: example toScript: stream
		]
	]! !
!TerseGuideTopic methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:02:32'!
title

	self subclassResponsibility! !
!TerseGuideTopic methodsFor: 'private - script building' stamp: 'RNG 7/15/2018 01:38:22'!
append: example toScript: stream

	stream
		nextPutAll: (example at: #code);
		nextPutAll: '. ';
		nextPutAll: (self commentFor: example);
		newLine! !
!TerseGuideTopic methodsFor: 'private - script building' stamp: 'RNG 7/15/2018 01:38:32'!
commentFor: example

	^ '"' , (example at: #category) , ' - ' , (example at: #description) , '"'! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:06:06' prior: 50608059!
findsOddsPart3a

	|elements index doubledElements|
	
	elements := #(1 2 5 6 9).
	doubledElements := OrderedCollection new.
	index := 1.
	
	[index <= elements size] whileTrue: [
		doubledElements add: ((elements at: index) * 2).
	].
	
	^ elements.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:06:16' prior: 50610991!
findsOddsPart3a

	|elements index doubledElements|
	
	elements := #(1 2 5 6 9).
	doubledElements := OrderedCollection new.
	index := 1.
	
	[index <= elements size] whileTrue: [
		doubledElements add: ((elements at: index) * 2).
	].
	
	^ doubledElements .! !

----STARTUP---- (16 April 2023 22:08:23) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!

!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:42:02' prior: 50604985!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | ]

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:50:48' prior: 50611017!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | (element odd) ifTrue: [odds add element]].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:51:26' prior: 50611025!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:51:42' prior: 50611034!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add: element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:52:15'!
findsOddsPart2

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	
	elements do: [:element | 
		(element odd) ifTrue: [odds add: element]
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 21:56:25' prior: 50611052!
findsOddsPart2

	|elements|
	
	elements := #(1 2 5 6 9).
	
	^ elements select: [:element | element odd].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:00:04'!
findsOddsPart3a

	|elements index|
	
	elements := #(1 2 5 6 9).
	index := 1.
	
	[index <= elements size] whileTrue: []
	
	
	^ elements.! !

!classDefinition: #TerseGuideHelp category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
Workspace subclass: #TerseGuideHelp
	instanceVariableNames: 'topics topicListIndex selectedTopic topicList window textPane'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: #TerseGuideHelp category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
Workspace subclass: #TerseGuideHelp
	instanceVariableNames: 'topics topicListIndex selectedTopic topicList window textPane'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: 'TerseGuideHelp class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
TerseGuideHelp class
	instanceVariableNames: 'topics'!

!classDefinition: 'TerseGuideHelp class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
TerseGuideHelp class
	instanceVariableNames: 'topics'!

!classDefinition: #TerseGuideWindow category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
WorkspaceWindow subclass: #TerseGuideWindow
	instanceVariableNames: 'textModelM list1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: #TerseGuideWindow category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
WorkspaceWindow subclass: #TerseGuideWindow
	instanceVariableNames: 'textModelM list1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: 'TerseGuideWindow class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
TerseGuideWindow class
	instanceVariableNames: ''!

!classDefinition: 'TerseGuideWindow class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
TerseGuideWindow class
	instanceVariableNames: ''!

!classDefinition: #TerseGuideTopic category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
Object subclass: #TerseGuideTopic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: #TerseGuideTopic category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
Object subclass: #TerseGuideTopic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerseGuide'!

!classDefinition: 'TerseGuideTopic class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
TerseGuideTopic class
	instanceVariableNames: ''!

!classDefinition: 'TerseGuideTopic class' category: 'TerseGuide' stamp: 'sm 4/16/2023 22:08:26'!
TerseGuideTopic class
	instanceVariableNames: ''!
!TerseGuideHelp commentStamp: 'dhn 3/7/2015 13:20' prior: 0!
TerseGuideHelp is adapted from the Squeak terse guide by Chris Rathman (http://www.angelfire.com/tx4/cus/notes/smalltalk.html), maintained on the swiki at http://wiki.squeak.org/squeak/5699. Copyrights and credit for the original document belong to Chris Rathman.

Examples of use include:

TerseGuideHelp display: #arithmetic
TerseGuideHelp display: #array
TerseGuideHelp display: #transcript

TerseGuideHelp also serves as the model for TerseGuideWindow, which can be opened by:

TerseGuideWindow openTerseGuide
!
!TerseGuideWindow commentStamp: 'dhn 3/5/2016 21:50' prior: 0!
Show a terse guide to Cuis in a system window. The window has a text pane with a list pane beside it. The text pane is a kind of Workspace which has the behavior that statements in it can be Done (Cmd-d) or Printed (Cmd-p) in order to observe their effect.

TerseGuideWindow openTerseGuide
!
!TerseGuideTopic commentStamp: '<historical>' prior: 0!
I represent a topic that can be added to the TerseGuide. Subclasses of me should implement #title and #examples. For instance:

>>title
    ^ 'Numbers'

>> examples
     ^ {
            { #code -> '4 factorial' . #category -> 'Common functions' . #description -> 'factorial' } as: Dictionary.
            { #code -> '2 even' . #category -> 'Common functions' . #description -> 'check if a number is even' } as: Dictionary.
        }!
!TerseGuideHelp methodsFor: 'topics' stamp: 'RNG 7/15/2018 01:31:53'!
addAdditionalTopicsTo: topicsList
	
	self class additionalTopics do: [ :each |
		topicsList at: each title put: each
	].! !
!TerseGuideHelp methodsFor: 'topics' stamp: 'jmv 5/6/2020 11:10:35'!
coreTopics
	
	^ `Dictionary new
	at: 'Arithmetic' put: #arithmetic;
	at: 'Arrays' put: #array;
	at: 'Assignment' put: #assignment;
	at: 'Associations' put: #association;
	at: 'Bags' put: #bag;
	at: 'Bit-Wise' put: #bitwise;
	at: 'Blocks' put: #block;
	at: 'Booleans' put: #boolean;
	at: 'Canvas' put: #canvas;
	at: 'Character' put: #character;
	at: 'Coding' put: #coding;
	at: 'Colors' put: #colors;
	at: 'Conditional Statements' put: #conditionalStatement;
	at: 'Conversion' put: #conversion;
	at: 'Date' put: #date;
	at: 'Debugging' put: #debugging;
	at: 'Dictionary' put: #dictionary;
	at: 'Dynamic Messages' put: #dynamic;
	at: 'Exceptions' put: #exceptions;
	at: 'Features' put: #feature;
	at: 'File Operations' put: #fileMan;
	at: 'Fonts' put: #font;
	at: 'Forms' put: #form;
	at: 'Heap' put: #heap;
	at: 'Internal Streams' put: #internalStream;
	at: 'Intervals' put: #interval;
	at: 'Introduction' put: #introduction;
	at: 'Iterations' put: #iterationStatement;
	at: 'Layout Morph' put: #layoutMorph;
	at: 'Layout Spec' put: #layoutSpec;
	at: 'Literals' put: #literals;
	at: 'Metaclass' put: #metaclass;
	at: 'Method Calls' put: #methodCall;
	at: 'Miscellaneous' put: #misc;
	at: 'Morphs' put: #morph;
	at: 'Object' put: #anObject;
	at: 'Ordered Collections' put: #orderedCollection;
	at: 'Point' put: #point;
	at: 'PopUpMenu' put: #popUpMenu;
	at: 'Primitives' put: #primitive;
	at: 'Rectangle' put: #rectangle;
	at: 'Sets' put: #set;
	at: 'Sorted Collections' put: #sortedCollection;
	at: 'Strings' put: #string;
	at: 'Symbols' put: #symbol;
	at: 'Syntax' put: #syntax;
	at: 'Time' put: #time;
	at: 'Transcript' put: #transcript;	
	at: 'Trie' put: #trie;
	at: 'Custom Browsers' put: #customBrowsers;
	yourself`! !
!TerseGuideHelp methodsFor: 'topics' stamp: 'RNG 7/15/2018 01:31:23'!
terseTopics
	"Translate a list item to a class method selector"
	|allTopics|
	allTopics _ self coreTopics.
	self addAdditionalTopicsTo: allTopics.
	^ allTopics! !
!TerseGuideHelp methodsFor: 'initialization' stamp: 'dhn 5/17/2016 16:50' overrides: 16981503!
initialize
	super initialize.
	topics _ self terseTopics.
	topicList _ self class pages.
! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 6/15/2016 18:29'!
selectedTopic: aTopic
	"Set the value of selectedTopic and set the contents of the text pane"
	
	selectedTopic _ aTopic.
	textPane model actualContents: self updateTopicText.
	self triggerEvent: #topicListIndex! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 2/26/2015 07:59'!
topicList
	^ topicList! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 2/26/2015 08:42'!
topicListIndex
	topicList ifNil: [ ^ topicListIndex _ 0 ].
	^ topicList indexOf: selectedTopic! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'dhn 10/18/2015 20:20'!
topicListIndex: index
	"Set the vakue of topicListIndex and set the value of selectedTopic"
	
	topicListIndex _ index.
	self selectedTopic: 
		(topicList at: index ifAbsent: nil)! !
!TerseGuideHelp methodsFor: 'user interface support' stamp: 'RNG 7/15/2018 01:45:10'!
updateTopicText
	"Answer the text of the selected topic and change the window label accordingly"
	| topic topicTitle |
	
	topicListIndex = 0 ifTrue: [ window setLabel: 'Terse Guide'. ^ ''].
	topic _ topics at: selectedTopic.
	topicTitle _ topic isSymbol ifTrue: [ self terseTopics keyAtValue: topic ] ifFalse: [ topic title ].
	window setLabel: ('Terse Guide to ', topicTitle).
	^ topic isSymbol ifTrue: [ self class perform: topic ] ifFalse: [ topic script ]! !
!TerseGuideHelp methodsFor: 'accessing' stamp: 'dhn 10/18/2015 20:01'!
textPane: anObject
	"Set the value of textPane"
	
	textPane _ anObject! !
!TerseGuideHelp methodsFor: 'accessing' stamp: 'dhn 2/27/2015 21:07'!
window: anObject
	"Set the value of window"

	window _ anObject! !
!TerseGuideHelp methodsFor: 'testing' stamp: 'jmv 5/29/2020 16:30:16' overrides: 16981603!
styleByParagraphs
	"Answer true if each paragraph should be styled independent of the others.
	We want to allow mutil-paragraph comments, and we are careful for our contents to be valid Smalltalk."

	^false! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 13:18:04'!
anObject
	"Object"
	^
'| x y |
x _ self activeHand.
	"Answer a hand for the morphic world that is the current UI focus.
	This is the UI root animated by the active Process.
	This method could answer nil, if not in a UI process!!"

y _ self as: HandMorph.
	"Create an object of class aSimilarClass that has similar contents to the receiver."

y _ x asString.
	"Answer a string that represents the receiver."

x _ #foo.
y become: x. 
	"Swap the object pointers of the receiver and the argument.
	Fails if either object is a SmallInteger"

self break.
	"This is a simple message to use for inserting breakpoints during debugging.
	The debugger is opened by sending a signal. This gives a chance to restore
	invariants related to multiple processes."

y changed.
	"Receiver changed in a general way; inform all the dependents by 
	sending each dependent an update: message."

x class.
	"Answer the object which is the receiver''s class."

x className.
	"Answer a string characterizing the receiver''s class, for use in list views for example"

nil confirm: ''Are you hungry?''.	
	"Put up a yes/no menu with a caption. Answer true if the response 
	is yes, false if no. This is a modal question--the user must respond 
	yes or no."

x _ nil confirm: ''Are you hungry?'' orCancel: [x _ ''perhaps''].
	"Put up a yes/no/cancel menu with caption aString. Answer true if  
	the response is yes, false if no. If cancel is chosen, evaluate  
	cancelBlock. This is a modal question--the user must respond yes, no, or cancel."

y disableCode: [nil confirm: ''Is this necessary?''.].
	"Use this method instead of commenting temporarily disabled code.
	This way, it will be accessible with senders, references to variables, etc.
	Besides, you''ll avoid problems when the code to disable has comments!!"

y disableCode: [self executeMethod: #fullPrintString. "Execute compiledMethod against the receiver with no args"].

x fullPrintString.
	"Answer a String whose characters are a description of the receiver."

self halt.
	"This is the typical message to use for inserting breakpoints during 
	debugging. It behaves like halt:, but does not call on halt: in order to 
	avoid putting this message on the stack. Halt is especially useful when 
	the breakpoint message is an arbitrary one."

self halt: ''something to aid debugging''.
	"This is the typical message to use for inserting breakpoints during 
	debugging. It creates and schedules a Notifier with a label."

self inboundPointers.  "Answers a collection of all objects in the system that point to myself"

self inboundPointersExcluding: #().  "Answer a list of all objects in the system that point to me, excluding those in the collection of objectsToExclude. I do my best to avoid creating any temporary objects that point to myself"

nil inform: ''Nothing exceeds like excess.''.  "Display a message for the user to read and then dismiss."

x inspectWithLabel: ''Interesting Instance''.  "Create and schedule an Inspector labelled aLabel."

x isKindOf: Set. 	"Answer whether the argument is a superclass or class of the receiver."

y isMemberOf: Symbol. 
	"Answer whether the receiver is an instance of the argument class"

y longPrintString.
	"Answer a String whose characters are a description of the receiver."

nil notify: ''this is a notice''. 
	"Create and schedule a Notifier with the argument as the message in 
	order to request confirmation before a process can proceed."

x _ y outboundPointers.
"Answers a list of all objects I am causing not to be garbage-collected"

x perform: #asBag. 
	"Send the unary selector, a symbol, to the receiver.
	Fail if the number of arguments expected by the selector is not zero."

x perform: #at: with: 2. 
	"Send the selector, a symbol, to the receiver with an argument.
	Fail if the number of arguments expected by the selector is not one."

x perform: #at:put: with: 2 with: ''bar''. 
	"Send the selector, a symbol, to the receiver with the given arguments.
	Fail if the number of arguments expected by the selector is not two."

x perform: #at:put: withArguments: {2. 17.6}. 
	"Send the selector, a symbol, to the receiver with arguments in an array.
	Fail if the number of arguments expected by the selector does not match 
	the size of the array."

y printOn: String new writeStream.
	"Append to the argument, a stream, a sequence of characters that  
	identifies the receiver."

nil shouldBeImplemented.
	"Announce that this message should be implemented"

nil shouldNotImplement.
	"Announce that, although the receiver inherits this message, it should 
	not implement it."

y storeOn: String new writeStream. 
	"Append to the argument a sequence of characters that is an 
	expression whose evaluation creates an object similar to the receiver."

y storeString.
	"Answer a String representation of the receiver from which the receiver 
	can be reconstructed."

self subclassResponsibility.
	"This message sets up a framework for the behavior of the class'' subclasses.
	 Announce that the subclass should have implemented this message."

self triggerEvent: #mouseOver.
	"Evaluate all actions registered for the argument, an EventSelector. Return the 
	value of the last registered action."

x yourself.

y ~= #foo. 
	"Answer whether the receiver and the argument do not represent the 
	same object."

y ~~ #foo. 
	"Answer whether the receiver and the argument are not the same object 
	(do not have the same object pointer)."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 13:43:44'!
arithmetic
	"Arithmetic Expressions"
	^
'| x y |
x _ 6 + 3.								"addition"
x _ 6 - 3.								"subtraction"
x _ 6 * 3.								"multiplication"
x _ 1 + 2 * 3.							"evaluation always left to right (1 + 2) * 3"
x _ 5 / 3.								"division with fractional result"
x _ 5 / 3.0.							"division with float result"
x _ 5.0 // 3.0.						"integer divide"
x _ 5.0 \\ 3.0.						"integer remainder"
x _ -5.									"unary minus"
x _ 5 sign.								"numeric sign (1, -1 or 0)"
x _ 5 negated.							"negate receiver"
x _ 1.2 integerPart.					"integer part of number (1.0)"
x _ 1.2 fractionPart.				"fractional part of number (0.2)"
x _ 5 reciprocal.						"reciprocal function"
x _ 6 * 3.1.							"auto convert to float"
x _ 5 squared.							"square function"
x _ 25 sqrt.							"square root"
x _ 5 raisedTo: 2.					"power function"
x _ 5 raisedToInteger: 2.			"power function with integer"
x _ 5 exp.								"exponential"
x _ -5 abs.								"absolute value"
x _ 3.99 rounded.						"round"
x _ 3.99 truncated.					"truncate"
x _ 3.99 roundTo: 1.					"round to specified decimal places"
x _ 3.99 truncateTo: 1.				"truncate to specified decimal places"
x _ 3.99 floor.						"integer nearest the receiver toward negative infinity"
x _ 3.99 ceiling.						"integer nearest the receiver toward  infinity"
x _ 5 factorial.						"factorial"
x _ -5 quo: 3.							"integer divide rounded toward zero"
x _ -5 rem: 3.							"integer remainder rounded toward zero"
x _ 28 gcd: 12.						"greatest common divisor"
x _ 28 lcm: 12.						"least common multiple"
x _ 28 mod: 12.						"modulo"
x _ 100 ln.								"natural logarithm"
x _ 100 log.							"base 10 logarithm"
x _ 100 log: 10	.					"logarithm with specified base"
x _ 100 floorLog: 10.				"floor of the log"
x _ 180 degreesToRadians.			"convert degrees to radians"
x _ 3.14 radiansToDegrees.			"convert radians to degrees"
x _ 0.7 sin.							"sine"
x _ 0.7 cos.							"cosine"
x _ 0.7 tan.							"tangent"
x _ 0.7 arcSin.						"arcsine"
x _ 0.7 arcCos.						"arccosine"
x _ 0.7 arcTan.						"arctangent"
x _ 10 max: 20.						"get maximum of two numbers"
x _ 10 min: 20.						"get minimum of two numbers"
x _ Float pi.							"pi"
x _ Float e.							"exp constant"
x _ Float infinity.					"infinity"
x _ Float nan.							"not-a-number"
x _ Random new next; yourself.	"establish a local pseudo-random number generator"
x next.									"random number on the interval (0.0,1.0)"
y _ 100 atRandom.						"random integer on the interval (1,receiver)"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:04:52'!
array
	"Arrays"
	^
'"
	Array:              Fixed length collection
	ByteArray:     Array limited to byte elements (0-255)
	WordArray:    Array limited to word elements (0-2^32)
"
| b x y sum max |	"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ #(4 3 2 1).								"constant array"
x _ Array with: 5 with: 4 with: 3 with: 2.         "create array with 4 elements"
x _ Array new: 4.								"allocate an array with specified size"
x													"set array elements"
   at: 1 put: 5;
   at: 2 put: 4;
   at: 3 put: 3;
   at: 4 put: 7;
   yourself.									"without this, x will be 7 (the last element)"

b _ x isEmpty.									"test if array is empty"
y _ x size.										"array size"
y _ x at: 4.									"get array element at index"
b _ x includes: 3.							"test if element is in array"
y _ x copyFrom: 2 to: 4.					"subarray"
y _ x indexOf: 3 ifAbsent: [0].			"first position of element within array"
y _ x occurrencesOf: 3.						"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].  "iterate over the array"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].				"return collection of elements that pass test"
y _ x reject: [:a | a < 2].				"return collection of elements that fail test"
y _ x collect: [:a | a + a].				"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].	"return first element that passes test"
y _ x findFirst: [:a | a < 3].			"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum array elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)].  "sum array elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum array elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in array"
   ifTrue: [a]
   ifFalse: [c]].
y _ x shuffled.								"randomly shuffle collection"
y _ x asArray.									"convert to array"
y _ x asByteArray.							"convert to byte array"
y _ x asWordArray.							"convert to word array"
y _ x asOrderedCollection.					"convert to ordered collection"
y _ x asSortedCollection.					"convert to sorted collection"
y _ x asBag.									"convert to bag collection"
y _ x asSet.									"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 17:09:56'!
assignment
	"Assignment"
	^
'| x y z |
"either the Cuis or the ASCII convention can be used for assignment"
x _ 4.								"assignment (Cuis) using the underline character ($_)"
z := 7.								"assignment (ASCII)"
x _ y _ z _ 6.						"compound assignment"
x _ (y _ 6) + 1.
x _ Object new.					"bind to an allocated instance of a class"
x _ 123 class.						"discover the class of the object"
x _ Integer superclass.			"discover the superclass of a class"
x _ Object allInstances.		"get an array of all instances of a class"
x _ Integer allSuperclasses.	"get all superclasses of a class"
x _ 1.2 hash.						"hash value for object"
y _ x copy.							"copy the object"
y _ x shallowCopy.				"copy the object (not overridden)"
y _ x veryDeepCopy.				"complete tree copy using a dictionary"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 6/7/2015 12:37'!
association
	"Associations"
	^
'| x y |
x _ #myVar->''hello''.		"Create an association"
y _ x key.
y _ x value.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:11:33'!
bag
	"Bags"
	^
'| b x y sum max |
x _ Bag with: 4 with: 3 with: 2 with: 1.	"create a Bag collection with 4 elements"
x _ Bag new.										"allocate collection"
x add: 4; add: 3; add: 1; add: 2; yourself.	"add element to collection; see NOTE"
x add: 3 withOccurrences: 2.					"add multiple copies to collection"
y _ x addAll: #(7 8 9).							"add elements to the collection and answer the added elements; see NOTE"
y _ x removeAll: #(7 8 9).						"remove elements from the collection and answer the removed elements; see NOTE"
y _ x remove: 4 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
b _ x includes: 3.								"test if element is in collection"
y _ x occurrencesOf: 3.							"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

"NOTE: methods in subclasses of Collection, of which Bag is one, answer
 the ARGUMENT instead of the resulting collection. Examples of such 
 methods are #addAll: and #removeAll:. Sending #yourself to the collection
 will answer the collection instead of the argument."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 9/5/2015 20:34'!
bitwise
	"Bitwise Manipulation"
	^
'| b x |
x _ 16rFF bitAnd: 16r0F.			"and bits"
x _ 16rF0 bitOr: 16r0F.				"or bits"
x _ 16rFF bitXor: 16r0F.			"xor bits"
x _ 16rFF bitInvert.					"invert bits"
x _ 16r0F bitShift: 4.				"left shift"
x _ 16rF0 bitShift: -4.				"right shift"
x _ 16r80 bitAt: 8.					"bit at position (0|1)"
x _ 16r80 highBit.					"position of highest bit set"
b _ 16rFF allMask: 16r0F.			"test if all bits set in mask are set in receiver"
b _ 16rFF anyMask: 16r0F.			"test if any bits set in mask are set in receiver"
b _ 16rFF noMask: 16r0F.			"test if all bits set in mask are clear in receiver"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:17:04'!
block
	"Blocks"
	^
'"
	Blocks:
		- blocks are objects and may be assigned to a variable
		- value is last expression evaluated unless explicit return
		- blocks may be nested
		- specification [ arguments | | localvars | expressions ]	
		- ^expression terminates block & method (exits all nested blocks)
		- blocks intended for long term storage should not contain ^
"
| x y z fac |
x _ [ y _ 1. z _ 2. ]. x value.					"simple block usage"
x _ [ :argOne :argTwo |   argOne, '' and '' , argTwo.].     "set up block with argument passing"
Transcript show: (x value: ''First'' value: ''Second''); newLine.  "use block with argument passing"
x _ [:e | | v | v _ 1. e + v] value: 2.		"localvar in a block"
fac _ [ :n | n > 1 ifTrue:  [n * (fac value: n-1)] ifFalse: [1]].  "closure on block variable"
fac value: 5.											"closure variable scoped to its block"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:19:28'!
boolean
	"Booleans"
	^
'| b x y |
x _ 1. y _ 2.
b _ (x = y).							"equals"
b _ (x ~= y).							"not equals"
b _ (x == y).							"identical"
b _ (x ~~ y).							"not identical"
b _ (x > y).							"greater than"
b _ (x < y).							"less than"
b _ (x >= y).							"greater than or equal"
b _ (x <= y).							"less than or equal"
b _ b not.								"boolean not"
b _ (x < 5) & (y > 1).				"boolean and"
b _ (x < 5) | (y > 1).				"boolean or"
b _ (x < 5) and: [y > 1].			"boolean and (short-circuit)"
b _ (x < 5) or: [y > 1].			"boolean or (short-circuit)"
b _ (x < 5) eqv: (y > 1).			"test if both true or both false"
b _ (x < 5) xor: (y > 1).			"test if one true and other false"
b _ 5 between: 3 and: 12.			"between (inclusive)"
b _ 123 isKindOf: Number.			"test if object is class or subclass of"
b _ 123 isMemberOf: SmallInteger.	"test if object is type of class"
b _ 123 respondsTo: #sqrt.			"test if object responds to message"
b _ x isNil.							"test if object is nil"
b _ x isZero.							"test if number is zero"
b _ x positive.						"test if number is positive"
b _ x strictlyPositive.				"test if number is greater than zero"
b _ x negative.						"test if number is negative"
b _ x even.								"test if number is even"
b _ x odd.								"test if number is odd"
b _ x isLiteral.						"test if literal constant"
b _ x isInteger.						"test if object is integer"
b _ x isFloat.							"test if object is float"
b _ x isNumber.						"test if object is number"
b _ x isSymbol.						"test if object is a Symbol"
b _ $A isUppercase.					"test if upper case character"
b _ $A isLowercase.					"test if lower case character"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/19/2016 20:44'!
canvas
	"Canvas"
	^
'| x y |

"
	There is no Canvas class.
	
	A canvas is produced by sending #getCanvas to a Form.
"

x _ Form extent: 200@100 depth: 32.	"Answer a form with color depth 32"

y _ x getCanvas.							"convert form to canvas (a BitBltCanvas)"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:20:26'!
character
	"Character"
	^
'| x y b |
x _ $A.										"character assignment"
y _ x isLowercase.						"test if lower case"
y _ x isUppercase.						"test if upper case"
y _ x isLetter.							"test if letter"
y _ x isDigit.								"test if digit"
y _ x isAlphaNumeric.					"test if alphanumeric"
y _ x isSeparator.						"test if seperator char"
y _ x isVowel.								"test if vowel"
y _ x digitValue.							"convert to numeric digit value"
y _ x asLowercase.						"convert to lower case"
y _ x asUppercase.						"convert to upper case"
y _ x asciiValue.							"convert to numeric ascii value"
y _ x asString.							"convert to string"
b _ $A <= $B.								"comparison"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 3/9/2019 11:52:37'!
coding
	"Code Patterns"
	^
'"
These are Cuis code patterns intended to help the programmer exploit some of the features of Cuis classes. The examples separate the model from the view and feature two styles: coupled and decoupled.

The coupled style employs the ''dependency mechanism'' and requires the model to change when the view changes and when views which use the model are added. The primary methods of the dependency mechanism are #changed: and #update: .

The decoupled style employs the ''observer pattern'' which ensures that the model can remain unaffected by changes to the view or by additional views. The primary methods of the observer pattern are #triggerEvent: and #when:send:to: . This is the preferred style for Cuis, although both styles can be found in the base.
"
| b n |

"To examine the patterns, in the parent directory which contains Cuis-Smalltalk-Dev* do the following:
	''git clone https://github.com/Cuis-Smalltalk/CodeExamples''
	
then, do the following:	
"
Feature require: #''Code-Patterns''.				"load the package"

"To browse the examples, do (Cmd-d) these statements..."

b _ BrowserWindow openBrowser.					"open a browser"
n _ b model systemCategoryList findFirst: [:a | a = #''Code-Patterns''].  "index to the above package"
b model systemCategoryListIndex: n.				"go to the system category"

"The following statements execute the examples..."

DependencyExamples relatedViews. 				"a decoupled example"
DependencyExamples unrelatedViews. 				"another decoupled example"
DependencyExamples coupledView. 					"a coupled example"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 14:38:36'!
colors
	"Colors"
	^
'
| x t arr |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"

x _ (Color r: 0 g: 0 b: 0) name.		"answer the name of the color, if possible"
x _ (Color r: 1.0 g: 1.0 b: 1.0) name.

arr _ #((0.0 0.0 0.0) (0.0 0.0 1.0) (0.0 1.0 0.0) (0.0 1.0 1.0) (1.0 0.0 0.0) (1.0 0.0 1.0) (1.0 1.0 0.0) (1.0 1.0 1.0)).
(arr collect: [:a | Color colorFrom: a]) explore.

"In the parent directory which contains Cuis-Smalltalk-Dev* do the following:
	''git clone https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-UI''

then, do the following:
"
Feature require: #''Color-Edit-Panel''. "Color Editor feature and its dependencies"

"From the menu 
      ''World>New morph...>Kernel>A-Dra'' 
select ColorEditorPanel"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:27:14'!
conditionalStatement
	"Conditional Statements"
	^
'| x switch result |
x _ 11.
x > 10 ifTrue: [Transcript show: ''ifTrue''; newLine].		"if then"
x > 10 ifFalse: [Transcript show: ''ifFalse''; newLine].	"if else"
x > 10										"if then else"
   ifTrue: [Transcript show: ''ifTrue''; newLine]
   ifFalse: [Transcript show: ''ifFalse''; newLine].
x > 10										"if else then"
   ifFalse: [Transcript show: ''ifFalse''; newLine]
   ifTrue: [Transcript show: ''ifTrue''; newLine].
Transcript
   show:
      (x > 10
         ifTrue: [''ifTrue'']
         ifFalse: [''ifFalse'']);
   newLine.
Transcript																"nested if then else"
   show:
      (x > 10
         ifTrue: [x > 5
            ifTrue: [''A'']
            ifFalse: [''B'']]
         ifFalse: [''C'']);
   newLine.
switch _ Dictionary new.											"switch (case) functionality"
switch at: $A put: [Transcript show: ''Case A''; newLine].
switch at: $B put: [Transcript show: ''Case B''; newLine].
switch at: $C put: [Transcript show: ''Case C''; newLine].
result _ (switch at: $B) value.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:33:43'!
conversion
	"Conversion"
	^
'| x |
x _ 3.99 asInteger.			"convert number to integer (truncates in Cuis)"
x _ 3.99 asFraction.			"convert number to fraction"
x _ 3 asFloat.					"convert number to float"
x _ 65 asCharacter.			"convert integer to character"
x _ $A asciiValue.			"convert character to integer"
x _ 3.99 printString.		"convert object to string via printOn:"
x _ 3.99 storeString.		"convert object to string via storeOn:"
x _ 15 printStringBase: 16.
x _ 15 storeStringBase: 16.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'RNG 12/13/2019 13:07:13'!
customBrowsers
	"Custom Browsers"
	^
'"Open a window with all methods from a particular category"
Smalltalk 
	browseMessageList: (Smalltalk allMethodsInCategory: ''testing'')
	name: ''Testing methods''
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:38:28'!
date
	"Date"
	^
'| w x y b block str fmt |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Date today.								"create date for today"
w _ Date dateAndTimeNow.					"create array with current date and time"
x _ Date newDay: 12 month: #July year: 1999.	"create date from parts"
x _ Date fromDays: 36002.					"create date from elapsed days since 1/1/1901"
y _ Date dayOfWeek: #Monday.				"day of week as int (1-7)"
y _ Date indexOfMonth: #August.			"month of year as int (1-12)"
y _ Date daysInMonth: 2 forYear: 1996.	"day of month as int (1-31)"
y _ Date daysInYear: 1996.					"days in year (365|366)"
y _ Date nameOfDay: 1.						"weekday name (#Monday,...)"
y _ Date nameOfMonth: 3.					"month name (#January,...)"
y _ Date leapYear: 1997.					"1 if leap year; 0 if not leap year"
y _ x weekday.									"day of week (#Monday,...)"
y _ x previous: #Monday.					"date for previous day of week (one week ago)"
y _ x dayOfMonth.								"day of month (1-31)"
y _ x firstDayOfMonth.						"day of year for first day of month"
y _ x monthName.								"month of year (#January,...)"
y _ x monthIndex.								"month of year (1-12)"
y _ x daysInMonth.							"days in month (1-31)"
y _ x year.										"year (19xx)"
y _ x daysInYear.								"days in year (365|366)"
y _ x daysLeftInYear.						"days left in year (364|365)"
y _ x printFormat: #(2 1 3 $/ 1 1).		"print formatted date"
b _ (x < Date today).						"comparison"
y _ x julianDayNumber.
y _ x mmddyyyy.	"Answer the receiver rendered in standard fmt mm/dd/yyyy. Note that the name #mmddyyyy is slightly misleading -- the month and day numbers don''t show leading zeros, so that for example feb 1 1996 is 2/1/96"
y _ x month.
y _ x monthAbbreviation.
y _ x monthIndex.
y _ x monthName.
fmt _ #(1 2 3 $  3 1 ).		"Specify a format for the date, in the following scheme:"
									"#(item item item sep monthfmt yearfmt twoDigits) 
									items: 1=day 2=month 3=year will appear in the order given, 
									separated by sep which is either an ascii code or character. 
									monthFmt: 1=09 2=Sep 3=September 
									yearFmt: 1=1996 2=96 
									digits: (missing or)1=9 2=09. 
									See the examples in printOn: and mmddyy"
y _ x printFormat: fmt.	 	"Answer a String describing the receiver using the format denoted by the argument, fmt"
str _ ReadWriteStream on: String new.	"Specify a stream"
y _ x printOn: str.

str _ String new writeStream.	
y _ x printOn: str format: #(3 2 1 $.  1 2 ).  "the stream, not the receiver, contains the date in the specified format"
str contents.

y _ x secondsSinceSqueakEpoch.	"Answer the seconds since the Squeak epoch: 1 January 1901"
y _ x storeOn: str.
y _ x week.
y _ x weekday. 			"Answer the name of the day of the week on which the receiver falls."
y _ x weekdayIndex. 		"Sunday=1, ... , Saturday=7"
y _ x year.
y _ x yearNumber.
y _ x yyyymmdd. 			"Format the date in ISO 8601 standard like ''2002-10-22''."
block _ [ :d :m :y | {d. m. y} ].  "Specify an order for the date"
y _ x dayMonthYearDo: block. "Supply integers for day, month and year to aBlock and return the result"
y _ x dayMonthYearDo: [ :d :m :y | {y. m. d.} ].  "Order determined by block, not method name"
y _ x dayOfMonth. 		"Answer the day of the month represented by the receiver."
y _ x dayOfWeek. 			"Answer the day of the week represented by the receiver."
y _ x dayOfWeekName. 	"Answer the day of the week represented by the receiver."
y _ x dayOfYear.			"Answer the day of the year represented by the receiver."
y _ x daysInMonth.		"Answer the number of days in the month represented by the receiver."
y _ x daysInYear.			"Answer the number of days in the year represented by the receiver."
y _ x daysLeftInYear.
y _ x firstDayOfMonth.
y _ x isLeapYear.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 4/12/2019 14:50:40'!
debugging
	"Debugging"
	^
'| a b x |
	"Some statements in this topic are designed to cause an error."
x _ Object new.
x yourself.									"returns receiver"
x inspect.									"open object inspector window"
x confirm: ''Is this correct?''.
x halt.										"breakpoint to open debugger window"
x halt: ''Halt message''.
x notify: ''Notify text''.
x error: ''Error string''.				"open up error window with title"
Smalltalk beep.
x shouldNotImplement.					"flag message should not be implemented"
x subclassResponsibility.				"flag message as abstract"
x errorImproperStore.					"flag an improper store into indexable object"
x errorNonIntegerIndex.					"flag only integers should be used as index"
x errorSubscriptBounds: 13.			"flag subscript out of bounds"
x primitiveFailed.						"system primitive failed"

a _ ''A1''. b _ ''B2''. a become: b.		"switch two objects, if neither is a SmallInteger"
Transcript show: a, b; newLine.

"Doing ''self halt.'' in Morphic code can be risky, because it can open an infinite sequence of debuggers."
{2. x. a.} print. 						"alternative to ''self halt.''"
thisContext printStack: 10.			"alternative to ''self halt.'' showing n lines of the call stack"

x doesNotUnderstand: (Message selector: #foo).  "flag that the message is not handled"

"Writing to-do notes to yourself can be done as follows:"
self flag: #someSymbol  "a reminder comment"
"...where you choose #someSymbol to be something you will not forget (your initials?)."
"Then, to retrieve all such messages, browse senders of #someSymbol using Cmd-n or the SmalltalkEditor menu."
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:52:18'!
dictionary
	"Dictionary"
	^
'"	
	Dictionary:
	IdentityDictionary:   uses identity test (== rather than =)
"
| b x y sum max aDx |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Dictionary new.							"allocate collection"
x add: #a->4; add: #b->3; add: #c->1; add: #d->2; yourself.	"add element to collection"
x at: #e put: 3.								"set element at index; see NOTE"
b _ x isEmpty.									"test if empty"
y _ x size.										"number of elements"
y _ x at: #a ifAbsent: [].					"retrieve value for key #a"
y _ x keyAtValue: 3 ifAbsent: [].		"retrieve key for given value with error block"
y _ x removeKey: #e ifAbsent: [].		"remove element from collection"
b _ x includes: 3.							"test if element is in values collection"
b _ x includesKey: #a.						"test if element is in keys collection"
y _ x occurrencesOf: 3.						"number of times object in collection"
y _ x keys.										"set of keys"
y _ x values.									"bag of values"
x do: [:a | Transcript show: a printString; newLine].  "iterate over the values collection"
x keysDo: [:a | Transcript show: a printString; newLine].  "iterate over the keys collection"
x associationsDo: [:a | Transcript show: a printString; newLine].  "iterate over the associations"
x keysAndValuesDo: [:aKey :aValue | Transcript	"iterate over keys and values"
   show: aKey printString; space;
   show: aValue printString; newLine].
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].  "test if all elements meet condition"
y _ x select: [:a | a > 2].				"return a dictionary with values that pass test"
y _ x reject: [:a | a < 2].				"return a dictionary with values that fail test"
y _ x collect: [:a | a + a].				"transform each element for new dictionary"
y _ x detect: [:a | a > 3] ifNone: [].	"return first value that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum the values"
sum _ x inject: 0 into: [:a :c | a + c].	"sum the values"
max _ x inject: 0 into: [:a :c | (a > c)	"find max value in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.									"collect values in an array"
y _ x asOrderedCollection.					"collect values in an ordered collection"
y _ x asSortedCollection.					"collect values in a sorted collection"
y _ x asBag.									"collect values in a bag"
y _ x asSet.									"collect values in a set"

Smalltalk at: #CuisGlobal put: ''Cuis entry''.	"put global in Smalltalk Dictionary"
x _ Smalltalk at: #CuisGlobal.					"read global from Smalltalk Dictionary"
Transcript show: (CuisGlobal printString).	"entries are directly accessible by name"
Smalltalk keys do: [ :k |						"print out all non-class globals"
   ((Smalltalk at: k) isKindOf: Class)
      ifFalse: [Transcript show: k printString; newLine]].
aDx _ Dictionary new.						"set up user defined dictionary"
aDx at: #MyVar1 put: ''hello1''.			"put entry in dictionary; see NOTE"
aDx add: #MyVar2->''hello2''.				"add entry to dictionary use key->value combo; see NOTE"
aDx size.		"dictionary size"
aDx keys do: [ :k |							"print out keys in dictionary"
   Transcript show: k printString; newLine].
aDx values do: [ :k |						"print out values in dictionary"
   Transcript show: k printString; newLine].
aDx keysAndValuesDo: [:aKey :aValue |	"print out keys and values"
   Transcript
      show: aKey printString;
      space;
      show: aValue printString;
      newLine].
aDx associationsDo: [:aKeyValue |		"another iterator for printing key values"
   Transcript show: aKeyValue printString; newLine].
Smalltalk removeKey: #CuisGlobal ifAbsent: [].  "remove entry from Smalltalk dictionary"

"NOTE: methods in subclasses of Collection, of which Dictionary is one, answer
 the ARGUMENT instead of the resulting collection. Examples of such 
 methods are #add: and #at:put:. Sending #yourself to the collection
 will answer the collection instead of the argument."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/24/2015 14:38'!
dynamic
	"Dynamic Message Calling/Compiling"
	^
'| receiver message result argument keyword1 keyword2 argument1 argument2 |

"unary message"
receiver _ 5.
message _ ''factorial'' asSymbol.
result _ receiver perform: message.
result _ Compiler evaluate: ((receiver storeString), '' '', message).
result _ (Message new setSelector: message arguments: #()) sentTo: receiver.

"binary message"
receiver _ 1.
message _ ''+'' asSymbol.
argument _ 2.
result _ receiver perform: message withArguments: (Array with: argument).
result _ Compiler evaluate: ((receiver storeString), '' '', message, '' '', (argument storeString)).
result _ (Message new setSelector: message arguments: (Array with: argument)) sentTo: receiver.

"keyword messages"
receiver _ 12.
keyword1 _ ''between:'' asSymbol.
keyword2 _ ''and:'' asSymbol.
argument1 _ 10.
argument2 _ 20.
result _ receiver
   perform: (keyword1, keyword2) asSymbol
   withArguments: (Array with: argument1 with: argument2).
result _ Compiler evaluate:
   ((receiver storeString), '' '', keyword1, (argument1 storeString) , '' '', keyword2, (argument2 storeString)).
result _ (Message
   new
      setSelector: (keyword1, keyword2) asSymbol
      arguments: (Array with: argument1 with: argument2))
   sentTo: receiver.

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 12/7/2015 15:50'!
exceptions
	"Exceptions"
	^
'"
To see the variety of exceptions that can be useful in Cuis, open a hierarchy browser on Error.
"
| x y |

x _  1. y _ 0.
[x / y] on: ZeroDivide do: [^ ''that is big''].

[''testFile.txt'' asFileEntry fileContents] on: MessageNotUnderstood do: [^ nil].	"avoid the exception for Cancel during the dialog"	

[''testFile.txt'' asFileEntry fileContents] on: FileDoesNotExistException do: [nil confirm: ''Rather do it yourself?''].	"avoid the file-does-not-exist dialog"	

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/23/2016 12:15'!
feature
	"Features"
	^
'"Part of the Cuis strategy to keep a clean, small kernel is the separation of system features into smaller, more easily understood Packages.

The basic idea is that a Feature is implemented by the Package(s) it contains.

You can load Features in your code or by..."

Feature require: #''Feature-Name''.

"You can also use the File List window to install a feature which can be in any directory (World Menu -> Open-> File List). After selecting a feature, click on ''installPackage''.

A feature may depend on other features and particular versions of those features.  Cuis checks for dependencies and if all dependencies are satisfied will load packages in the proper order.

You can create your own packages and add/remove feature requirements using the Package Browser.  World Menu -> Open -> Installed Packages


There are many features for Cuis available at GitHub.

In a web browser, 
1. view https://github.com
2. type ''Cuis-Smalltalk'' in the search box
3. see the number of features available.

When you invoke:"

Feature require: #''Feature-Name''.

"Cuis will search for packages (*.pck.st) which supply the feature in...

1. the image directory and its subdirectories ''Packages'' and ''CompatibilityPackages'' 
2. siblings of the image directory whose names start with ''Cuis-Smalltalk*'' and their subdirectories named ''Packages'' and ''CompatibilityPackages''.
"

Smalltalk imagePath.		"Cuis image directory"


"Additional information is available on the web page:

''https://github.com/Cuis-Smalltalk/Cuis-Smalltalk-Dev/blob/master/Documentation/CuisAndGitHub.md''


For an example of specifying feature requirements, consider the package file ''Cuis-Smalltalk-Dev/Packages/Graphics-Files-Additional.pck.st'' which can be viewed with the File List browser. It provides feature ''Graphics-Files-Additional'' and requires Feature ''Compression''. If in code or in a Workspace you invoke (Cmd-d):"

Feature require: #''Graphics-Files-Additional''.

"...then the Compression package will be loaded, followed by Graphics-Files-Additional."


Feature require: #''Core-Packages''. 		"load all core Cuis Packages"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 16:59:23'!
fileMan
	"File Operations"
	^
'| b c file dirEntry fullPath |	"For efficient viewing, have a Transcript open and use Cmd-d on these statements"

DirectoryEntry roots.						"answer the drive or drives"
c _ DirectoryEntry currentDirectory.	"answer the current directory"
''testFile.txt'' asFileEntry fileContents: ''Test me now''.  "answer the directory and name of a new file; set its contents"
''testFile.txt'' asFileEntry fileContents.	"print contents of a file"

''testFile.txt'' asFileEntry
	forceWriteStreamDo: [ :ios |			"overwrite old file contents"
		ios nextPut: $M.
		ios nextPutAll: ''y text ''.
		ios nextPutAll: ''data''.
		].
''testFile.txt'' asFileEntry fileContents.	"print contents of a file"

''testFile.txt'' asFileEntry appendStreamDo: [ :fileStream |
	fileStream newLine.
	fileStream nextPutAll: ''Second text line''; newLine.
	].
''testFile.txt'' asFileEntry fileContents. 	"print it"

''testFile.txt'' asFileEntry appendContents: ''The quick red fox''.

''testFile.txt'' asFileEntry fileContents. 	"print it"

''testFile.txt'' asFileEntry forceWriteStreamDo: [ :fileStream |  "overwrite the file"
	| refStyream sharedPoint input |
	"Construct the test data."
	refStyream _ ReferenceStream on: fileStream.
	input _ Array new: 9.
	input at: 1 put: nil.
	input at: 2 put: true.
	input at: 3 put: false.
	input at: 4 put: #(-4 -4.0 ''four'' four).
	input at: 5 put: (Form extent: 63 @ 50 depth: 8).
	(input at: 5) fillWithColor: Color lightOrange.
	input at: 6 put: 1024 @ -2048.
	input at: 7 put: input.							"a cycle"
	input at: 8 put: (Array with: (sharedPoint _ 0 @ -30000)).
	input at: 9 put: sharedPoint.
	refStyream nextPut: input
	].
(''testFile.txt'' asFileEntry readStreamDo: [ :fileStream |
	(ReferenceStream on: fileStream) next.
	]) explore.

''testFile.txt'' asFileEntry delete.			"remove the test file"

b _ ''testFile.txt'' asFileEntry exists.		"test for existence of the file"

''testFile.txt'' asFileEntry fileContents.	"get the file-not-found dialog; note what Cancel does"

[''testFile.txt'' asFileEntry fileContents] on: MessageNotUnderstood do: [^ nil].  "avoid the exception for Cancel during the dialog"	

''testFile.txt'' asFileEntry assureExistence.	"put it back empty"

''testFile.txt'' asFileEntry fileContents. 		"print it"

''testFile.txt'' asFileEntry delete.				"remove the test file"

fullPath _ c pathName, ''\TestDir''.				"identify a directory"
FileIOAccessor new createDirectory: fullPath.	"create a directory"
FileIOAccessor new deleteDirectory: fullPath.	"delete directory; must be empty"
FileIOAccessor new createDirectory: ''./\TestDir''.	"another way, using regex"
FileIOAccessor new deleteDirectory: fullPath.	"delete directory; must be empty"

"The following statements show one way to either create an empty file, or use the file as-is if it already exists"
c _ DirectoryEntry currentDirectory.				"answer the current directory"
dirEntry _ c pathName asDirectoryEntry / ''testFile.txt''.  "create a system-independent path expression"
fullPath _ dirEntry asString.							"convert path expression to string"
fullPath asFileEntry assureExistence.				"create testFile.txt if it does not exist"
fullPath asFileEntry assureExistence.				"do nothing if testFile.txt already exists"
''testFile.txt'' asFileEntry delete.					"remove the test file"

DirectoryEntry smalltalkImageDirectory.			"answer the Smalltalk image directory"
DirectoryEntry vmDirectory.							"answer the VM directory"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'KenD 11/28/2022 13:50:54'!
font
	"Fonts"
	^
'"
Cuis includes by default one StrikeFont, but can also use TrueType fonts.

To add additional included fonts
"

TrueTypeFontFamily readAdditionalFonts.

FontFamily familyNames.				"list the installed fonts"

((LabelMorph contents: ''Text in the selected font.'') changeFont) openInHand. "look at an example"
"
The selection of currently installed fonts may be viewed from the text editor:

World > Open... > Text Editor
...then use (Cmd-k) to see a list of installed fonts.

To use any TrueTypeFont, just open the FileList, select any .ttf file, and click on [read font].
"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:01:26'!
form
	"Forms"
	^
'| x y |
x _ Form dotOfSize: 20.	"Make a form containing a dot (as yet unseen)."
x displayAt: 500@200.	"Cause the form to appear at a point on the display."
Display restore.			"Erase what was displayed."

x _ Form extent: 22@18.
	"Answer a Form with a blank bitmap of depth 1."

x _ Form extent: 22@18 depth: 8.
	"Answer a Form with blank bitmap 22 pixels wide and 18 pixels deep having color depth 8."
	
y _ x getCanvas.			"convert form to canvas (a BitBltCanvas)"

BoxedMorph new drawOn: y; morphExtent: 300@200; openInWorld.
	"Display a morph on a canvas"

x _ Form fromUser.
	"Answer a Form with bitmap initialized from the area of the display screen designated by the user."

x _ Form toothpaste: 15.
	"Draw with mouse button down; terminate by option-click."

x _ Form 
		verticalGradient: 120
		topColor: Color white
		bottomColor: (Color gray: 0.65).
	"Answer a fixed-width form, 120 pixels high, which illustrates shading."

x fillColor: Color green.
	"Set all pixels in the receiver to green."

y _ x icon.
	"Answer a 16 x 16 icon of the receiver"

y _ x magnifyBy: 1.5. 
	"Answer a Form created as a scaling of the receiver. Scale may be a Float, and may be greater or less than 1.0."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:02:59'!
heap
	"Heap"
	^
'| x n sort |
x _ Heap new.						"Answer a heap of default size"
x _ Heap new: (n _ 7).			"Answer a heap of size n"
x _ Heap with: #purple with: #green.	"Answer a Heap with the two arguments as elements."
sort _ [:a :c | a > c].		"Define a sorting order"
x _ Heap withAll: #(11 32 19 21).	"Create a new heap with all the elements from a collection"
x sortBlock: sort.						"Specify how to sort the heap"
x _ Heap withAll: #(11 32 19 21) sortBlock: sort.	"Create a new heap sorted according to a sortBlock"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 17:59:02'!
internalStream
	"Internal  Streams"
	^
'| b x ios str |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
ios _ ReadStream on: ''Hello read stream''.
ios _ ReadStream on: ''Hello read stream'' from: 1 to: 5.
[(x _ ios nextLine) notNil]
   whileTrue: [Transcript show: x; newLine].
ios position: 3.
ios position.
x _ ios next.
x _ ios peek.
x _ ios contents.
b _ ios atEnd.

ios _ ReadWriteStream on: ''Hello read stream''.
ios _ ReadWriteStream on: String new.
ios _ ReadWriteStream on: ''Hello read stream'' from: 1 to: 5.
ios _ ReadWriteStream with: ''Hello read stream''.
ios _ ReadWriteStream with: ''Hello read stream'' from: 1 to: 10.
ios position: 0.
[(x _ ios nextLine) notNil]
   whileTrue: [Transcript show: x; newLine].
ios position: 6.
ios position.
ios nextPutAll: ''Chris''.
x _ ios next.
x _ ios peek.
x _ ios contents.
b _ ios atEnd.

str _ String new writeStream.				"use a stream to form a string"
str nextPutAll: ''As of ''.					"more efficient than concatenation"
str nextPutAll: Date today asString.
str nextPut: $,; space.						"newLine and tab are also possible"
str nextPutAll: Float pi printString, '' radians = ''.  "concatenation can be used"
str nextPutAll: Float pi radiansToDegrees printString.
str nextPutAll: '' degrees.''; newLine.  "complete the formation"
x _ str contents.								"to get the results"

x _ String streamContents: [:string |	"a more compact way"
	string 
		nextPutAll: ''As of '';
		nextPutAll: Date today asString;
		nextPut: $,; space;
		nextPutAll: Float twoPi printString, '' radians = '';  "concatenation can be used"
		nextPutAll: Float twoPi radiansToDegrees printString;
		nextPutAll: '' degrees.''; newLine].  "complete the formation"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:07:36'!
interval
	"Intervals"
	^
'| b x y sum max |
x _ Interval from: 5 to: 10.					"create interval object"
x _ 5 to: 10.
x _ Interval from: 5 to: 10 by: 2.			"create interval object with specified increment"
x _ 5 to: 10 by: 2.
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
x includes: 9.										"test if element is in collection"
x do: [:k | Transcript show: k printString; newLine].	"iterate over interval"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 7].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
y _ x findFirst: [:a | a > 6].				"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 20:36:28'!
introduction
	"Using Terse Guide"
	^
'"
You are reading this in the text pane of the Terse Guide window. This pane is a kind of Workspace and is managed by the SmalltalkEditor of Cuis. This means that you can Do (Cmd-d) or Print (Cmd-p) statements in order to see the result. If you have a Transcript open, the result will appear in it.

The SmalltalkEditor enables you to Do or Print a statement when the cursor is in the statement. It is not necessary to first highlight the entire statement, unless it continues on more than one line.

This text pane is refreshed each time it is accessed. You can change the examples and run them without hurting anything. Go ahead and experiment!!

The Terse Guide does not attempt to provide the entire protocol of a topic. You are encouraged to explore further by using the Protocol Browser as follows:

Button 1>World>Open...>Browser 
then in the upper right pane:
Button 2>Message List>browse protocol

You can narrow the scope of protocol browsing by selecting a class in the upper left pane of the Protocol Browser.
"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:12:40'!
iterationStatement
	"Iterations"
	^
'| x y |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ 4. y _ 1.

#(5 4 3) do: [:a | x _ x + a].					"iterate over a sequenceable collection"
x.

[x > 0] whileTrue: [x _ x - 1. y _ y * 2].	"while true loop"
y.

[x >= 4] whileFalse: [x _ x + 1. y _ y * 2].	"while false loop"
y.

x timesRepeat: [y _ y * 2].						"times repeat loop (i _ 1 to x)"
y.

1 to: x do: [:a | y _ y * 2].						"for loop"
y.

1 to: x by: 2 do: [:a | y _ y / 2].				"for loop with specified increment"
y.
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'KenD 6/2/2020 20:59:34'!
layoutMorph
	"Layout Morph"
	^
'| myLayout |
myLayout _ LayoutMorph new.		"this illustrates a mistake"

"A LayoutMorph places its submorphs in a horizontal Row or a vertical Column"
myLayout _ LayoutMorph newColumn.
myLayout _ LayoutMorph newRow color: Color cyan.
myLayout openInWorld.
myLayout morphExtent: (6 * myLayout morphExtent). "Make larger to hold submorphs"

myLayout addAllMorphs: { BoxedMorph initializedInstance. ImageMorph initializedInstance. BoxedMorph initializedInstance. }.

"When there is space left over, the submorphs can be shifted
 along the layout axis.  This is the axisEdgeWeight, a number from
 0 to 1, which can also be specified by a symbol."

myLayout axisEdgeWeight: #rowRight.
myLayout axisEdgeWeight: #center.
myLayout axisEdgeWeight: #rowLeft.

myLayout beColumn.
myLayout direction." #vertical "
myLayout axisEdgeWeight: #columnBottom.
myLayout axisEdgeWeight: #center.
myLayout axisEdgeWeight: #columnTop.

myLayout beRow.
myLayout direction. " #horizontal "

myLayout separation: 10@20. "set the amount of separation for submorphs"	
myLayout xSeparation.			"answer the x component of the specified separation"
myLayout ySeparation.			"answer the y component of the specified separation"
myLayout beColumn.

"Submorphs may also have a LayoutSpec to specify proportion and offAxis placement"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'jmv 1/18/2022 09:38:18'!
layoutSpec
	"Layout Specification"
	^
'| layout image interiorLayout rect |
"A LayoutMorph places its submorphs along the layout axis.
 The submorphs may use a LayoutSpec to specify, for width and height,
 a fixed or porportional extent, a minimum extent, an offAxisEdgeWeight."

"Some Morphs to use"
rect _ BoxedMorph initializedInstance.
image _ ImageMorph initializedInstance.
rect layoutSpec: (LayoutSpec fixedWidth: 80 proportionalHeight: 0.6 offAxisEdgeWeight: #center).
"Layouts can contain layouts"
interiorLayout _ LayoutMorph newColumn.
interiorLayout separation: 10@20.
interiorLayout layoutSpec: (LayoutSpec proportionalWidth: 0.3 proportionalHeight: 0.8).
interiorLayout addMorph: BoxedMorph initializedInstance.
interiorLayout addAdjusterAndMorph: (BoxedMorph new) proportionalWidth: 1.0.
"A LayoutMorph to contain them"
layout _ LayoutMorph newRow.
layout addAllMorphs: { image. interiorLayout. rect. }.
layout openInWorld.
"Make it bigger"
layout morphExtent: (3 * layout morphExtent).
"Make it colorful"
interiorLayout color: Color cyan.
layout color: Color green lighter lighter.
"add handles; mouse grab lower-right yellow circle with tooltip Change Size."
layout addHalo.
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'jmv 5/6/2020 11:14:41'!
literals
	"Literals"
	^
'"Literals are objects that are created when you compile a method. They are always available when the method is run, and the same instance is used each time. Remember that when a method is run, the source code, compiled to create it, is no longer used at all. This includes the source code for the literals. In the example below, the CompiledMethod will not have a string ''3.14'', but the Float object built after it.
Note: It is considered bad practice to later modify them, as they would no longer match their source code."
| b x |
b _ true.									"true pseudo-variable"
b _ false.									"false pseudo-variable"
x _ nil.										"nil object pseudo-variable"
x _ 1.										"SmallInteger literal"
x _ 3.14.									"Float literal"
x _ 2e-2.									"Fraction literal"
x _ 2.0e-2.									"Float literal"
x _ 7/8.										"Fraction literal"
x _ 16r0F.									"SmallInteger literal".
x _ 16rFFFFFFFF.							"LargePositiveInteger literal".
x _ 16rFFFFFFFF negated.				"LargeNegativeInteger literal".
x _ -1.										"negative SmallInteger literal"
x _ ''Hello''.								"String literal"
x _ ''I''''m here''.							"single quote escape"
x _ $A.										"Character literal"
x _ $ .										"Character literal (space)"
x _ #aSymbol.								"Symbol literal"
x _ #(3 2 1).								"Array literal"
x _ #(''abc'' 2 $a).						"mixing of types allowed (all literal)"
x _ #[3 2 1 0].							"ByteArray literal"
x _ #[1.0 3.141592 6.02e23].			"Float64Array literal"

x _ {''Hello'' size. Float pi. 1.0 arcTan }.    "Warning: NOT a literal. Created on each run"
x _ `{''Hello'' size. Float pi. 1.0 arcTan }`.  "Backtick syntax. Anything can be a literal!!"
x _ `{ 1. 3. 5. 7. 11. 13. 17} asSet`.          "A literal Set"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:49:15'!
metaclass
	"Class / Metaclass"
	^
'| b x |
x _ String name.							"class name"
x _ String category.						"organization category"
x _ String comment.						"class comment"
x _ String kindOfSubclass.				"subclass type - subclass: variableSubclass, etc"
x _ String definition.					"class definition"
x _ String instVarNames.				"immediate instance variable names"
x _ String allInstVarNames.			"accumulated instance variable names"
x _ String classVarNames.				"immediate class variable names"
x _ String allClassVarNames.			"accumulated class variable names"
x _ String sharedPools.					"immediate dictionaries used as shared pools"
x _ String allSharedPools.				"accumulated dictionaries used as shared pools"
x _ String selectors.					"message selectors for class"
x _ String sourceCodeAt: #indexOf:.	"source code for specified method"
x _ String allInstances.				"collection of all instances of class"
x _ String superclass.					"immediate superclass"
x _ String allSuperclasses.			"accumulated superclasses"
x _ String withAllSuperclasses.		"receiver class and accumulated superclasses"
x _ String subclasses.					"immediate subclasses"
x _ String allSubclasses.				"accumulated subclasses"
x _ String withAllSubclasses.			"receiver class and accumulated subclasses"
b _ String instSize.						"number of named instance variables"
b _ String isFixed.						"true if no indexed instance variables"
b _ String isVariable.					"true if has indexed instance variables"
b _ String isPointers.					"true if index instance vars contain objects"
b _ String isBits.						"true if index instance vars contain bytes/words"
b _ String isBytes.						"true if index instance vars contain bytes"
b _ String isWords.						"true if index instance vars contain words"
Object withAllSubclasses size.		"get total number of class entries"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'KenD 5/1/2020 16:49:17'!
methodCall
	"Method Calls"
	^
'"
	Method calls:
		- unary methods are messages with no arguments	
		- binary methods
		- keyword methods are messages with selectors including colons
 
	standard categories/protocols:
		- initialize-release    (methods called for new instance)
		- accessing             (get/set methods)
		- testing               (boolean tests - is)
		- comparing             (boolean tests with parameter
		- displaying            (gui related methods)
		- printing              (methods for printing)
		- updating              (receive notification of changes)
		- private               (methods private to class)
		- instance-creation     (class methods for creating instance)
"
| x |
x _ 2 sqrt.									"unary message"
x _ 2 raisedTo: 10.						"keyword message"
x _ 194 * 9.								"binary message"
Transcript show: (194 * 9) printString; newLine.	"combination (chaining)"
x _ 2 perform: #sqrt.					"indirect method invocation"
Transcript									"cascading ; send multiple messages to first receiver"
   show: ''hello '' ;
   show: ''world'' ;
   newLine.
"Without semicolon cascading"
x := BoxedMorph new.
x color: Color yellow.
x openInWorld.
"Using semicolon cascade -- we don''t need the variable, x"
BoxedMorph new
	color: Color yellow; 
	openInWorld.
3 + 2; * 100.							"result=300. Sends message to same receiver (3)"
"Parentheses are used for grouping.  In many cases parentheses can be replaced by ::"
3 squared ; + 5.  " 8 -- semicolon -> cascade to _original_ receiver (3)"
(3 squared) + 5. " 14 -- use parens to group"
3 squared :: + 5. " 14 -- same but double-colon -> cascade to _result_ of expression at left (9)"
"The double colon is useful in eliding parens from complex keyword expressions"
(3 squared between: 2 squared and: 4 squared) ifTrue: [ #Great ] ifFalse: [ #Oops ].
3 squared between: 2 squared and: 4 squared :: ifTrue: [ #Great ] ifFalse: [ #Oops ].

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 3/5/2015 11:34'!
misc
	"Miscellaneous"
	^
'| x |
Smalltalk condenseChanges.					"compress the change file"
x _ FillInTheBlankMorph request: ''Prompt Me''.		"prompt user for input"
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:53:32'!
morph
	"Morphs"
	^
'| x y z w v |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Morph new.				"a new but invisible morph"
x openInWorld.				"make visible in upper left of screen"
x openInHand.				"make visible at cursor location"
								"drag with the left button; show halos with the middle button"
x name: #MyName.			"used in the halos"
x name: ''My Name''.		"alternative, allowing imbedded blanks"
x morphPosition: 100@65.	"set the morph location"
y _ FillInTheBlankMorph request: ''Please Enter Something''.	"prompt user for input"
Feature require: #''Morphic-Widgets-Extras''.	"ensure a requirement is available for the following plot"
x _ FunctionGraphMorph initializedInstance openInHand.	"example, plotting two functions"
x _ SystemWindow new openInWorld.	"open a window"
x setLabel: ''Label for It''.
y _ LayoutMorph example10.				"organizing several morphs"
x addMorph: y.								"place morphs in a SystemWindow"

z _ x submorphs at: 1 :: submorphs at: 1 :: submorphs at: 2 :: submorphs at: 2.  "select a deep submorph"
	"The ''::'' syntax avoids nested parentheses"
z name.						"name of the deep submorph"
w _ z owningWindow.		"answer the first enclosing morph that is a kind of Window"
w class.
v _ x findDeepSubmorphThat: [:m | m name = #G] ifAbsent: [nil].	"find the submorph named #F"
v == z.						"verify that v and z are identical"

LayoutMorph includeInNewMorphMenu.
	"Return true for all classes that can be instantiated from the menu"

y _ Morph initializedInstance openInHand.
	"Answer an instance of the receiver which in some sense is initialized.  In the case of Morphs, this will yield an instance that can be attached to the Hand after having received the same kind of basic initialization that would be obtained from an instance chosen from the ''new morph'' menu.
	Return nil if the receiver is reluctant for some reason to return such a thing"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:56:38'!
orderedCollection
	"Ordered Collections"
	^
'| b x y sum max |			"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ OrderedCollection with: 4 with: 3 with: 2 with: 1.	"create collection with 4 elements"
x _ OrderedCollection new.						"allocate a collection"
x add: 3; add: 2; add: 1; add: 4; yourself.	"add element to collection"
y _ x addFirst: 5; yourself.					"add element at beginning of collection"
y _ x removeFirst;	yourself.				"remove first element in collection"
y _ x addLast: 6; yourself.					"add element at end of collection"
y _ x removeLast;	yourself.					"remove last element in collection"
y _ x addAll: #(7 8 9); yourself.			"add elements to the collection"
y _ x removeAll: #(1 8 7).						"remove elements from the collection and answer the removed elements"
x at: 2 put: 3; yourself.						"set element at index"
y _ x remove: 5 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
y _ x at: 2.										"retrieve element at index"
y _ x first.										"retrieve first element in collection"
y _ x last.											"retrieve last element in collection"
b _ x includes: 5.								"test if element is in collection"
y _ x copyFrom: 2 to: 3.						"subcollection"
y _ x indexOf: 3 ifAbsent: [0].				"first position of element within collection"
y _ x occurrencesOf: 3.						"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
y _ x findFirst: [:a | a < 2].				"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)]. sum.  "sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x shuffled.									"randomly shuffle collection"
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:57:06'!
point
	"Point"
	^
'| x y |
x _ 200@100.									"obtain a new point"
y _ x x.											"x coordinate"
y _ x y.											"y coordinate"
x _ 200@100 negated.							"negates y"
x _ (200@100) negated.						"negates x and y"
x _ (-200@ -100) abs.						"absolute value of x and y"
x _ (200.5@100.5) rounded.					"round x and y"
x _ (200.5@100.5) truncated.				"truncate x and y"
x _ 200@100 + 100.							"add scale to both x and y"
x _ 200@100 - 100.							"subtract scale from both x and y"
x _ 200@100 * 2.								"multiply x and y by scale"
x _ 200@100 / 2.								"divide x and y by scale"
x _ 200@100 // 2.								"divide x and y by scale"
x _ 200@100 \\ 3.								"remainder of x and y by scale"
x _ 200@100 + (50@25).						"add points"
x _ 200@100 - (50@25).						"subtract points"
x _ 200@100 * (3@4).							"multiply points"
x _ 200@100 // (3@4).						"divide points"
x _ 200@100 max: 50@200.					"max x and y"
x _ 200@100 min: 50@200.					"min x and y"
x _ 20@5 dotProduct: 10@2.					"sum of product (x1*x2 + y1*y2)"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 8/10/2018 18:30:51'!
popUpMenu
	"PopUpMenu"
	^
'| x y b arr lin |
b _ PopUpMenu confirm: ''Are you hungry?''.
b _ PopUpMenu confirm: ''Reboot universe'' orCancel: [''Nevermind''].
b _ PopUpMenu 
		confirm: ''Are you hungry?''
		trueChoice: ''yes, I''''m famished''
		falseChoice: ''no, I just ate''.
PopUpMenu inform: ''I like Cuis''.
arr _ #(''Alpha'' ''Beta'' ''Gamma'' ''something else'').
x _ (PopUpMenu labelArray: arr) startUpWithCaption: ''Please pick one.''.
lin _ #(3).
x _ (PopUpMenu labelArray: arr lines: lin) 
	startUpWithCaption: nil 
	at: 450@200
	allowKeyboard: false.
y _ (PopUpMenu withCaption: ''Special'' chooseFrom: ''Alpha\Beta\Gamma\something else'').

x _ FillInTheBlankMorph request: ''Enter the (whatever)'' initialAnswer: ''the default''.
		"when it is not possible to pre-determine an answer"
		
"For potentially long menus, the following includes ''more...'' and ''start over...'' behavior"
x _ (PopUpMenu labels: (String streamContents: [:s | 1 to: 100 do: [:i | s print: i; newLine]])
		lines: (5 to: 100 by: 5)) startUpWithCaption: ''Long Menu Example''.		
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 3/1/2015 12:58'!
primitive
	"Primitive"
	^
'	"Some messages in the system are responded to primitively. A primitive   
	response is performed directly by the interpreter rather than by evaluating   
	expressions in a method. The methods for these messages indicate the   
	presence of a primitive response by including <primitive: xx> before the   
	first expression in the method.   
	  
	Primitives exist for several reasons. Certain basic or ''primitive'' 
	operations cannot be performed in any other way. Smalltalk without 
	primitives can move values from one variable to another, but cannot add two 
	SmallIntegers together. Many methods for arithmetic and comparison 
	between numbers are primitives. Some primitives allow Smalltalk to 
	communicate with I/O devices such as the disk, the display, and the keyboard. 
	Some primitives exist only to make the system run faster; each does the same 
	thing as a certain Smalltalk method, and its implementation as a primitive is 
	optional.  
	  
	When the Smalltalk interpreter begins to execute a method which specifies a 
	primitive response, it tries to perform the primitive action and to return a 
	result. If the routine in the interpreter for this primitive is successful, 
	it will return a value and the expressions in the method will not be evaluated. 
	If the primitive routine is not successful, the primitive ''fails'', and the 
	Smalltalk expressions in the method are executed instead. These 
	expressions are evaluated as though the primitive routine had not been 
	called.  
	  
	The Smalltalk code that is evaluated when a primitive fails usually 
	anticipates why that primitive might fail. If the primitive is optional, the 
	expressions in the method do exactly what the primitive would have done (See 
	Number @). If the primitive only works on certain classes of arguments, the 
	Smalltalk code tries to coerce the argument or appeals to a superclass to find 
	a more general way of doing the operation (see SmallInteger +). If the 
	primitive is never supposed to fail, the expressions signal an error (see 
	SmallInteger asFloat).  
	  
	Each method that specifies a primitive has a comment in it. If the primitive is 
	optional, the comment will say ''Optional''. An optional primitive that is not 
	implemented always fails, and the Smalltalk expressions do the work 
	instead.  
	 
	If a primitive is not optional, the comment will say, ''Essential''. Some 
	methods will have the comment, ''No Lookup''. See Object 
	howToModifyPrimitives for an explanation of special selectors which are 
	not looked up.  
	  
	For the primitives for +, -, *, and bitShift: in SmallInteger, and truncated 
	in Float, the primitive constructs and returns a 16-bit 
	LargePositiveInteger when the result warrants it. Returning 16-bit 
	LargePositiveIntegers from these primitives instead of failing is 
	optional in the same sense that the LargePositiveInteger arithmetic 
	primitives are optional. The comments in the SmallInteger primitives say, 
	''Fails if result is not a SmallInteger'', even though the implementor has the 
	option to construct a LargePositiveInteger. For further information on 
	primitives, see the ''Primitive Methods'' part of the chapter on the formal 
	specification of the interpreter in the Smalltalk book."'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:58:02'!
rectangle
	"Rectangle"
	^
'| x y b |
x _ Rectangle fromUser.	"Have the user designate the top left and bottom right corners of a rectangle."
y _ Form fromDisplay: x.	"Create a virtual bit map from the rectangle." 
y display.						"Show the rectangle at 0@0 on the display."
Display restore.				"Erase the rectangle."
		
b _ x containsPoint: 195@150.
y _ x encompass: 195@150.

y _ x expandBy: 20.
	"Answer a Rectangle that is outset from the receiver by a Rectangle, Point, or scalar."

y _ x extendBy: 55@77.
	"Answer a Rectangle with the same origin as the receiver, but whose corner is offset by a Rectangle, Point, or scalar."
	
y _ x extent.
	"Answer the receiver''s width @ the receiver''s height."

y _ x flippedBy: #vertical centerAt: 220@330. 
	"Answer a copy of the receiver flipped #vertical or #horizontal, about aPoint."

y _ x insetBy: 60. 
	"Answer a Rectangle that is inset from the receiver by delta. delta is a Rectangle, Point, or scalar."

y _ x insetOriginBy: 20 cornerBy: 20@60. 
	"Answer a Rectangle that is inset from the receiver by a given amount from the origin and corner."

y _ x left.
	"Answer the position of the receiver''s left vertical line."

y _ x left: 70.
	"Answer the receiver with it''s left side at the argument."
	
x _ Rectangle center: 40@50 extent: 200@150. 
	"Answer a rectangle whose center is at a point and whose width by height is a point.  "

x _ Rectangle encompassing: {(55@44). (33@22). (300@122)}.
	"Answer a rectangle which encompasses a list of points."

x _ Rectangle left: 65 right: 300 top: 120 bottom: 350. 
	"Answer a rectangle whose left, right, top, and bottom coordinates are determined by the arguments."

x _ Rectangle origin: 100@80 corner: 400@500. 
	"Answer a rectangle whose corners (top left and bottom right) are determined by the arguments."

x _ Rectangle origin: 100@80 extent: 300@200. 
	"Answer a rectangle whose top left corner is at a point and width by height is specified by a point."

x _ Rectangle originFromUser: 400@300.
	"Answer a rectangle that is determined by having the user designate the top left corner. The width and height are determined by the argument."

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 17:59:42'!
set
	"Sets"
	^
'| b x y sum max |
x _ Set with: 4 with: 3 with: 2 with: 1.	"create collection with 4 elements"
x _ Set new.										"allocate collection"
x add: 4; add: 3; add: 1; add: 2; yourself.	"add element to collection"
y _ x addAll: #(7 8 9).							"add elements to the collection and answer the added elements"
y _ x removeAll: #(7 8 9).						"remove elements from the collection and answer the removed elements"
y _ x remove: 4 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
x includes: 4.										"test if element is in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:03:26'!
sortedCollection
	"Sorted Collections"
	^
'| b x y sum max |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ SortedCollection with: 4 with: 3 with: 2 with: 1.	"create collection with 4 elements"
x _ SortedCollection new.						"allocate collection"
x _ SortedCollection sortBlock: [:a :c | a > c]."set sort criteria"
x add: 3; add: 2; add: 1; add: 4; yourself.	"add element to collection"
y _ x addFirst: 5.								"Error: Not Appropriate for a SortedCollection"
y _ x removeFirst.								"remove first element in collection"
y _ x addLast: 6.									"add element at end of collection"
y _ x removeLast.									"remove last element in collection"
y _ x addAll: #(7 8 9).							"add elements to the collection and answer the added elements"
x sortBlock: [:a :c | a > c].					"sort in descending order"
y _ x removeAll: #(7 8 9).						"remove elements from the collection and answer the removed elements"
y _ x remove: 5 ifAbsent: [].					"remove element from collection"
b _ x isEmpty.										"test if empty"
y _ x size.											"number of elements"
y _ x at: 2.											"retrieve element at index"
y _ x first.											"retrieve first element in collection"
y _ x last.											"retrieve last element in collection"
b _ x includes: 4.									"test if element is in collection"
y _ x copyFrom: 2 to: 3.							"subcollection"
y _ x indexOf: 3 ifAbsent: [0].				"first position of element within collection"
y _ x occurrencesOf: 3.							"number of times object in collection"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the collection"
b _ x allSatisfy: [:a | (a >= 1) & (a <= 4)].	"test if all elements meet condition"
y _ x select: [:a | a > 2].					"return collection of elements that pass test"
y _ x reject: [:a | a < 2].					"return collection of elements that fail test"
y _ x collect: [:a | a + a].					"transform each element for new collection"
y _ x detect: [:a | a > 3] ifNone: [].		"return first element that passes test"
y _ x findFirst: [:a | a < 3].				"find position of first element that passes test"
sum _ 0. x do: [:a | sum _ sum + a]. sum.	"sum elements"
sum _ 0. 1 to: (x size) do: [:a | sum _ sum + (x at: a)]. sum.	"sum elements"
sum _ x inject: 0 into: [:a :c | a + c].	"sum elements"
max _ x inject: 0 into: [:a :c | (a > c)	"find max element in collection"
   ifTrue: [a]
   ifFalse: [c]].
y _ x asArray.										"convert to array"
y _ x asOrderedCollection.						"convert to ordered collection"
y _ x asSortedCollection.						"convert to sorted collection"
y _ x asBag.										"convert to bag collection"
y _ x asSet.										"convert to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:05:11'!
string
	"Strings"
	^
'| b x y |
x _ ''This is a string''.						"string assignment"
x _ ''String'', ''Concatenation''.			"string concatenation"
b _ x isEmpty.									"test if string is empty"
y _ x size.										"string size"
y _ x at: 2.									"char at location"
y _ x copyFrom: 2 to: 4.					"substring"
y _ x indexOf: $a ifAbsent: [0].			"first position of character within string"
x _ String new: 4.							"allocate string object"
x													"set string elements"
   at: 1 put: $a;
   at: 2 put: $b;
   at: 3 put: $c;
   at: 4 put: $e;
   yourself.
x _ String with: $a with: $b with: $c with: $d.	"set up 4 elements at a time"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the string"
b _ x allSatisfy: [:a | (a >= $a) & (a <= $z)].	"test if all elements meet condition"
y _ x select: [:a | a > $a].				"return all elements that meet condition"

x _ String streamContents: [:str |		"using a stream to form a string"
	str 											"more efficient than concatenation"
		nextPutAll: ''This string'';
		nextPutAll: '' is formed today, '';
		nextPutAll: Date today asString;
		nextPutAll: '', without using concatenation.''].

y _ x asSymbol.								"convert string to symbol"
y _ x asArray.									"convert string to array"
x _ ''KAAPED'' asByteArray.					"convert string to byte array"
y _ x asOrderedCollection.					"convert string to ordered collection"
y _ x asSortedCollection.					"convert string to sorted collection"
y _ x asBag.									"convert string to bag collection"
y _ x asSet.									"convert string to set collection"
y _ ''world'' shuffled.						"randomly shuffle string"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:06:34'!
symbol
	"Symbols"
	^
'| b x y |
x _ #Hello.									"symbol assignment"
y _ #String , #Concatenation.			"symbol concatenation (result is string)"
b _ x isEmpty.								"test if symbol is empty"
y _ x size.									"string size"
y _ x at: 2.								"char at location"
y _ x copyFrom: 2 to: 4.				"substring"
y _ x indexOf: $e ifAbsent: [0].		"first position of character within string"
x do: [:a | Transcript show: a printString; newLine].	"iterate over the string"
b _ x allSatisfy: [:a | (a >= $a) & (a <= $z)].	"test if all elements meet condition"
y _ x select: [:a | a > $a].			"return all elements that meet condition"
y _ x asString.							"convert symbol to string"
y _ x asText.								"convert symbol to text"
y _ x asArray.								"convert symbol to array"
y _ x asOrderedCollection.				"convert symbol to ordered collection"
y _ x asSortedCollection.				"convert symbol to sorted collection"
y _ x asBag.								"convert symbol to bag collection"
y _ x asSet.								"convert symbol to set collection"

'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 5/11/2020 17:05:02'!
syntax
	"Syntax Notes"
	^
'"
	Statement form (basic binary):
		<receiver> <message selector> [<argument>]
		There are also unary and keyword forms.

	Allowable characters:
		- a-z
		- A-Z
		- 0-9
		- .+/\*~<=>@%|&?;:''#()[]{}_
		- blank, tab, cr, ff, lf

	Variables:
		- variables must be declared before use
		- shared vars must begin with uppercase
		- local vars must begin with lowercase
		- reserved names: nil, true, false, self, super, and Smalltalk

	Variable scope:
		- Global: defined in Dictionary Smalltalk and accessible by all objects in system
		- Special: (reserved) Smalltalk, super, self, true, false, & nil
		- Method Temporary: local to a method
		- Block Temporary: local to a block
		- Pool: variables in a Dictionary object
		- Method Parameters: automatic local vars created as a result of message call with params
		- Block Parameters: automatic local vars created as a result of value: message call	
		- Class: shared with all instances of one class & its subclasses
		- Class Instance: unique to each instance of a class
		- Instance Variables: unique to each instance

	Comments are enclosed in quotes
	Period (.) is the statement separator
	
	Expressions are evaluated left-to-right.
	Message precedence: unary, binary, then keyword.
	
	A message within parentheses is sent before any messages outside the parentheses.
	Expressions with parentheses can alternatively be written with ''::'' as in the following examples..."
	
BrowserWindow fullOnClass: Parser class selector: #chainExamplesDoubleColon.
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:07:25'!
time
	"Time"
	^
'| x y b d1 d2 w |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
x _ Time dateAndTimeNow.			"answer the current date and time"
x _ Time now.							"answer the current time"
b _ (555 factorial) > 1.			"expend some time"
y _ Time now - x.						"time difference"
b _ x < Time now.						"compare times"
b _ y = x.								"check if equal"
d1 _ Time now asDurationSinceMidnight.
d2 _ Time now asDurationSinceMidnight.
y _ x hhmm24.							"Return a string of the form 2154 (for 9:54 pm), of exactly 4 digits"
y _ x hour.								"answer the number of hours in the receiver"
y _ x hour12.
y _ x hour24.
y _ x meridianAbbreviation.		"answer ''AM'' or ''PM''"
y _ x minute.							"answer the number of minutes in the receiver"
y _ x nanoSecond.						"answer the number of nanoSeconds in the receiver"
y _ x print24.							"Return microseconds expressed in 24-hour format"
String streamContents: [:s | Time now print24: true on: s].	"Format is ''hh:mm:ss'' if true or ''h:mm:ss am'' if false"
y _ x printMinutes.						"Return as string ''hh:mm pm''  "
String streamContents: [:s | Time now printOn: s].
y _ x second.							"answer the number of seconds in the receiver"
String streamContents: [:s | Time now storeOn: s].
x _ Time millisecondsToRun: [		"timing facility"
   1 to: 1000 do: [:index | y _ 400 factorial * index]].

w _ Time localMillisecondClock.	"milliseconds since the Smalltalk epoch"
"The Smalltalk epoch began at 00:00 on the morning of January 1, 1901, in the local host time zone."
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 10/6/2018 18:08:36'!
transcript
	"Transcript"
	^
'TranscriptWindow openTranscript.	"in case one is not open already"
Transcript clear.						"clear the transcript window"
Transcript show: ''Hello World''.	"output string in transcript window"
Transcript nextPutAll: ''Hello World''.	"output string in transcript window"
Transcript nextPut: $A.				"output character in transcript window"
Transcript space.						"output space character in transcript window"
Transcript tab.						"output tab character in transcript window"
Transcript newLine.					"linefeed"
''Hello'' printOn: Transcript.		"append print string into the window"
''Hello'' storeOn: Transcript.		"append store string into the window"
Transcript endEntry.					"flush the output buffer"

"NOTE: from the pop-up menu, you can open a snapshot of the transcript in a workspace window."
'! !
!TerseGuideHelp class methodsFor: 'pages' stamp: 'dhn 2/23/2016 12:21'!
trie
	"Trie"
	^
'| t |		"For efficient viewing, have a Transcript open and use Cmd-d on these statements"
t _ Trie new.
t add: ''car''.
t at: ''car'' put: Float pi.
t at: ''cat'' put: Date today.
t explore.
(t includesKey: ''car'') print.
(t includes: ''cat'') print.
t at: ''crow'' put: 7.
t forPrefix: ''c'' keysAndValuesDo: [:key :val | {key} print].
t forPrefix: ''ca'' keysAndValuesDo: [:key :val | {key} print].

t _ Trie new.
Smalltalk allImplementedMessages do: [ :s | t add: s ].
t explore.

'
! !
!TerseGuideHelp class methodsFor: 'displaying' stamp: 'dhn 11/14/2015 13:08'!
display: aSelector    
	"Open a Workspace on the text in aSelector"    
	| window |
	  
	window _ TerseGuideHelp new.    
	window 	actualContents: (self perform: aSelector).    
	window	openLabel: ('Terse Guide to ', (self class firstPrecodeCommentFor: aSelector))! !
!TerseGuideHelp class methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:33:41'!
additionalTopicTitles

	^ (self additionalTopics collect: [ :topic | topic title ]) asArray! !
!TerseGuideHelp class methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:34:27'!
additionalTopics
	"Topics that can be dynamically added by creating subclasses of TerseGuideTopic"

	^ TerseGuideTopic allSubclasses collect: [ :topicClass | topicClass new ]! !
!TerseGuideHelp class methodsFor: 'accessing' stamp: 'jmv 5/6/2020 11:11:26'!
pages
	"Answer the topics, in order, for the window list pane"
	^ #(
		'Introduction'
		'Syntax'
		'Transcript'
		'Assignment'
		'Literals'
		'Booleans'
		'Arithmetic'
		'Bit-Wise'
		'Conversion'
		'Blocks'
		'Exceptions'
		'Method Calls'
		'Conditional Statements'
		'Iterations'
		'Character'
		'Symbols'
		'Strings'
		'Fonts'
		'Arrays'
		'Ordered Collections'
		'Sorted Collections'
		'Bags'
		'Sets'
		'Intervals'
		'Associations'
		'Dictionary'
		'Trie'
		'Heap'
		'Internal Streams'
		'Coding'
		'File Operations'
		'Features'
		'Date'
		'Time'
		'Point'
		'Rectangle'
		'Forms'
		'Canvas'
		'Colors'
		'Morphs'
		'Layout Morph'
		'Layout Spec'
		'PopUpMenu'
		'Dynamic Messages'
		'Object'
		'Metaclass'
		'Debugging'
		'Miscellaneous'
		'Primitives'
		'Custom Browsers'
	) , self additionalTopicTitles! !
!TerseGuideWindow methodsFor: 'initialization' stamp: 'dhn 6/15/2016 19:03'!
buildMorphicWindow
	"Define the window layout for Terse Guide"
	| row |
	
	list1 _ (PluggableListMorph
				model: model
				listGetter: #topicList
				indexGetter: #topicListIndex
				indexSetter: #topicListIndex:
				mainView: self
				menuGetter: nil
				keystrokeAction: nil)
					name: 'Topic List'.
	textModelM _ TextModelMorph withModel: model.
	textModelM
		askBeforeDiscardingEdits: false;
		name: 'Work Space'.
	model when: #topicListIndex send: #update: to: list1 withArguments: #(#topicListIndex).
	row _ LayoutMorph newRow.
	row
		name: #Row;
		addMorph: list1 proportionalWidth: 0.2;
		addAdjusterAndMorph: textModelM proportionalWidth: 0.8.
	self layoutMorph
		addMorph: row.
	self setLabel: 'Terse Guide'! !
!TerseGuideWindow methodsFor: 'accessing' stamp: 'dhn 5/17/2016 21:21'!
textModelM
	"Answer the value of textModelM"

	^ textModelM! !
!TerseGuideWindow class methodsFor: 'instance creation' stamp: 'dhn 5/17/2016 21:21'!
openTerseGuide
"
	TerseGuideWindow openTerseGuide.
"
	| window help |

	(window _ TerseGuideWindow open: (help _ TerseGuideHelp new) label: 'Terse Guide')
		setWindowColor:  Theme current workspace.
	help textPane: window textModelM.
	help 
		contents: '';
		window: window! !
!TerseGuideTopic methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:02:39'!
examples

	^ #()! !
!TerseGuideTopic methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:37:27'!
script

	^ String streamContents: [ :stream |
		self examples do: [ :example |
			self append: example toScript: stream
		]
	]! !
!TerseGuideTopic methodsFor: 'accessing' stamp: 'RNG 7/15/2018 01:02:32'!
title

	self subclassResponsibility! !
!TerseGuideTopic methodsFor: 'private - script building' stamp: 'RNG 7/15/2018 01:38:22'!
append: example toScript: stream

	stream
		nextPutAll: (example at: #code);
		nextPutAll: '. ';
		nextPutAll: (self commentFor: example);
		newLine! !
!TerseGuideTopic methodsFor: 'private - script building' stamp: 'RNG 7/15/2018 01:38:32'!
commentFor: example

	^ '"' , (example at: #category) , ' - ' , (example at: #description) , '"'! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:06:06' prior: 50611067!
findsOddsPart3a

	|elements index doubledElements|
	
	elements := #(1 2 5 6 9).
	doubledElements := OrderedCollection new.
	index := 1.
	
	[index <= elements size] whileTrue: [
		doubledElements add: ((elements at: index) * 2).
	].
	
	^ elements.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:06:16' prior: 50613999!
findsOddsPart3a

	|elements index doubledElements|
	
	elements := #(1 2 5 6 9).
	doubledElements := OrderedCollection new.
	index := 1.
	
	[index <= elements size] whileTrue: [
		doubledElements add: ((elements at: index) * 2).
	].
	
	^ doubledElements .! !

----STARTUP---- (16 April 2023 22:08:41) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!

!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:08:51'!
findsOddsPart2

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds := OrderedCollection  new.
	index := 1.
	
	[index <= elements size] 
	whileTrue: [
		((elements at: index) odd) ifTrue: [odds add: (elements at: index)].
		index := index + 1	
	].

	^ odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:10:02' prior: 50614024!
findsOddsPart2

	^ #(1 2 5 6 9) select: [:element | element odd]! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:12:12' prior: 50604985!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	odds := OrderedCollection  new.

	elements do: [:element | 
		(element odd) ifTrue: [odds add: element].	
	].

	^ odds.! !

----SNAPSHOT----(16 April 2023 22:12:16) CuisUniversity-5706.image priorSource: 8747052!

XXX new findsOddsPart0!

XXX new findsOddsPart1!

XXX new findsOddsPart2!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:13:49'!
findDoubles1
	
	| elements |
	
	elements := #(1 2 5 6 9).
	
	elements do: []! !

!methodRemoval: XXX #findsOddsPart2 stamp: 'sm 4/16/2023 22:13:54'!
findsOddsPart2

	^ #(1 2 5 6 9) select: [:element | element odd]!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:15:30' prior: 50614055!
findDoubles1
	
	| elements doubles |
	
	elements := #(1 2 5 6 9).
	doubles := OrderedCollection  new.
	
	elements do: [:element | doubles add: (element * 2)].
	
	^ doubles.! !

XXX new findDoubles1 !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:15:50'!
findDoubles2
	
	| elements doubles |
	
	elements := #(1 2 5 6 9).
	doubles := OrderedCollection  new.
	
	elements do: [:element | doubles add: (element * 2)].
	
	^ doubles.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:16:47' prior: 50614074!
findDoubles2
	
	^ #(1 2 5 6 9) collect: [:element | element * 2].
! !

XXX new findDoubles2!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:17:04'!
findDoubles3
	
	^ #(1 2 5 6 9) * 2.
! !

XXX new findDoubles3!

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/Packages/TerseGuide.pck.st----!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:31:30'!
findFirstEven
	
	^ #(1 2 5 6 9) * 2.
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:31:46' prior: 50617014!
findFirstEven
	
	^ #(1 2 5 6 9) detect: [:element | element odd]
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:31:50' prior: 50617018!
findFirstEven
	
	^ #(1 2 5 6 9) detect: [:element | element even]
! !

XXX new findFirstEven !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:32:58'!
findFirstEvenWithoutMatching
	
	^ #(1 2 5 6 9) detect: [:element | element even]
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:33:07' prior: 50617029!
findFirstEvenWithoutMatching
	
	^ #(1 5 9) detect: [:element | element even]
! !

XXX new findFirstEvenWithoutMatching !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:34:06'!
findFirstEvenWithoutMatchingReturnString
	
	^ #(1 5 9) detect: [:element | element even]
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:34:19' prior: 50617041!
findFirstEvenWithoutMatchingReturnString
	
	^ 'No hay pares'
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:36:42' prior: 50617047!
findFirstEvenWithoutMatchingReturnString
	
	^ #(1 5 9) detect: [:element  | element even] ifNone: ['No hay pares!!']
! !

XXX new findFirstEvenWithoutMatchingReturnString !

----SNAPSHOT----(16 April 2023 22:37:42) CuisUniversity-5706.image priorSource: 9036761!
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:38:36'!
findFirstEvenWithoutMatchingThrowsException
	
	^ #(1 5 9) detect: [:element  | element even] ifNone: ['No hay pares!!']
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:38:50' prior: 50617063!
findFirstEvenWithoutMatchingThrowsException
	
	^ #(1 5 9) detect: [:element  | element even] ifNone: [self error: 'no hay pares!!']
! !

XXX new findFirstEvenWithoutMatchingThrowsException !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:42:32'!
sumElementsInjecting
	
	^ #(1 5 9) detect: [:element  | element even] ifNone: [self error: 'no hay pares!!']
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:50:10' prior: 50617079!
sumElementsInjecting
	
	^ #(1 5 9) inject: 0 into: [:sum :element | sum + element]
! !

XXX sumElementsInjecting !

XXX sumElementsInjecting !

XXX new sumElementsInjecting !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 22:51:59'!
sumElementsSum
	
	^ #(1 5 9) sum
! !

XXX new sum !

XXX new sumElementsSum !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 23:04:52'!
extractVowels
	
	^ #(1 5 9) sum
! !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 23:05:48' prior: 50617099!
extractVowels
	
	^ 'abcdefguijp' collect: [:char | char isVowel]
! !

XXX new extractVowels !
!XXX methodsFor: 'as yet unclassified' stamp: 'sm 4/16/2023 23:07:01' prior: 50617103!
extractVowels
	
	^ 'abcdefguijp' select: [:char | char isVowel]
! !

XXX new extractVowels !

----SNAPSHOT----(16 April 2023 23:07:18) CuisUniversity-5706.image priorSource: 9133100!

----SNAPSHOT----(16 April 2023 23:10:29) CuisUniversity-5706.image priorSource: 9134844!

----SNAPSHOT----(16 April 2023 23:16:25) CuisUniversity-5706.image priorSource: 9134934!

----SNAPSHOT----(16 April 2023 23:17:37) CuisUniversity-5706.image priorSource: 9135024!

----STARTUP---- (16 April 2023 23:18:06) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/CodigoRepetido-SolucionConSetup.st----!

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/Pre-Numeros-Ejercicio.st----!

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/Pre-Numeros-Ejercicio Solu.st----!

----SNAPSHOT----(16 April 2023 23:35:16) CuisUniversity-5706.image priorSource: 9135114!

!classRemoval: #Fraccion stamp: 'sm 4/16/2023 23:41:51'!
Numero subclass: #Fraccion
	instanceVariableNames: 'numerator denominator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #Entero stamp: 'sm 4/16/2023 23:41:51'!
Numero subclass: #Entero
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #Numero stamp: 'sm 4/16/2023 23:41:51'!
Object subclass: #Numero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #NumeroTest stamp: 'sm 4/16/2023 23:41:51'!
TestCase subclass: #NumeroTest
	instanceVariableNames: 'zero one two four oneFifth oneHalf five twoFifth twoTwentyfifth fiveHalfs three eight negativeOne negativeTwo negativeOneHalf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/Pre-Numeros-Ejercicio.st----!

Numero subclass: #Entero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classDefinition: #Entero category: 'Numero-Exercise' stamp: 'sm 4/16/2023 23:45:20'!
Numero subclass: #Entero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

Numero subclass: #Fraccion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classDefinition: #Fraccion category: 'Numero-Exercise' stamp: 'sm 4/16/2023 23:45:29'!
Numero subclass: #Fraccion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!
!Entero methodsFor: 'nil' stamp: 'sm 4/16/2023 23:47:51' overrides: 50618465!
isZero
	^value = 0! !
!Fraccion methodsFor: 'nil' stamp: 'sm 4/16/2023 23:49:06' overrides: 50618465!
isZero
	^false! !
!Numero methodsFor: 'testing' stamp: 'sm 4/16/2023 23:49:20' prior: 50618465!
isZero

	self subclassResponsibility ! !

----SNAPSHOT----(16 April 2023 23:50:37) CuisUniversity-5706.image priorSource: 9169787!

----STARTUP---- (17 April 2023 15:07:13) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


Numero new!

Numero new isZero!

Entero new isZero!

Entero new value!

Numero new!

Numero new isZero!

----SNAPSHOT----(17 April 2023 15:20:55) CuisUniversity-5706.image priorSource: 9182440!

----STARTUP---- (18 April 2023 19:01:47) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


----SNAPSHOT----(18 April 2023 19:02:02) CuisUniversity-5706.image priorSource: 9182746!

----STARTUP---- (18 April 2023 19:02:32) as /home/martin/Desktop/facu/Inge I/cuis/CuisUniversity-5706.image!


!classRemoval: #Fraccion stamp: 'sm 4/18/2023 19:02:38'!
Numero subclass: #Fraccion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #Entero stamp: 'sm 4/18/2023 19:02:38'!
Numero subclass: #Entero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #Numero stamp: 'sm 4/18/2023 19:02:38'!
Object subclass: #Numero
	instanceVariableNames: 'type value numerator denominator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #NumeroTest stamp: 'sm 4/18/2023 19:02:39'!
TestCase subclass: #NumeroTest
	instanceVariableNames: 'zero one two four oneFifth oneHalf five twoFifth twoTwentyfifth fiveHalfs three eight negativeOne negativeTwo negativeOneHalf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

----End fileIn of /home/martin/Desktop/facu/Inge I/cuis/Numero-Exercise.st----!

----SNAPSHOT----(18 April 2023 19:03:59) CuisUniversity-5706.image priorSource: 9182947!

----STARTUP---- (20 April 2023 21:07:45) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


----End fileIn of /home/martin/Desktop/facu/Inge I/isw1/cuis/Stack-Exercise.st----!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:08:41'!
ERROR!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:09:06'!
ERROR!
!OOStack methodsFor: 'nil' stamp: 'ma 4/20/2023 21:09:33'!
isEmpty
	! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:09:55' prior: 50619209!
isEmpty
	
	! !

Object subclass: #OOStack
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: 'Stack-Exercise' stamp: 'ma 4/20/2023 21:11:14'!
Object subclass: #OOStack
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:11:37' prior: 50619213!
isEmpty

	^elements isEmpty 
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:11:45'!
ERROR!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:11:45'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:15:00' prior: 50619228!
isEmpty

	^elements size = 0
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:15:09'!
ERROR!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:15:09'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:15:36' prior: 50619239!
isEmpty

	^OOStack size = 0
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:15:41'!
ERROR!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:15:41'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:16:09' prior: 50619250!
isEmpty

	^elements size = 0
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:16:21'!
ERROR!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:16:21'!
ERROR!

elements size!

Object subclass: #OOStack
	instanceVariableNames: 'size'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: 'Stack-Exercise' stamp: 'ma 4/20/2023 21:17:50'!
Object subclass: #OOStack
	instanceVariableNames: 'size'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:18:07' prior: 50619261!
isEmpty

	^ size = 0
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:18:43'!
FAILURE!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:18:43'!
FAILURE!

stack isEmpty!

Object subclass: #OOStack
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: 'Stack-Exercise' stamp: 'ma 4/20/2023 21:24:37'!
Object subclass: #OOStack
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:24:51' prior: 50619283!
isEmpty

	^ elements size = 0
	
	! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:25:23' overrides: 16920235!
initialize

	^ elements new
	
	! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:26:18' prior: 50619310 overrides: 16920235!
initialize

	elements := OrderedCollection new.
	
	! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:27:49' prior: 50619315 overrides: 16920235!
initialize

	elements := Array new.
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:29:01'!
PASSED!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:29:08'!
PASSED!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:29:40' prior: 50619321 overrides: 16920235!
initialize

	self error: 'hola'.
	elements := Array new.
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:29:45'!
ERROR!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:29:45'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:29:56' prior: 50619333 overrides: 16920235!
initialize

	elements := Array new.
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:30:00'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:30:00'!
ERROR!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:30:00'!
ERROR!
!OOStack methodsFor: 'nil' stamp: 'ma 4/20/2023 21:30:27'!
push: anElement! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:30:58' prior: 50619381!
push: anElement

	elements add: anElement ! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:31:26'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:31:26'!
ERROR!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:31:31'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:32:45' prior: 50619345 overrides: 16920235!
initialize

	elements := OrderedCollection new.
	
	! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:32:50'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:32:50'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:32:50'!
ERROR!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:32:50'!
ERROR!
!OOStack methodsFor: 'nil' stamp: 'ma 4/20/2023 21:33:25'!
pop

	elements removeLast ! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:33:34'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:33:34'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:33:34'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:33:34'!
FAILURE!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:33:34'!
FAILURE!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:33:34'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:33:34'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:33:34'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:33:34'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:33:34'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:34:34' prior: 50619462!
pop
	
	|lastElement|
	
	lastElement := elements last.
	elements removeLast.
	
	^ lastElement .! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:34:36'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:34:36'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:34:36'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:34:36'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:34:36'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:34:36'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:34:36'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:34:36'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:34:36'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:34:36'!
ERROR!
!OOStack methodsFor: 'nil' stamp: 'ma 4/20/2023 21:35:37'!
top
	
	^ elements first! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:35:39'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:35:39'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:35:39'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:35:39'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:35:39'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:35:39'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:35:39'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:35:39'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:35:39'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:35:39'!
FAILURE!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:36:35' prior: 50619537!
top
	
	^ elements at: 0! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:36:39'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:36:39'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:36:39'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:36:39'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:36:39'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:36:39'!
ERROR!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:36:39'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:36:39'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:36:39'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:36:39'!
FAILURE!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:36:53' prior: 50619574!
top
	
	^ elements at: 1! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:36:55'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:36:55'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:36:55'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:36:55'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:36:55'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:36:55'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:36:55'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:36:55'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:36:55'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:36:55'!
FAILURE!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:37:08'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:38:10' prior: 50619611!
top
	
	^ elements first! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:38:12'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:38:12'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:38:12'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:38:12'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:38:12'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:38:12'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:38:12'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:38:12'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:38:12'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:38:12'!
FAILURE!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:38:16'!
ERROR!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:39:01' prior: 50619385!
push: anElement

	elements add: anElement! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:39:03'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:39:03'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:39:03'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:39:03'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:39:03'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:39:03'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:39:03'!
ERROR!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:39:03'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:39:03'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:39:03'!
FAILURE!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:39:05'!
ERROR!
!OOStack methodsFor: 'nil' stamp: 'ma 4/20/2023 21:39:31' overrides: 16901663!
size

	^ elements size! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:39:33'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:39:33'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:39:33'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:39:33'!
FAILURE!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:40:18'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:40:18'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:40:19'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:40:19'!
FAILURE!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:41:06' prior: 50619499!
pop
	
	(self size > 0) ifTrue: 
	
		[|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.]! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:41:36' prior: 50619801!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
	]! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:41:47'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:41:47'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:41:47'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:41:47'!
FAILURE!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:41:53'!
FAILURE!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:42:36' prior: 50619808!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
	] ifFalse: [
	
	]! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:42:45' prior: 50619852!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
	] ifFalse: [
		
	]! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:43:03' prior: 50619860!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
	] ifFalse: [
		self class
	]! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:43:19' prior: 50619868!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
	] ifFalse: [
		self class stackEmptyErrorDescription.
	]! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:43:21'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:43:21'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:43:21'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:43:21'!
FAILURE!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:44:01' prior: 50619876!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
		
	] ifFalse: [
		self class stackEmptyErrorDescription.
	]! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:44:03'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:44:03'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:44:03'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:44:03'!
FAILURE!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:44:05'!
FAILURE!

OOStack new pop!

OOStack new pop!

OOStack new pop!

self size!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:45:40' prior: 50619918!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
		
	] ifFalse: [
		^ self class stackEmptyErrorDescription.
	]! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:45:53'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:45:53'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:45:53'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:45:53'!
FAILURE!

OOStack new pop!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:47:06' prior: 50619966!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
		
	] ifFalse: [
		^ self error: self class stackEmptyErrorDescription.
	]! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:47:08'!
PASSED!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:47:08'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:47:08'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:48:11'!
FAILURE!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:48:11'!
FAILURE!

anError messageText!
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:49:09' prior: 50620009!
pop
	
	(self size > 0) ifTrue: [
		
		|lastElement|
		
		lastElement := elements last.
		elements removeLast.
		
		^ lastElement.
		
	] ifFalse: [
		self error: self class stackEmptyErrorDescription.
	]! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:50:12' prior: 50619651!
top
	
	(self size > 0) ifTrue: [
		^ elements first.
	] ifFalse: [
		self error: self class stackEmptyErrorDescription 
	]! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:50:28'!
PASSED!

OOStack subclass: #OOStackEmpty
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

OOStack subclass: #OOStackEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStackEmpty category: 'Stack-Exercise' stamp: 'ma 4/20/2023 21:51:26'!
OOStack subclass: #OOStackEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

OOStack subclass: #OOStackNonEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStackNonEmpty category: 'Stack-Exercise' stamp: 'ma 4/20/2023 21:51:31'!
OOStack subclass: #OOStackNonEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!OOStackEmpty methodsFor: 'nil' stamp: 'ma 4/20/2023 21:52:19' overrides: 50620063!
pop

	self error: self class stackEmptyErrorDescription ! !
!OOStackNonEmpty methodsFor: 'nil' stamp: 'ma 4/20/2023 21:52:57' overrides: 50620063!
pop
	
	|lastElement|

	lastElement := elements last.
	elements removeLast.

	^ lastElement.
! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'ma 4/20/2023 21:53:20' prior: 50620063!
pop
	
	! !

!methodRemoval: OOStack #pop stamp: 'ma 4/20/2023 21:53:26'!
pop
	
	!

----SNAPSHOT----(20 April 2023 21:53:30) CuisUniversity-5706.image priorSource: 9195554!

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:53:33'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:53:33'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:53:33'!
ERROR!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:53:33'!
ERROR!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:53:33'!
ERROR!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:53:33'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:53:33'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:53:33'!
ERROR!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:53:33'!
ERROR!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:53:33'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:53:58'!
ERROR!
!OOStack methodsFor: 'nil' stamp: 'ma 4/20/2023 21:54:18'!
pop

	self subclassResponsibility ! !

!testRun: #OOStackTest #test01StackShouldBeEmptyWhenCreated stamp: 'ma 4/20/2023 21:54:20'!
PASSED!

!testRun: #OOStackTest #test02PushAddElementsToTheStack stamp: 'ma 4/20/2023 21:54:20'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:54:20'!
ERROR!

!testRun: #OOStackTest #test04PopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:54:20'!
ERROR!

!testRun: #OOStackTest #test05StackBehavesLIFO stamp: 'ma 4/20/2023 21:54:20'!
ERROR!

!testRun: #OOStackTest #test06TopReturnsLastPushedObject stamp: 'ma 4/20/2023 21:54:20'!
PASSED!

!testRun: #OOStackTest #test07TopDoesNotRemoveObjectFromStack stamp: 'ma 4/20/2023 21:54:20'!
PASSED!

!testRun: #OOStackTest #test08CanNotPopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:54:20'!
FAILURE!

!testRun: #OOStackTest #test09CanNotPopWhenThereAreNoObjectsInTheStackAndTheStackHadObjects stamp: 'ma 4/20/2023 21:54:20'!
ERROR!

!testRun: #OOStackTest #test10CanNotTopWhenThereAreNoObjectsInTheStack stamp: 'ma 4/20/2023 21:54:20'!
PASSED!

!testRun: #OOStackTest #test03PopRemovesElementsFromTheStack stamp: 'ma 4/20/2023 21:54:24'!
ERROR!

----SNAPSHOT----(20 April 2023 21:54:36) CuisUniversity-5706.image priorSource: 9232177!

----SNAPSHOT----(20 April 2023 21:55:06) CuisUniversity-5706.image priorSource: 9234651!

----STARTUP---- (21 April 2023 15:10:35) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


!classRemoval: #Fraccion stamp: 'ma 4/21/2023 15:10:42'!
Numero subclass: #Fraccion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #Entero stamp: 'ma 4/21/2023 15:10:43'!
Numero subclass: #Entero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #Numero stamp: 'ma 4/21/2023 15:10:43'!
Object subclass: #Numero
	instanceVariableNames: 'type value numerator denominator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classRemoval: #NumeroTest stamp: 'ma 4/21/2023 15:10:43'!
TestCase subclass: #NumeroTest
	instanceVariableNames: 'zero one two four oneFifth oneHalf five twoFifth twoTwentyfifth fiveHalfs three eight negativeOne negativeTwo negativeOneHalf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

----End fileIn of /home/martin/Desktop/facu/Inge I/isw1/cuis/Numero-Exercise-FINAL.st----!

!testRun: #NumeroTest #test01isCeroReturnsTrueWhenAskToZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test02isCeroReturnsFalseWhenAskToOthersButZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'ma 4/21/2023 15:11:56'!
PASSED!

----SNAPSHOT----(21 April 2023 15:12:06) CuisUniversity-5706.image priorSource: 9234741!

----STARTUP---- (11 May 2023 20:25:16) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Roberto-Exercise'!

!classDefinition: #MarsRover category: 'Roberto-Exercise' stamp: 'ma 5/11/2023 20:43:58'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Roberto-Exercise'!

TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Roberto-Exercise'!

!classDefinition: #MarsRoverTests category: 'Roberto-Exercise' stamp: 'ma 5/11/2023 20:47:21'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Roberto-Exercise'!
!MarsRoverTests methodsFor: 'nil' stamp: 'ma 5/11/2023 20:50:16'!
test0InicializarRoverEnPosicionInicialLoPoneEnPosicionInicial! !

----SNAPSHOT----(11 May 2023 21:25:45) CuisUniversity-5706.image priorSource: 9267404!

!methodRemoval: MarsRoverTests #test0InicializarRoverEnPosicionInicialLoPoneEnPosicionInicial stamp: 'ma 5/11/2023 21:26:00'!
test0InicializarRoverEnPosicionInicialLoPoneEnPosicionInicial!

----SNAPSHOT----(11 May 2023 21:26:05) CuisUniversity-5706.image priorSource: 9268480!

----STARTUP---- (15 May 2023 19:24:27) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


----End fileIn of /home/martin/Desktop/facu/Inge I/isw1/cuis/Portfolio-Ejercicio.st----!

----SNAPSHOT----(15 May 2023 19:25:07) CuisUniversity-5706.image priorSource: 9855872!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 19:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 19:38:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:38:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:38:21'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 19:38:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 19:38:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 19:38:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 19:38:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:38:21'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:39:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:39:04'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ma 5/15/2023 19:39:42' prior: 50621334!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: -50 on: account.
		
	self assert: 50 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 19:39:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 19:39:42'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ma 5/15/2023 19:39:48' prior: 50621576!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ma 5/15/2023 19:41:44' prior: 50621509!
register: aTransaction

	AccountTransaction add: aTransaction to: self.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' prior: 50621626!
register: aTransaction

	transactions add: aTransaction 
! !
!AccountTransaction methodsFor: 'instance creation' stamp: 'ma 5/15/2023 19:44:45'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: AccountTransaction class #register:on: stamp: 'ma 5/15/2023 19:44:45'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ma 5/15/2023 19:46:30'!
register: aValue on: account
	
	self register: aValue on: account.! !
!AccountTransaction methodsFor: 'instance creation' stamp: 'ma 5/15/2023 19:46:51' prior: 50621637!
register: aValue on: account

	self subclassResponsibility.! !
!Deposit methodsFor: 'value' stamp: 'ma 5/15/2023 19:47:42' overrides: 50621657!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

----STARTUP---- (15 May 2023 19:58:16) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 19:58:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:58:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:58:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 19:58:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 19:58:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 19:58:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 19:58:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 19:58:24'!
FAILURE!

AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value totalDepositAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'ma 5/15/2023 20:02:33'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value totalDepositAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value totalWithdrawAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'ma 5/15/2023 20:02:47'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value totalWithdrawAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Withdraw methodsFor: 'initialization' stamp: 'ma 5/15/2023 20:03:11' prior: 50621469!
initializeFor: aValue

	value := aValue.
	totalWithdrawAmount := totalWithdrawAmount + aValue.! !
!Deposit methodsFor: 'initialization' stamp: 'ma 5/15/2023 20:03:32' prior: 50621436!
initializeFor: aValue

	value := aValue.
	totalDepositAmount := totalDepositAmount + aValue.! !

AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'ma 5/15/2023 20:04:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'ma 5/15/2023 20:04:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Withdraw methodsFor: 'initialization' stamp: 'ma 5/15/2023 20:04:15' prior: 50621595!
initializeFor: aValue

	value := aValue.
! !
!Deposit methodsFor: 'initialization' stamp: 'ma 5/15/2023 20:04:22' prior: 50621601!
initializeFor: aValue

	value := aValue.
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:12:54' prior: 50621518!
balance

	|total|
	
	total := 0.

	^transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: #Deposit) ifTrue: [total := total + aTransaction value]
									ifFalse: [total := total - aTransaction value].
		
		]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:12:55'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:12:55'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:12:55'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:12:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:12:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:12:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:12:55'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:13:10' prior: 50621642!
balance

	|total|
	
	total := 0.

	transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: #Deposit) ifTrue: [total := total + aTransaction value]
									ifFalse: [total := total - aTransaction value].
		
		]
	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:13:11'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:11'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:11'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:13:11'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:13:31' prior: 50621679!
balance

	|total|
	
	total := 0.

	transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: #Deposit) ifTrue: [total := total + aTransaction value]
									ifFalse: [total := total - aTransaction value].
		
	].

	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:13:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:32'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:32'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:13:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:13:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:13:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:13:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:40'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:13:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:13:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:13:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:13:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:13:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:13:58'!
FAILURE!

a Deposit!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:15:49' prior: 50621716!
balance

	|total|
	
	total := 0.

	transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: #Deposit) ifTrue: [total := total + aTransaction value]
									ifFalse: [total := total + aTransaction value].
		
	].

	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:15:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:15:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:15:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:15:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:15:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:15:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:15:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:15:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:16:05'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:16:21' prior: 50621787!
balance

	|total|
	
	total := 0.

	transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: #Deposit) ifTrue: [total := total + aTransaction value]
									ifFalse: [total := total - aTransaction value].
		
	].

	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:16:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:16:28'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:16:28'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:16:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:16:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:16:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:16:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:16:30'!
FAILURE!

account balance!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:17:51' prior: 50621831!
balance

	|total|
	
	total := 0.

	transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: #Deposit) ifTrue: [total := total + aTransaction value].
		(aTransaction isKindOf: #Withdraw)						ifTrue: [total := total - aTransaction value].
		
	].

	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:17:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:17:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:18:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:18:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:18:03'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:18:20' prior: 50621872!
balance

	|total|
	
	total := 0.

	transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: Deposit) ifTrue: [total := total + aTransaction value].
		(aTransaction isKindOf: Withdraw)						ifTrue: [total := total - aTransaction value].
		
	].

	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:18:21'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:19:36' prior: 50621940!
balance

	|total|
	
	total := 0.
	
	transactions do: [:aTransaction | aTransaction modifyBalance: total].

	"transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: Deposit) ifTrue: [total := total + aTransaction value].
		(aTransaction isKindOf: Withdraw)						ifTrue: [total := total - aTransaction value].
		
	]."

	^total.! !
!Deposit methodsFor: 'value' stamp: 'ma 5/15/2023 20:20:05'!
modifyBalance: aBalance

	^aBalance + self value.! !
!Withdraw methodsFor: 'value' stamp: 'ma 5/15/2023 20:20:21'!
modifyBalance: aBalance

	^aBalance - self value.! !
!AccountTransaction methodsFor: 'value' stamp: 'ma 5/15/2023 20:20:39'!
modifyBalance: aBalance

	self subclassResponsibility ! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:20:46'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:20:46'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:20:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:20:48'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:21:27' prior: 50621978!
balance

	|total|
	
	total := 0.
	
	transactions do: [:aTransaction | total := aTransaction modifyBalance: total].

	"transactions do: [:aTransaction | 
		
		(aTransaction isKindOf: Deposit) ifTrue: [total := total + aTransaction value].
		(aTransaction isKindOf: Withdraw)						ifTrue: [total := total - aTransaction value].
		
	]."

	^total.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/15/2023 20:21:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:21:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/15/2023 20:21:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/15/2023 20:21:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/15/2023 20:21:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/15/2023 20:21:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/15/2023 20:21:28'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ma 5/15/2023 20:21:33' prior: 50622020!
balance

	|total|
	
	total := 0.
	
	transactions do: [:aTransaction | total := aTransaction modifyBalance: total].

	^total.! !

----SNAPSHOT----(15 May 2023 20:21:49) CuisUniversity-5706.image priorSource: 9276162!

----SNAPSHOT----(15 May 2023 20:23:09) CuisUniversity-5706.image priorSource: 9293311!

----STARTUP---- (28 May 2023 19:51:43) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


----End fileIn of /home/martin/Desktop/facu/Inge I/isw1/cuis/Portfolio-Solucion.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ma 5/28/2023 19:52:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ma 5/28/2023 19:53:02'!
PASSED!

----SNAPSHOT----(28 May 2023 20:04:11) CuisUniversity-5706.image priorSource: 9293399!

TestCase subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 20:05:02'!
TestCase subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 20:05:06'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Transfer stamp: 'ma 5/28/2023 20:05:11'!
TestCase subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'nil' stamp: 'ma 5/28/2023 20:09:50'!
test01NegativeTransferShouldRaiseError! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 20:14:48'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:14:39' prior: 50622916!
test01NegativeTransferShouldRaiseError

	| receiverAccount senderAccount |
	Transfer amount: -100 from: senderAccount to: receiverAccount ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:15:07' prior: 50622928!
test01NegativeTransferShouldRaiseError

	| receiverAccount senderAccount |
	
	
	
	Transfer amount: -100 from: senderAccount to: receiverAccount ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:15:40' prior: 50622936!
test01NegativeTransferShouldRaiseError

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Transfer amount: -100 from: senderAccount to: receiverAccount ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:16:26' prior: 50622944!
test01NegativeTransferShouldRaiseError

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Transfer amount: -100 from: senderAccount to: receiverAccount 
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:18:45' prior: 50622955!
test01NegativeTransferShouldRaiseError

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	self 
		should: [ Transfer amount: -100 from: senderAccount to: receiverAccount ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: 'Transfer cant be negative' equals: anError messageText. ]! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:18:48'!
FAILURE!
!TransferTest methodsFor: 'assertions' stamp: 'ma 5/28/2023 20:19:16' overrides: 16961444!
assert: aRenameMe1 description: aRenameMe2 
	self shouldBeImplemented.! !

!methodRemoval: TransferTest #assert:description: stamp: 'ma 5/28/2023 20:19:36'!
assert: aRenameMe1 description: aRenameMe2 
	self shouldBeImplemented.!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:20:12'!
FAILURE!
!Transfer class methodsFor: 'nil' stamp: 'ma 5/28/2023 20:21:27'!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:21:49' prior: 50622997!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self error: 'Transfer cant be negative'! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:21:50'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:22:23'!
negativeTransferErrorDescription

	^ self error: 'Transfer cant be negative'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:22:23' prior: 50623003!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self negativeTransferErrorDescription! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:22:42' prior: 50623013!
negativeTransferErrorDescription

	self error: 'Transfer cant be negative'! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:22:44'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:23:12' prior: 50622966!
test01NegativeTransferShouldRaiseError

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	self 
		should: [ Transfer amount: -100 from: senderAccount to: receiverAccount ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: Transfer negativeTransferErrorDescription equals: anError messageText. ]! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:23:13'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:23:36' prior: 50623026!
negativeTransferErrorDescription

	^ 'Transfer cant be negative'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:23:45' prior: 50623019!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self error: self class negativeTransferErrorDescription! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:23:46'!
FAILURE!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:23:46'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:24:01' prior: 50623060!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self error: self negativeTransferErrorDescription! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:24:02'!
PASSED!

----SNAPSHOT----(28 May 2023 20:24:10) CuisUniversity-5706.image priorSource: 9319483!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:28:22'!
test02ZeroTransferShouldNotAffectBalances

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	self 
		should: [ Transfer amount: -100 from: senderAccount to: receiverAccount ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: Transfer negativeTransferErrorDescription equals: anError messageText. ]! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:29:18' prior: 50623087!
test02ZeroTransferShouldNotAffectBalances

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Transfer amount: 0 from: senderAccount to: receiverAccount! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:30:29' prior: 50623103!
test02ZeroTransferShouldNotAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := senderAccount balance.	

	Transfer amount: 0 from: senderAccount to: receiverAccount
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:31:28' prior: 50623114!
test02ZeroTransferShouldNotAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer amount: 0 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance equals: senderAccount balance.
	self assert: previousReceiverAccountBalance equals: receiverAccount balance.	
	! !

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 20:31:33'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:32:38' prior: 50623074!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	aMoneyAmount isNegative ifTrue: [self error: self negativeTransferErrorDescription].
	! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:32:39'!
FAILURE!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 20:32:39'!
ERROR!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:32:47'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:33:29' prior: 50623155!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	(aMoneyAmount isNegative) ifTrue: [self error: self negativeTransferErrorDescription].
	! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:33:29'!
FAILURE!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 20:33:29'!
ERROR!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 20:33:34'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:33:42' prior: 50623173!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	(aMoneyAmount < 0) ifTrue: [self error: self negativeTransferErrorDescription].
	! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:33:43'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 20:33:43'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:34:38'!
assertMoneyTransferAmountIsNotNegative: aMoneyAmount

	^ (aMoneyAmount < 0) ifTrue: [self error: self negativeTransferErrorDescription]! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:34:38' prior: 50623191!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self assertMoneyTransferAmountIsNotNegative: aMoneyAmount.
	! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 20:34:40'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 20:34:40'!
PASSED!

----SNAPSHOT----(28 May 2023 20:37:22) CuisUniversity-5706.image priorSource: 9325854!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:52:34'!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer amount: 0 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance equals: senderAccount balance.
	self assert: previousReceiverAccountBalance equals: receiverAccount balance.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:52:55' prior: 50623229!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer amount: 0 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance equals: senderAccount balance.
	self assert: previousReceiverAccountBalance equals: receiverAccount balance.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:53:18' prior: 50623250!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer amount: 0 from: senderAccount to: receiverAccount.
	
	self assert: 0 equals: senderAccount balance.
	self assert: previousReceiverAccountBalance equals: receiverAccount balance.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 20:53:47' prior: 50623272!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer amount: 0 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance - 100 equals: senderAccount balance.
	self assert: previousReceiverAccountBalance + 100 equals: receiverAccount balance.	
	! !

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 20:54:39'!
FAILURE!

----SNAPSHOT----(28 May 2023 20:55:02) CuisUniversity-5706.image priorSource: 9330421!

----SNAPSHOT----(28 May 2023 21:05:51) CuisUniversity-5706.image priorSource: 9333354!

----SNAPSHOT----(28 May 2023 21:06:32) CuisUniversity-5706.image priorSource: 9333442!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:06:34'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:19:46' prior: 50623213!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self assertMoneyTransferAmountIsNotNegative: aMoneyAmount.
	^ self new initializeFor: aMoneyAmount from: aSenderAccount  to: aReceiverAccount.! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:19:53'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:19:53'!
ERROR!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:19:53'!
ERROR!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:19:54'!
ERROR!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 21:20:02'!
Object subclass: #Transfer
	instanceVariableNames: 'moneyAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 21:20:02'!
Object subclass: #Transfer
	instanceVariableNames: 'moneyAmount senderAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 21:20:02'!
Object subclass: #Transfer
	instanceVariableNames: 'moneyAmount senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'ma 5/28/2023 21:20:02'!
initializeFor: aMoneyAmount from: aSenderAccount to: aReceiverAccount 
	self shouldBeImplemented.
	moneyAmount := aMoneyAmount.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.! !
!Transfer methodsFor: 'initialization' stamp: 'ma 5/28/2023 21:20:12' prior: 50623376!
initializeFor: aMoneyAmount from: aSenderAccount to: aReceiverAccount 
	
	moneyAmount := aMoneyAmount.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.! !
!Transfer methodsFor: 'initialization' stamp: 'ma 5/28/2023 21:21:14' prior: 50623386!
initializeFor: aMoneyAmount from: aSenderAccount to: aReceiverAccount 
	
	moneyAmount := aMoneyAmount.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.
	
	Withdraw register: aMoneyAmount on: aSenderAccount.
	Deposit register: aMoneyAmount on: aReceiverAccount.! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:21:17'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:21:17'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:21:17'!
FAILURE!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:21:17'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'ma 5/28/2023 21:21:37' prior: 50623395!
initializeFor: aMoneyAmount from: aSenderAccount to: aReceiverAccount 
	
	moneyAmount := aMoneyAmount.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.
	
	Withdraw register: aMoneyAmount on: senderAccount .
	Deposit register: aMoneyAmount on: receiverAccount.! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:21:40'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:21:40'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:21:40'!
FAILURE!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:21:40'!
FAILURE!

----SNAPSHOT----(28 May 2023 21:22:48) CuisUniversity-5706.image priorSource: 9333530!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:24:43' prior: 50623293!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance transfer |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	transfer := Transfer amount: 0 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance - 100 equals: senderAccount balance.
	self assert: previousReceiverAccountBalance + 100 equals: receiverAccount balance.	
	! !

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:24:48'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'ma 5/28/2023 21:26:04' prior: 50623420!
initializeFor: aMoneyAmount from: aSenderAccount to: aReceiverAccount 
	
	moneyAmount := aMoneyAmount.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.
	
	Withdraw register: aMoneyAmount on: senderAccount.
	Deposit register: aMoneyAmount on: receiverAccount.! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:27:44'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:27:44'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:27:44'!
FAILURE!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:27:44'!
FAILURE!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:28:34'!
FAILURE!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:28:43'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:28:43'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:28:43'!
FAILURE!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:28:43'!
FAILURE!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:29:24'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:29:24'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:29:24'!
FAILURE!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:29:24'!
FAILURE!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:30:11' prior: 50623448!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance transfer |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	transfer := Transfer amount: 100 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance - 100 equals: senderAccount balance.
	self assert: previousReceiverAccountBalance + 100 equals: receiverAccount balance.	
	! !

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:30:14'!
PASSED!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:30:14'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:30:14'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:30:14'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:30:22' prior: 50623529!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer amount: 100 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance - 100 equals: senderAccount balance.
	self assert: previousReceiverAccountBalance + 100 equals: receiverAccount balance.	
	! !

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:30:23'!
PASSED!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:30:23'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:30:23'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:30:23'!
PASSED!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:36:10'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:36:10'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:36:10'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:38:01'!
register: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self assertMoneyTransferAmountIsNotNegative: aMoneyAmount.
	^ self new initializeFor: aMoneyAmount from: aSenderAccount  to: aReceiverAccount.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:38:01' prior: 50623130!
test02ZeroTransferShouldNotAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer register: 0 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance equals: senderAccount balance.
	self assert: previousReceiverAccountBalance equals: receiverAccount balance.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:38:01' prior: 50623035!
test01NegativeTransferShouldRaiseError

	| senderAccount receiverAccount|
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	self 
		should: [ Transfer register: -100 from: senderAccount to: receiverAccount ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: Transfer negativeTransferErrorDescription equals: anError messageText. ]! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:38:01' prior: 50623565!
test03TransferShouldAffectBalances

	| senderAccount receiverAccount previousReceiverAccountBalance previousSenderAccountBalance |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount  := ReceptiveAccount new.
	
	Deposit register: 100 on: senderAccount.
	
	previousSenderAccountBalance := senderAccount balance.
	previousReceiverAccountBalance := receiverAccount balance.	

	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	self assert: previousSenderAccountBalance - 100 equals: senderAccount balance.
	self assert: previousReceiverAccountBalance + 100 equals: receiverAccount balance.	
	! !

!methodRemoval: Transfer class #amount:from:to: stamp: 'ma 5/28/2023 21:38:01'!
amount: aMoneyAmount from: aSenderAccount to: aReceiverAccount

	self assertMoneyTransferAmountIsNotNegative: aMoneyAmount.
	^ self new initializeFor: aMoneyAmount from: aSenderAccount  to: aReceiverAccount.!

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:38:02'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:38:02'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:38:02'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:38:13' prior: 50623610!
register: aValue from: aSenderAccount to: aReceiverAccount

	self assertMoneyTransferAmountIsNotNegative: aValue.
	^ self new initializeFor: aValue from: aSenderAccount  to: aReceiverAccount.! !
!Transfer methodsFor: 'initialization' stamp: 'ma 5/28/2023 21:38:28' prior: 50623474!
initializeFor: aValue from: aSenderAccount to: aReceiverAccount 
	
	moneyAmount := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.
	
	Withdraw register: aValue on: senderAccount.
	Deposit register: aValue on: receiverAccount.! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:38:29'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:38:29'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:38:29'!
PASSED!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ma 5/28/2023 21:38:39'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ma 5/28/2023 21:38:39' prior: 50623708!
initializeFor: aValue from: aSenderAccount to: aReceiverAccount 
	
	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount.
	
	Withdraw register: aValue on: senderAccount.
	Deposit register: aValue on: receiverAccount.! !

!testRun: #TransferTest #test01NegativeTransferShouldRaiseError stamp: 'ma 5/28/2023 21:38:42'!
PASSED!

!testRun: #TransferTest #test02ZeroTransferShouldNotAffectBalances stamp: 'ma 5/28/2023 21:38:42'!
PASSED!

!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/28/2023 21:38:42'!
PASSED!

----SNAPSHOT----(28 May 2023 21:38:46) CuisUniversity-5706.image priorSource: 9337406!

----SNAPSHOT----(28 May 2023 21:45:35) CuisUniversity-5706.image priorSource: 9347416!

----SNAPSHOT----(28 May 2023 23:38:28) CuisUniversity-5706.image priorSource: 9347504!

----STARTUP---- (30 May 2023 19:45:54) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


!testRun: #TransferTest #test03TransferShouldAffectBalances stamp: 'ma 5/30/2023 20:36:20'!
PASSED!

----STARTUP---- (1 June 2023 20:07:56) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


----End fileIn of /home/martin/Desktop/facu/Inge I/isw1/cuis/MarsRover-WithHeading.st----!

TestCase subclass: #MarsRover2Test
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover2Test category: 'MarsRover-WithHeading' stamp: 'ma 6/1/2023 20:25:44'!
TestCase subclass: #MarsRover2Test
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover2Test methodsFor: 'nil' stamp: 'ma 6/1/2023 20:27:34'!
test01MarsRoverWithoutCommandsLogsNothing

! !
!MarsRover2Test methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:29:16' prior: 50624270!
test01MarsRoverWithoutCommandsLogsNothing

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	"self assert: 0 eu"! !
!MarsRover2Test methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:30:57' prior: 50624275!
test01MarsRoverWithoutCommandsLogsNothing

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover log.! !

!testRun: #MarsRover2Test #test01MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:30:59'!
ERROR!
!MarsRover2Test methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:31:55'!
test17MarsRoverWithoutCommandsLogsNothing

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover log.! !
!MarsRoverTest methodsFor: 'nil' stamp: 'ma 6/1/2023 20:32:02'!
test17MarsRoverWithoutCommandsLogsNothing

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover log.! !

!classRemoval: #MarsRover2Test stamp: 'ma 6/1/2023 20:32:07'!
TestCase subclass: #MarsRover2Test
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:32:17'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:32:23'!
log
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:32:26' prior: 50624319!
log
	""! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:32:40' prior: 50624323!
log
	''! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/1/2023 20:32:43'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:32:43'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:32:43'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:32:53' prior: 50624327!
log
	^ ''! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:32:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/1/2023 20:33:10'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:33:10'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:40:20'!
test18MarsRoverWithSingleCommandLogsPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: 1@2 equals: marsRover log.! !

!testRun: #MarsRoverTest #test18MarsRoverWithSingleCommandLogsPosition stamp: 'ma 6/1/2023 20:40:39'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ma 6/1/2023 20:40:59'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:40:54' prior: 50624391!
log
	^ log.! !

!methodRemoval: MarsRoverTest #test18MarsRoverWithSingleCommandLogsPosition stamp: 'ma 6/1/2023 20:44:08'!
test18MarsRoverWithSingleCommandLogsPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	marsRover process: 'f'.
	
	self assert: 1@2 equals: marsRover log.!

----SNAPSHOT----(1 June 2023 20:44:18) CuisUniversity-5706.image priorSource: 10156901!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:46:09'!
test18MarsRoverWithoutCommandsShowsEmptyWindow

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover window.! !

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsEmptyWindow stamp: 'ma 6/1/2023 20:46:17'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:46:24'!
window
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:46:39' prior: 50624560!
window
	^''! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:47:28'!
test18MarsRoverWithoutCommandsShowsActualPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover window.! !

!methodRemoval: MarsRoverTest #test18MarsRoverWithoutCommandsShowsEmptyWindow stamp: 'ma 6/1/2023 20:47:31'!
test18MarsRoverWithoutCommandsShowsEmptyWindow

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover window.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:47:53'!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover window.! !

!methodRemoval: MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPosition stamp: 'ma 6/1/2023 20:47:57'!
test18MarsRoverWithoutCommandsShowsActualPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover window.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:48:10' prior: 50624585!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: 1@1 equals: marsRover window.! !

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/1/2023 20:48:11'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:48:28' prior: 50624565!
window

	^1@1! !

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/1/2023 20:48:34'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/1/2023 20:48:42'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:48:48'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/1/2023 20:48:48'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:48:48'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:49:04'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:49:04'!
FAILURE!

marsRover log!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/1/2023 20:49:29' prior: 50624533!
log
	^ ''.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/1/2023 20:49:30'!
PASSED!

----SNAPSHOT----(1 June 2023 20:50:52) CuisUniversity-5706.image priorSource: 9372629!

----SNAPSHOT----(1 June 2023 21:46:47) CuisUniversity-5706.image priorSource: 9379466!

----STARTUP---- (4 June 2023 17:01:42) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 17:04:56'!
PASSED!

----STARTUP---- (4 June 2023 19:42:14) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:43:49'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:43:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 19:45:54'!
test19MarsRoverWithForwardLogs

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover log.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 19:46:26' prior: 50624894!
test19MarsRoverWithForwardLogs

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'f'.
	
	self assert: '1@2' equals: marsRover log.! !

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:46:36'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 19:47:38' prior: 50624024!
moveNorth
	
	position := position + (0@1)
	! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 19:48:10' prior: 50624913!
moveNorth
	
	position := position + (0@1)
	positionsHistory add: position asString.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head log positionHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 19:48:33'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log positionHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 19:48:59' prior: 50624695!
log
	^ positionHistory last.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:28'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:49:28'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:49:28'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:49:28'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:49:28'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:49:28'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:30'!
ERROR!

Object subclass: #MarsRover
	instanceVariableNames: 'position head log positionsHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 19:49:47'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log positionsHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:50'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:49:50'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:49:50'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:49:50'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:49:50'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:49:50'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:49:52'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 19:50:00' prior: 50624917!
moveNorth
	
	position := position + (0@1).
	positionsHistory add: position asString.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:06'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:50:06'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:50:06'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:50:06'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:50:06'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:08'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 19:50:47' prior: 50623958!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionsHistory := OrderedCollection new.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:50:48'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:50:48'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:50:48'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:50:51'!
ERROR!

positionHistory!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:51:14'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 19:51:51' prior: 50625163!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionsHistory := OrderedCollection new.
	positionsHistory add: self actualPosition.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:51:55'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:51:55'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:51:55'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:52:01'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:52:37'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:52:37'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:52:37'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:52:38'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:52:49'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:53:25'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 19:54:15' prior: 50625242!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	self halt.
	head := aHeadingType for: self.
	positionsHistory := OrderedCollection new.
	positionsHistory add: self actualPosition.! !
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 19:55:29' prior: 50625392!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionsHistory := OrderedCollection new.
	positionsHistory add: position.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:55:32'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:55:32'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:55:32'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:55:34'!
ERROR!

marsRover log!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 19:56:17' prior: 50624937!
log
	^ positionsHistory last.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:56:25'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:56:25'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:56:25'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 19:57:36' prior: 50625402!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionsHistory := OrderedCollection new.
	positionsHistory add: ''.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 19:57:37'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 19:57:37'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 19:59:31'!
test20MarsRoverWithTwiceForwardLogs

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	self assert: '1@2' equals: marsRover log.! !

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 19:59:33'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:01:00' prior: 50625623!
test20MarsRoverWithTwiceForwardLogs

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	self assert: '1@2 1@3' equals: marsRover log.! !

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:01:01'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:01:45' prior: 50625479!
log
	^ positionsHistory.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:01:47'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:01:47'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:01:47'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:01:47'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:01:49'!
FAILURE!

marsRover log!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:02:56' prior: 50625635!
test20MarsRoverWithTwiceForwardLogs

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: marsRover log.! !

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:02:58'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:03:53'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:03:53'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:03:53'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:03:53'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:03:55'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:04:06'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:05:03' prior: 50624301!
test17MarsRoverWithoutCommandsLogsNothing

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: (OrderedCollection new) equals: marsRover log.! !
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 20:05:16' prior: 50625551!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionsHistory := OrderedCollection new.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:05:19'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:05:19'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:05:19'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:05:58' prior: 50624603!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@1'.
	
	self assert: expectedLogs equals: marsRover window.! !

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:05:59'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:06:09'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:07:06'!
FAILURE!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:07:06'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:07:06'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:07:15'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:07:40' prior: 50624616!
window

	^1@1 asString.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:07:42'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:07:42'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:07:42'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:07:44'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:07:59' prior: 50625990!
window

	^'1@1'! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:08:02'!
FAILURE!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:08:02'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:08:02'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:08:04'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:09:21' prior: 50626065!
window

	|result|

	result := OrderedCollection new.

	^ result add: '1@1'! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:09:23'!
FAILURE!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:09:23'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:09:23'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:09:23'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:09:26'!
FAILURE!

expectedLogs!

marsRover window!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:09:58' prior: 50626140!
window

	|result|

	result := OrderedCollection new.

	^ (result add: '1@1')! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:10:00'!
FAILURE!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:10:00'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:10:00'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:10:01'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:13:48' prior: 50626222!
window

	|result|

	result := OrderedCollection new.
	result add: '1@1'.
	^ result! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:14:07'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:14:07'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:14:07'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:14:43' prior: 50624902!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: '1@2' equals: marsRover log.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:14:48'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:14:48'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:14:48'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:15:05' prior: 50626375!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: marsRover log.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:15:07'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:15:07'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:16:17'!
test20MarsRoverWithTwiceForwardWindows

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: marsRover window.! !

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:16:22'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:16:28'!
test21MarsRoverWithTwiceForwardWindows

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: marsRover window.! !

!methodRemoval: MarsRoverTest #test20MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:16:30'!
test20MarsRoverWithTwiceForwardWindows

	| marsRover expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: marsRover window.!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:17:07' prior: 50626299!
window

	^ positionsHistory last.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:17:25' prior: 50626550!
test21MarsRoverWithTwiceForwardWindows

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: marsRover window.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:17:48' prior: 50625899!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '1@1' equals: marsRover window.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:17:51'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:17:51'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:17:51'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:19:16' prior: 50626574!
window

	positionsHistory isEmpty ifTrue: [^ ''].
	^ positionsHistory last.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:19:18'!
FAILURE!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:19:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:19:18'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:19:30' prior: 50626588!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self assert: '' equals: marsRover window.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:19:33'!
PASSED!

----SNAPSHOT----(4 June 2023 20:19:43) CuisUniversity-5706.image priorSource: 9379554!

TestCase subclass: #Observer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:21:43'!
TestCase subclass: #Observer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Observer subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:22:04'!
Observer subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Observer subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:22:11'!
Observer subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Observer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:22:27'!
Object subclass: #Observer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Observer
	instanceVariableNames: 'positionHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:22:59'!
Object subclass: #Observer
	instanceVariableNames: 'positionHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Observer
	instanceVariableNames: 'positionsHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:23:02'!
Object subclass: #Observer
	instanceVariableNames: 'positionsHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:25:42'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log positionsHistory observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:25:38'!
observedBy: anObserver
	
	observer:= anObserver.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head log observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:25:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:26:32' prior: 50625090!
moveNorth
	
	position := position + (0@1).
	observer addPosition: position asString.! !
!Observer methodsFor: 'no messages' stamp: 'ma 6/4/2023 20:27:11'!
addPosition: aPosition

	positionsHistory add: aPosition .! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:27:30' prior: 50624028!
moveSouth
	
	position := position + (0@-1).
	observer addPosition: position asString.! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:27:39' prior: 50624016!
moveEast
	
	position := position + (1@0).
	observer addPosition: position asString.! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:27:47' prior: 50624032!
moveWest
	
	position := position + (-1@0).
	observer addPosition: position asString.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:28:54' prior: 50625647!
log
	^ observer log.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:29:11' prior: 50626671!
window

	^ observer window.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:29:36'!
log

	^ positionsHistory .! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:30:11'!
window
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory .! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:30:19' prior: 50626969!
window
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:30:50' overrides: 16920235!
initialize
	
	positionsHistory := OrderedCollection new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:31:04' prior: 50626957!
log

	^ observer log.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:31:26'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:31:26'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:31:31'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:32:44' prior: 50626929!
moveNorth
	
	position := position + (0@1).
	observer isNil ifFalse:[ 
	observer addPosition: position asString.]! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:32:54' prior: 50626939!
moveSouth
	
	position := position + (0@-1).
	observer isNil ifFalse:[ 
	observer addPosition: position asString.]! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:32:59' prior: 50626951!
moveWest
	
	position := position + (-1@0).
	observer isNil ifFalse:[ 
	observer addPosition: position asString.]! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 20:33:03' prior: 50626945!
moveEast
	
	position := position + (1@0).
	observer isNil ifFalse:[ 
	observer addPosition: position asString.]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:33:06'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:33:06'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:33:06'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:33:06'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:33:06'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:33:06'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:33:09'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:33:28'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:33:28'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:34:07' prior: 50626986!
log

	observer isNil ifFalse:[ 
	^ observer log.]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:34:36' prior: 50627171!
log

	^ observer log.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:35:31' prior: 50625812!
test17MarsRoverWithoutCommandsLogsNothing

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer log.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:36:37' prior: 50626751!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	self assert: '' equals: observer window.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:37:14' prior: 50627191!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer window.! !

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:37:15'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:37:15'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:37:15'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:37:15'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:37:42' prior: 50626457!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: marsRover log.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:37:54' prior: 50627286!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: marsRover log.! !

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:37:55'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:37:55'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:37:55'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:38:06' prior: 50627299!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer log.! !

!methodRemoval: MarsRover #log stamp: 'ma 6/4/2023 20:38:10'!
log

	^ observer log.!

!methodRemoval: MarsRover #window stamp: 'ma 6/4/2023 20:38:46'!
window

	^ observer window.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:39:03' prior: 50625722!
test20MarsRoverWithTwiceForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: marsRover log.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:39:13' prior: 50627406!
test20MarsRoverWithTwiceForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: marsRover log.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:39:21' prior: 50627420!
test20MarsRoverWithTwiceForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer log.! !

----SNAPSHOT----(4 June 2023 20:41:45) CuisUniversity-5706.image priorSource: 9445726!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:45:10' prior: 50626579!
test21MarsRoverWithTwiceForwardWindows

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: observer window.! !

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:45:12'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:45:12'!
PASSED!
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:55:08'!
logPosition

	^ positionsHistory .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:55:08' prior: 50627180!
test17MarsRoverWithoutCommandsLogsNothing

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:55:08' prior: 50627435!
test20MarsRoverWithTwiceForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer logPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:55:08' prior: 50627386!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer logPosition.! !

!methodRemoval: Observer #log stamp: 'ma 6/4/2023 20:55:08'!
log

	^ positionsHistory .!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:55:12'!
PASSED!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'ma 6/4/2023 20:55:30'!
Object subclass: #Observer
	instanceVariableNames: 'positionsHistory headingsHistory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:55:28'!
logHeading

	^ headingsHistory .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:57:16'!
test22LoggingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:57:51' prior: 50627669!
test22LoggingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logHeading.! !

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 20:58:19'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/4/2023 20:58:32' prior: 50625821!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:58:45' prior: 50626981 overrides: 16920235!
initialize
	
	positionsHistory := OrderedCollection new.
	headingsHistory := OrderedCollection new.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 20:58:49'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 20:58:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:59:32'!
test22WindowShowingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:59:40'!
test23WindowShowingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logHeading.! !

!methodRemoval: MarsRoverTest #test22WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 20:59:40'!
test22WindowShowingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logHeading.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 20:59:52' prior: 50627794!
test23WindowShowingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer windowHeading.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:00:16'!
windowPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:00:16' prior: 50627453!
test21MarsRoverWithTwiceForwardWindows

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: observer windowPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:00:16' prior: 50627201!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer windowPosition.! !

!methodRemoval: Observer #window stamp: 'ma 6/4/2023 21:00:16'!
window
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.!
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:00:22'!
windowHeading
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:00:31' prior: 50627862!
windowHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.! !

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:00:41'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:00:49' prior: 50627818!
test23WindowShowingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer windowHeading.! !

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:00:50'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:02:50'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:02:53'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:02:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:05:18'!
test24LoggingHeadingWithForwardCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer logPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:08:17' prior: 50628052!
test24LoggingHeadingWithForwardCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:08:33' prior: 50628066!
test24LoggingHeadingWithForwardCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logHeading .! !

!testRun: #MarsRoverTest #test24LoggingHeadingWithForwardCommand stamp: 'ma 6/4/2023 21:08:34'!
FAILURE!
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:09:15'!
addHeading: aDirection

	headingsHistory add: aDirection .! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:09:57' prior: 50623968!
headNorth
	
	head := MarsRoverHeadingNorth for: self 
	! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:10:27' prior: 50628102!
headNorth
	
	head := MarsRoverHeadingNorth for: self.
	observer addHeading: 'North'.! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:10:38' prior: 50623964!
headEast
	
	head := MarsRoverHeadingEast for: self.
	observer addHeading: 'East'.! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:10:54' prior: 50623972!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	observer addHeading: 'South'.! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:11:14' prior: 50623976!
headWest
	
	head := MarsRoverHeadingWest for: self.
	observer addHeading: 'West'.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:12:06'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:12:06'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:12:06'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:12:06'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:12:06'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:12:06'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test24LoggingHeadingWithForwardCommand stamp: 'ma 6/4/2023 21:12:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:12:09'!
ERROR!

observer!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/4/2023 21:13:28' prior: 50627063!
moveNorth
	
	position := position + (0@1).
	observer isNil ifFalse:[ observer addPosition: position asString.]! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:13:58' prior: 50628107!
headNorth
	
	head := MarsRoverHeadingNorth for: self.
	observer isNil ifFalse:[observer addHeading: 'North'].! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:14:07' prior: 50628113!
headEast
	
	head := MarsRoverHeadingEast for: self.
	observer isNil ifFalse:[observer addHeading: 'East'].! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:14:15' prior: 50628119!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	observer isNil ifFalse:[observer addHeading: 'South'].! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/4/2023 21:14:24' prior: 50628125!
headWest
	
	head := MarsRoverHeadingWest for: self.
	observer isNil ifFalse:[observer addHeading: 'West'].! !

----SNAPSHOT----(4 June 2023 21:14:30) CuisUniversity-5706.image priorSource: 9465551!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:14:33'!
PASSED!

!testRun: #MarsRoverTest #test24LoggingHeadingWithForwardCommand stamp: 'ma 6/4/2023 21:14:33'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:14:54'!
test25LoggingHeadingWithTwiceRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logHeading .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:15:08'!
test24LoggingHeadingWithRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logHeading .! !

!methodRemoval: MarsRoverTest #test24LoggingHeadingWithForwardCommand stamp: 'ma 6/4/2023 21:15:08'!
test24LoggingHeadingWithForwardCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logHeading .!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:15:21' prior: 50628332!
test25LoggingHeadingWithTwiceRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer logHeading .! !

!testRun: #MarsRoverTest #test25LoggingHeadingWithTwiceRotateCommand stamp: 'ma 6/4/2023 21:15:30'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:15:46' prior: 50628375!
test25LoggingHeadingWithTwiceRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'SEast'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer logHeading .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:15:48' prior: 50628393!
test25LoggingHeadingWithTwiceRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer logHeading .! !

!testRun: #MarsRoverTest #test25LoggingHeadingWithTwiceRotateCommand stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test24LoggingHeadingWithRotateCommand stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test25LoggingHeadingWithTwiceRotateCommand stamp: 'ma 6/4/2023 21:15:49'!
PASSED!

!testRun: #MarsRoverTest #test25LoggingHeadingWithTwiceRotateCommand stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test24LoggingHeadingWithRotateCommand stamp: 'ma 6/4/2023 21:15:55'!
PASSED!

!testRun: #MarsRoverTest #test25LoggingHeadingWithTwiceRotateCommand stamp: 'ma 6/4/2023 21:15:55'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:16:42'!
test17LoggingPositionWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.! !

!methodRemoval: MarsRoverTest #test17MarsRoverWithoutCommandsLogsNothing stamp: 'ma 6/4/2023 21:16:42'!
test17MarsRoverWithoutCommandsLogsNothing

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:18:08'!
test18MarsRoverWithNoCommandsShowsEmptyPositionWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer windowPosition.! !

!methodRemoval: MarsRoverTest #test18MarsRoverWithoutCommandsShowsActualPositionAtWindow stamp: 'ma 6/4/2023 21:18:08'!
test18MarsRoverWithoutCommandsShowsActualPositionAtWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer windowPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:19:02'!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.! !

!methodRemoval: MarsRoverTest #test17LoggingPositionWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:19:02'!
test17LoggingPositionWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:19:35'!
test19MarsRoverWithForwardLogsPosition

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer logPosition.! !

!methodRemoval: MarsRoverTest #test19MarsRoverWithForwardLogs stamp: 'ma 6/4/2023 21:19:35'!
test19MarsRoverWithForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer logPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:19:45'!
test20MarsRoverWithTwiceForwardLogsAllsPositions

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer logPosition.! !

!methodRemoval: MarsRoverTest #test20MarsRoverWithTwiceForwardLogs stamp: 'ma 6/4/2023 21:19:46'!
test20MarsRoverWithTwiceForwardLogs

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer logPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:20:56'!
test21MarsRoverWithTwiceForwardShowsPositionWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: observer windowPosition.! !

!methodRemoval: MarsRoverTest #test21MarsRoverWithTwiceForwardWindows stamp: 'ma 6/4/2023 21:20:56'!
test21MarsRoverWithTwiceForwardWindows

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: observer windowPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:22:02'!
test20MarsRoverWithTwiceForwardLogsAllPositions

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer logPosition.! !

!methodRemoval: MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllsPositions stamp: 'ma 6/4/2023 21:22:02'!
test20MarsRoverWithTwiceForwardLogsAllsPositions

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer logPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:22:49'!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logHeading.! !

!methodRemoval: MarsRoverTest #test22LoggingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:22:49'!
test22LoggingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logHeading.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:23:36'!
test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer windowHeading.! !

!methodRemoval: MarsRoverTest #test23WindowShowingHeadingWithNoCommandsResultsInEmpty stamp: 'ma 6/4/2023 21:23:36'!
test23WindowShowingHeadingWithNoCommandsResultsInEmpty

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer windowHeading.!

----SNAPSHOT----(4 June 2023 21:23:49) CuisUniversity-5706.image priorSource: 9491117!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:24:49'!
test24MarsRoverWithRotateCommandShowsHeadingLog

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logHeading .! !

!methodRemoval: MarsRoverTest #test24LoggingHeadingWithRotateCommand stamp: 'ma 6/4/2023 21:24:49'!
test24LoggingHeadingWithRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer logHeading .!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:25:37'!
test25MarsRoverWithTwiceRotateCommandLogsAllHeadings

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer logHeading .! !

!methodRemoval: MarsRoverTest #test25LoggingHeadingWithTwiceRotateCommand stamp: 'ma 6/4/2023 21:25:37'!
test25LoggingHeadingWithTwiceRotateCommand

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer logHeading .!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/4/2023 21:25:47'!
PASSED!

----SNAPSHOT----(4 June 2023 21:25:52) CuisUniversity-5706.image priorSource: 9509578!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:26:21'!
test16MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:27:08'!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.! !

!methodRemoval: MarsRoverTest #test16MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/4/2023 21:27:08'!
test16MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPosition.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:27:49' prior: 50628987!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer logPositionAndHeading.! !

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/4/2023 21:27:50'!
ERROR!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/4/2023 21:28:00'!
ERROR!
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:28:06'!
logPositionAndHeading
	self shouldBeImplemented.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 21:28:15' prior: 50629030!
logPositionAndHeading
	
	^ OrderedCollection new.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/4/2023 21:28:24'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/4/2023 21:28:24'!
PASSED!
!Log methodsFor: 'no messages' stamp: 'ma 6/4/2023 22:45:03'!
ShowPosition

	! !
!Log methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 22:45:23' prior: 50629129!
ShowPosition

	positionsHistory! !
!Log methodsFor: 'as yet unclassified' stamp: 'ma 6/4/2023 22:45:37' prior: 50629133!
ShowPosition

	^ positionsHistory.! !
!Window methodsFor: 'no messages' stamp: 'ma 6/4/2023 22:46:10'!
ShowPosition

	^ positionsHistory last.! !

----SNAPSHOT----(4 June 2023 23:03:20) CuisUniversity-5706.image priorSource: 9514298!

----SNAPSHOT----(4 June 2023 23:03:41) CuisUniversity-5706.image priorSource: 9519818!

----STARTUP---- (4 June 2023 23:06:41) as /home/martin/Desktop/facu/Inge I/isw1/cuis/CuisUniversity-5706.image!


----SNAPSHOT----(4 June 2023 23:54:14) CuisUniversity-5706.image priorSource: 9519906!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/4/2023 23:54:17'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:19:14'!
PASSED!

Observer subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 00:20:01'!
Observer subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #Log stamp: 'ma 6/5/2023 00:20:04'!
Observer subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Observer subclass: #StateWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #StateWindow category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 00:20:11'!
Observer subclass: #StateWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #Window stamp: 'ma 6/5/2023 00:20:14'!
Observer subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 00:20:48'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:20:48'!
PASSED!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:13' overrides: 50627665!
logHeading

	^ headingsHistory .! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:13' overrides: 50627665!
logHeading

	^ headingsHistory .! !

!methodRemoval: Observer #logHeading stamp: 'ma 6/5/2023 00:21:13'!
logHeading

	^ headingsHistory .!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:18' overrides: 50627538!
logPosition

	^ positionsHistory .! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:18' overrides: 50627538!
logPosition

	^ positionsHistory .! !

!methodRemoval: Observer #logPosition stamp: 'ma 6/5/2023 00:21:18'!
logPosition

	^ positionsHistory .!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:23' overrides: 50629035!
logPositionAndHeading
	
	^ OrderedCollection new.! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:23' overrides: 50629035!
logPositionAndHeading
	
	^ OrderedCollection new.! !

!methodRemoval: Observer #logPositionAndHeading stamp: 'ma 6/5/2023 00:21:23'!
logPositionAndHeading
	
	^ OrderedCollection new.!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:31' overrides: 50627868!
windowHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:31' overrides: 50627868!
windowHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.! !

!methodRemoval: Observer #windowHeading stamp: 'ma 6/5/2023 00:21:31'!
windowHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:35' overrides: 50627829!
windowPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:21:35' overrides: 50627829!
windowPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.! !

!methodRemoval: Observer #windowPosition stamp: 'ma 6/5/2023 00:21:35'!
windowPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:22:49'!
showHeading

	^ headingsHistory .! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:22:49'!
showHeading

	^ headingsHistory .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:22:49' prior: 50628780!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:22:49' prior: 50628856!
test25MarsRoverWithTwiceRotateCommandLogsAllHeadings

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer showHeading .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:22:49' prior: 50628828!
test24MarsRoverWithRotateCommandShowsHeadingLog

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer showHeading .! !

!methodRemoval: Logger #logHeading stamp: 'ma 6/5/2023 00:22:49'!
logHeading

	^ headingsHistory .!

!methodRemoval: StateWindow #logHeading stamp: 'ma 6/5/2023 00:22:49'!
logHeading

	^ headingsHistory .!

!methodRemoval: Logger #windowHeading stamp: 'ma 6/5/2023 00:23:13'!
windowHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.!

!methodRemoval: Logger #windowPosition stamp: 'ma 6/5/2023 00:23:15'!
windowPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:30'!
showPositionAndHeading
	
	^ OrderedCollection new.! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:30'!
showPositionAndHeading
	
	^ OrderedCollection new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:30' prior: 50629011!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showPositionAndHeading.! !

!methodRemoval: Logger #logPositionAndHeading stamp: 'ma 6/5/2023 00:23:30'!
logPositionAndHeading
	
	^ OrderedCollection new.!

!methodRemoval: StateWindow #logPositionAndHeading stamp: 'ma 6/5/2023 00:23:30'!
logPositionAndHeading
	
	^ OrderedCollection new.!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:50'!
showPosition

	^ positionsHistory .! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:50'!
showPosition

	^ positionsHistory .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:50' prior: 50628669!
test19MarsRoverWithForwardLogsPosition

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:50' prior: 50628646!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:23:50' prior: 50628749!
test20MarsRoverWithTwiceForwardLogsAllPositions

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer showPosition.! !

!methodRemoval: Logger #logPosition stamp: 'ma 6/5/2023 00:23:50'!
logPosition

	^ positionsHistory .!

!methodRemoval: StateWindow #logPosition stamp: 'ma 6/5/2023 00:23:50'!
logPosition

	^ positionsHistory .!

!methodRemoval: StateWindow #showPositionAndHeading stamp: 'ma 6/5/2023 00:24:07'!
showPositionAndHeading
	
	^ OrderedCollection new.!

!methodRemoval: StateWindow #showPosition stamp: 'ma 6/5/2023 00:24:09'!
showPosition

	^ positionsHistory .!

!methodRemoval: StateWindow #showHeading stamp: 'ma 6/5/2023 00:24:10'!
showHeading

	^ headingsHistory .!
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:24:25'!
showPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:24:25' prior: 50628623!
test18MarsRoverWithNoCommandsShowsEmptyPositionWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:24:25' prior: 50628726!
test21MarsRoverWithTwiceForwardShowsPositionWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Observer new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: observer showPosition.! !

!methodRemoval: StateWindow #windowPosition stamp: 'ma 6/5/2023 00:24:25'!
windowPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.!
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:24:37'!
showHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:24:37' prior: 50628803!
test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer showHeading.! !

!methodRemoval: StateWindow #windowHeading stamp: 'ma 6/5/2023 00:24:37'!
windowHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.!

----SNAPSHOT----(5 June 2023 00:24:41) CuisUniversity-5706.image priorSource: 9520108!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 00:25:05'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:25:05'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:25:07'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:25:30' prior: 50629656!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Logger new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:25:42' prior: 50629853!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Observer new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:25:58' prior: 50629865!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Logger new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showPosition.! !

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:26:05'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:26:16' prior: 50629707!
test18MarsRoverWithNoCommandsShowsEmptyPositionWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := StateWindow new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:26:25' prior: 50629642!
test19MarsRoverWithForwardLogsPosition

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Logger new.
	
	marsRover observedBy: observer.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:26:33' prior: 50629668!
test20MarsRoverWithTwiceForwardLogsAllPositions

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Logger new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:26:44' prior: 50629718!
test21MarsRoverWithTwiceForwardShowsPositionWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := StateWindow new.
	
	marsRover observedBy: observer.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:26:50' prior: 50629545!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Logger new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:26:56' prior: 50629741!
test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := StateWindow new.
	
	marsRover observedBy: observer.
	
	self assert: '' equals: observer showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:27:02' prior: 50629573!
test24MarsRoverWithRotateCommandShowsHeadingLog

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Logger new.
	
	marsRover observedBy: observer.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: observer showHeading .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:27:20' prior: 50629557!
test25MarsRoverWithTwiceRotateCommandLogsAllHeadings

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Logger new.
	
	marsRover observedBy: observer.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: observer showHeading .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:27:28' prior: 50629613!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover observer|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	observer := Logger new.
	
	marsRover observedBy: observer.
	
	self assert: (OrderedCollection new) equals: observer showPositionAndHeading.! !

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:27:29'!
PASSED!

----SNAPSHOT----(5 June 2023 00:31:28) CuisUniversity-5706.image priorSource: 9539381!

!classDefinition: #VariableWatch category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 00:44:14'!
Object subclass: #VariableWatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/5/2023 00:44:07' prior: 50627696!
initializeAt: aPosition heading: aHeadingType

	position := VariableWatch with: aPosition.
	head := aHeadingType for: self.! !
!VariableWatch class methodsFor: 'nil' stamp: 'ma 6/5/2023 00:45:13'!
with: aValue

 	^ self new initializeWith: aValue ! !

!classDefinition: #VariableWatch category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 00:45:31'!
Object subclass: #VariableWatch
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 00:45:30'!
initializeWith: aValue

	value := aValue ! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:52:00'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 00:52:00'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 00:52:00'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 00:52:00'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 00:52:00'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 00:52:00'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 00:52:00'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:52:00'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:52:02'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:56:58'!
addPosition

	position := position + (0@1).
	observer isNil ifFalse:[ observer addPosition: position asString.]! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:56:58' prior: 50628215!
moveNorth
	
	self addPosition! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:57:06' prior: 50630238!
moveNorth
	
	self addPosition: 0@1! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:57:27'!
addPosition: aPositionAdder

	position := position + (0@1).
	observer isNil ifFalse:[ observer addPosition: position asString.]! !

!methodRemoval: MarsRover #addPosition stamp: 'ma 6/5/2023 00:57:30'!
addPosition

	position := position + (0@1).
	observer isNil ifFalse:[ observer addPosition: position asString.]!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:57:37' prior: 50630246!
addPosition: aPositionAdder

	position := position + aPositionAdder.
	observer isNil ifFalse:[ observer addPosition: position asString.]! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:57:48' prior: 50630259!
addPosition: aPositionAdder

	position := position + aPositionAdder.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:58:04' prior: 50630266!
addPosition: aPositionAdder

	position update: position + aPositionAdder.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:58:52' prior: 50630273!
addPosition: aPositionAdder

	position updateAdd: position + aPositionAdder.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:58:59' prior: 50630281!
addPosition: aPositionAdder

	position updateAdd: aPositionAdder.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 00:59:13' prior: 50630289!
addPosition: aPositionIncrement

	position updateAdd: aPositionIncrement.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:59:15'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 00:59:15'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 00:59:15'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 00:59:15'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 00:59:15'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 00:59:15'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 00:59:15'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 00:59:15'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 00:59:17'!
FAILURE!
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 00:59:45'!
updateAdd: aValue! !
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 00:59:51' prior: 50630396!
updateAdd: aValue

	value := value + aValue! !
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:00:12' prior: 50630400!
updateAdd: aValue

	value := value + aValue.
	self notify.! !
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 01:00:17'!
notify! !

!classDefinition: #VariableWatch category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 01:04:16'!
Object subclass: #VariableWatch
	instanceVariableNames: 'value watchers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:04:14' prior: 50630409!
notify

	^ watchers do: [ :aWatcher | aWatcher value: value].! !
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 01:04:57' overrides: 16920235!
initialize 

	watchers := Set new. ! !

----SNAPSHOT----(5 June 2023 01:06:26) CuisUniversity-5706.image priorSource: 9550524!
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 01:06:52'!
addWatcher: aWatcher

	watchers add: aWatcher.! !
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/5/2023 01:08:12' prior: 50630115!
initializeAt: aPosition heading: aHeadingType

	position := VariableWatch with: aPosition.
	position addWatcher: [].
	
	head := aHeadingType for: self.! !
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/5/2023 01:10:57' prior: 50630437!
initializeAt: aPosition heading: aHeadingType

	position := VariableWatch with: aPosition.
	position addWatcher: [ :aValue | ^true].
	
	head := aHeadingType for: self.! !
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/5/2023 01:14:02' prior: 50630445!
initializeAt: aPosition heading: aHeadingType

	position := VariableWatch with: aPosition.
	
	head := aHeadingType for: self.! !
!MarsRover methodsFor: 'nil' stamp: 'ma 6/5/2023 01:14:34'!
addPositionWatcher: aWatcher

	position addWatcher: aWatcher ! !
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:15:29' prior: 50630421!
notify

	watchers do: [ :aWatcher | aWatcher ].! !
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:15:52' prior: 50630466!
notify

	watchers do: [ :aWatcher | aWatcher notify: value].! !

----SNAPSHOT----(5 June 2023 01:15:58) CuisUniversity-5706.image priorSource: 9560934!

!classRenamed: #Observer as: #Watcher stamp: 'ma 6/5/2023 01:16:09'!
Smalltalk renameClassNamed: #Observer as: #Watcher!
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/5/2023 01:17:21' prior: 50630454!
initializeAt: aPosition heading: aHeadingType

	position := VariableWatch with: aPosition.
	head := aHeadingType for: self.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:21:46' prior: 50629877!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger showPosition.! !
!Logger methodsFor: 'nil' stamp: 'ma 6/5/2023 01:22:13' overrides: 16902144!
notify: aValue! !

----SNAPSHOT----(5 June 2023 01:23:09) CuisUniversity-5706.image priorSource: 9562399!

Watcher subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 01:25:50'!
Watcher subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'nil' stamp: 'ma 6/5/2023 01:26:01'!
initialization

	log := OrderedCollection new.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:26:40' prior: 50630501 overrides: 16902144!
notify: aValue

	log add: aValue.! !

!methodRemoval: Logger #showHeading stamp: 'ma 6/5/2023 01:26:55'!
showHeading

	^ headingsHistory .!

!methodRemoval: Logger #showPosition stamp: 'ma 6/5/2023 01:26:57'!
showPosition

	^ positionsHistory .!

!methodRemoval: Logger #showPositionAndHeading stamp: 'ma 6/5/2023 01:26:58'!
showPositionAndHeading
	
	^ OrderedCollection new.!
!Logger methodsFor: 'nil' stamp: 'ma 6/5/2023 01:27:09'!
show

	^ log ! !

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:27:20'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:27:20'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:27:29' prior: 50630490!
test17MarsRoverWithNoCommandsShowsEmptyPositionLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger show.! !

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:27:30'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:27:59'!
FAILURE!

!methodRemoval: Watcher #initialize stamp: 'ma 6/5/2023 01:28:29'!
initialize
	
	positionsHistory := OrderedCollection new.
	headingsHistory := OrderedCollection new.!

----SNAPSHOT----(5 June 2023 01:28:51) CuisUniversity-5706.image priorSource: 9563313!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 01:28:54'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 01:28:54'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:28:54'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 01:28:54'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:28:59'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:28:59'!
FAILURE!
!Logger methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:30:27' overrides: 16920235!
initialize

	log := OrderedCollection new.! !

!methodRemoval: Logger #initialization stamp: 'ma 6/5/2023 01:30:30'!
initialization

	log := OrderedCollection new.!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:30:35'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 01:30:38'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 01:30:38'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 01:30:38'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:30:38'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 01:30:38'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 01:30:43'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 01:30:55'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:31:02'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:31:02'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:31:25' prior: 50629892!
test18MarsRoverWithNoCommandsShowsEmptyPositionWindow

	| marsRover stateWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	stateWindow := StateWindow new.
	
	marsRover observedBy: stateWindow.
	
	self assert: '' equals: stateWindow show.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:31:34' prior: 50630788!
test18MarsRoverWithNoCommandsShowsEmptyPositionWindow

	| marsRover stateWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	stateWindow := StateWindow new.
	
	marsRover addPositionWatcher: stateWindow.
	
	self assert: '' equals: stateWindow show.! !

----SNAPSHOT----(5 June 2023 01:31:40) CuisUniversity-5706.image priorSource: 9565462!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:32:10'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:32:10'!
ERROR!
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:32:19'!
show
	self shouldBeImplemented.! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:32:23' prior: 50630821!
show
	
	! !
!StateWindow methodsFor: 'nil' stamp: 'ma 6/5/2023 01:32:43' overrides: 16902144!
notify: aValue

	! !

Watcher subclass: #StateWindow
	instanceVariableNames: 'status'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #StateWindow category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 01:33:03'!
Watcher subclass: #StateWindow
	instanceVariableNames: 'status'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:33:13' prior: 50630829 overrides: 16902144!
notify: aValue

	status := aValue! !

----SNAPSHOT----(5 June 2023 01:33:58) CuisUniversity-5706.image priorSource: 9573128!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:37:45'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:37:45'!
FAILURE!
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:38:08' prior: 50630826!
show
	
! !
!StateWindow methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:38:17' prior: 50630861!
show
	
	^status! !

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:38:25'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:38:27'!
FAILURE!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:38:27'!
FAILURE!
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:41:56' prior: 50630471!
notify

	watchers do: [ :aWatcher | aWatcher notify: value asString].! !
!StateWindow methodsFor: 'nil' stamp: 'ma 6/5/2023 01:42:18' overrides: 16920235!
initialize

	status := ''! !

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:42:23'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:42:25'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:42:27'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:42:27'!
ERROR!

!methodRemoval: MarsRover #observedBy: stamp: 'ma 6/5/2023 01:42:57'!
observedBy: anObserver
	
	observer:= anObserver.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:43:29' prior: 50629903!
test19MarsRoverWithForwardLogsPosition

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: logger showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:43:56' prior: 50630907!
test19MarsRoverWithForwardLogsPosition

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: logger show.! !

!methodRemoval: StateWindow #showHeading stamp: 'ma 6/5/2023 01:44:07'!
showHeading
	
	headingsHistory isEmpty ifTrue: [^''].
	^ headingsHistory last.!

!methodRemoval: StateWindow #showPosition stamp: 'ma 6/5/2023 01:44:09'!
showPosition
	
	positionsHistory isEmpty ifTrue: [^''].
	^ positionsHistory last.!

Object subclass: #Watcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Watcher category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 01:44:16'!
Object subclass: #Watcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: Watcher #addHeading: stamp: 'ma 6/5/2023 01:44:20'!
addHeading: aDirection

	headingsHistory add: aDirection .!

!methodRemoval: Watcher #addPosition: stamp: 'ma 6/5/2023 01:44:22'!
addPosition: aPosition

	positionsHistory add: aPosition .!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:45:12'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:45:37' prior: 50629917!
test20MarsRoverWithTwiceForwardLogsAllPositions

	| marsRover expectedLogs observer|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	observer := Logger new.
	
	marsRover addPositionWatcher: observer.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: observer showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:45:49' prior: 50630968!
test20MarsRoverWithTwiceForwardLogsAllPositions

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: logger showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:45:54' prior: 50630984!
test20MarsRoverWithTwiceForwardLogsAllPositions

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'ff'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: '1@3'.	
	
	self assert: expectedLogs equals: logger show.! !

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 01:45:55'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:45:55'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 01:45:55'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:46:03'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:46:19' prior: 50629933!
test21MarsRoverWithTwiceForwardShowsPositionWindow

	| marsRover statusWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	statusWindow := StateWindow new.
	
	marsRover observedBy: statusWindow.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: statusWindow showPosition.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:46:28' prior: 50631112!
test21MarsRoverWithTwiceForwardShowsPositionWindow

	| marsRover statusWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	statusWindow := StateWindow new.
	
	marsRover addPositionWatcher: statusWindow.
	marsRover process: 'ff'.
	
	self assert: '1@3' equals: statusWindow show.! !

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:46:31'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:47:35' prior: 50629945!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover LOGGER|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	LOGGER := Logger new.
	
	marsRover observedBy: LOGGER.
	
	self assert: (OrderedCollection new) equals: LOGGER showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:47:40' prior: 50631141!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover observedBy: logger.
	
	self assert: (OrderedCollection new) equals: logger showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:47:50' prior: 50631152!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addHeadingWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:47:55' prior: 50631163!
test22MarsRoverWithNoCommandsShowsEmptyHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addHeadingWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger show.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:48:15'!
addHeadingWatcher: aWatcher

	position addWatcher: aWatcher ! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 01:48:33'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:48:39' prior: 50631186!
addHeadingWatcher: aWatcher

	head addWatcher: aWatcher ! !
!MarsRover methodsFor: 'initialization' stamp: 'ma 6/5/2023 01:49:03' prior: 50630483!
initializeAt: aPosition heading: aHeadingType

	position := VariableWatch with: aPosition.
	head := VariableWatch with: (aHeadingType for: self).! !

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 01:51:12'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 01:51:15'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:51:28' prior: 50629957!
test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow

	| marsRover statusWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	statusWindow := StateWindow new.
	
	marsRover observedBy: statusWindow.
	
	self assert: '' equals: statusWindow showHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:51:50' prior: 50631224!
test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow

	| marsRover statusWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	statusWindow := StateWindow new.
	
	marsRover addHeadingWatcher: statusWindow.
	
	self assert: '' equals: statusWindow show.! !

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 01:51:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:52:07' prior: 50629968!
test24MarsRoverWithRotateCommandShowsHeadingLog

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover observedBy: logger.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: logger showHeading .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:52:19' prior: 50631252!
test24MarsRoverWithRotateCommandShowsHeadingLog

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover addHeadingWatcher: logger.
	marsRover process: 'r'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: expectedLogs equals: logger show .! !

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:52:20'!
ERROR!
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 01:53:35'!
doesNotUndertand: aMessage

	^ aMessage sendTo: value! !

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:54:01'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:54:01'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:54:08'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:54:08'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:54:20'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:54:20'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 01:54:28'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 01:54:30'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:54:32'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:54:32'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:54:39'!
ERROR!

----SNAPSHOT----(5 June 2023 01:55:05) CuisUniversity-5706.image priorSource: 9574372!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:55:13'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:55:13'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:55:21'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:55:21'!
ERROR!
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:55:56' overrides: 50337880!
doesNotUnderstand: aMessage

	^ aMessage sendTo: value! !

!methodRemoval: VariableWatch #doesNotUndertand: stamp: 'ma 6/5/2023 01:55:59'!
doesNotUndertand: aMessage

	^ aMessage sendTo: value!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 01:56:04'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 01:56:05'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 01:56:07'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 01:56:08'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 01:56:10'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:56:11'!
FAILURE!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:56:11'!
FAILURE!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:56:27'!
FAILURE!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 01:56:27'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 01:57:12'!
addToPosition: aPositionIncrement

	position updateAdd: aPositionIncrement.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:57:12' prior: 50630242!
moveNorth
	
	self addToPosition: 0@1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:57:12' prior: 50627077!
moveWest
	
	position := position + (-1@0).
	observer isNil ifFalse:[ 
	observer addToPosition: position asString.]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:57:12' prior: 50627070!
moveSouth
	
	position := position + (0@-1).
	observer isNil ifFalse:[ 
	observer addToPosition: position asString.]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:57:12' prior: 50627084!
moveEast
	
	position := position + (1@0).
	observer isNil ifFalse:[ 
	observer addToPosition: position asString.]! !

!methodRemoval: MarsRover #addPosition: stamp: 'ma 6/5/2023 01:57:12'!
addPosition: aPositionIncrement

	position updateAdd: aPositionIncrement.
	"observer isNil ifFalse:[ observer addPosition: position asString.]"!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 01:57:25' prior: 50631383!
addToPosition: aPositionIncrement

	position updateAdd: aPositionIncrement.! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/5/2023 01:57:47' prior: 50628222!
headNorth
	
	head := MarsRoverHeadingNorth for: self.! !
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 01:59:40' overrides: 16903929!
update: aValue

	value := aValue.
	self notify.! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/5/2023 02:22:24' prior: 50631428!
headNorth
	
	head update: (MarsRoverHeadingNorth for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/5/2023 02:22:51' prior: 50628229!
headEast
	
	head update: (MarsRoverHeadingEast for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/5/2023 02:23:07' prior: 50628235!
headSouth
	
	head update: (MarsRoverHeadingSouth for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'ma 6/5/2023 02:23:20' prior: 50628242!
headWest
	
	head update: (MarsRoverHeadingWest for: self).! !
!MarsRoverHeadingEast methodsFor: 'nil' stamp: 'ma 6/5/2023 02:24:30' overrides: 16901837!
asString

	^ 'East'! !
!MarsRoverHeadingNorth methodsFor: 'nil' stamp: 'ma 6/5/2023 02:25:23' overrides: 16901837!
asString

	^ 'North'! !
!MarsRoverHeadingSouth methodsFor: 'nil' stamp: 'ma 6/5/2023 02:25:34' overrides: 16901837!
asString

	^ 'South'! !
!MarsRoverHeadingWest methodsFor: 'nil' stamp: 'ma 6/5/2023 02:25:47' overrides: 16901837!
asString

	^ 'West'! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:26:18'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:26:18'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:26:18'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:26:18'!
ERROR!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:26:18'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:26:25'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:26:27'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:26:28'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:26:30'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:26:32'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:26:33'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:26:35'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:26:36'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:26:37'!
ERROR!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:26:37'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:26:58' prior: 50629983!
test25MarsRoverWithTwiceRotateCommandLogsAllHeadings

	| marsRover expectedLogs logger|
	
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger new.
	
	marsRover addHeadingWatcher: logger.
	marsRover process: 'rr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	expectedLogs  add: 'South'.
	
	self assert: expectedLogs equals: logger show .! !

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:26:59'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:26:59'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:26:59'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:26:59'!
ERROR!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:27:07'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:27:17' prior: 50629999!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover observedBy: logger.
	
	self assert: (OrderedCollection new) equals: logger showPositionAndHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:27:42' prior: 50631714!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger showPositionAndHeading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:27:45' prior: 50631726!
test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger show.! !

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:28:06'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:28:06'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:28:06'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:28:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:28:46'!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	
	self assert: (OrderedCollection new) equals: logger show.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:29:22' prior: 50631847!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'f'.
	
	self assert: (OrderedCollection new add: '1@2') equals: logger show.! !

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:29:36'!
FAILURE!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:29:36'!
FAILURE!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:29:43'!
FAILURE!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:30:08'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:31:57' prior: 50631859!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: (OrderedCollection new add: '1@2') equals: logger show.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:32:01' prior: 50631886!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: 'East'.
	
	self assert: (OrderedCollection new; add: '1@2') equals: logger show.! !

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:32:04'!
ERROR!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:32:04'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:32:24' prior: 50631901!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: logger show.! !

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:32:27'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:32:29'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:32:32'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:32:32'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:32:32'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:32:34'!
FAILURE!

----SNAPSHOT----(5 June 2023 02:33:18) CuisUniversity-5706.image priorSource: 9589591!
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 02:34:51' overrides: 16901772!
= aVariableWatch

	^ aVariableWatch = 1! !
!VariableWatch methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:34:59' prior: 50632044 overrides: 16901772!
= aVariableWatch

	^ aVariableWatch = value! !

!methodRemoval: VariableWatch #= stamp: 'ma 6/5/2023 02:35:21'!
= aVariableWatch

	^ aVariableWatch = value!

----SNAPSHOT----(5 June 2023 02:35:28) CuisUniversity-5706.image priorSource: 9612490!
!VariableWatch methodsFor: 'nil' stamp: 'ma 6/5/2023 02:35:34' overrides: 16902254!
value

	^value! !
!MarsRover methodsFor: 'testing' stamp: 'ma 6/5/2023 02:35:51' prior: 50623989!
isAt: aPosition heading: aHeadingType

	^position value = aPosition and: [ head isHeading: aHeadingType ]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:35:56'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:35:56'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:35:56'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:41:27'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:41:27'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:41:27'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'ma 6/5/2023 02:42:17' prior: 50632064!
isAt: aPosition heading: aHeadingType

	^position = aPosition and: [ head isHeading: aHeadingType ]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:42:19'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:42:19'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:42:19'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:42:23'!
FAILURE!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:42:28'!
FAILURE!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:42:38'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:45:15'!
FAILURE!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:45:15'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:45:15'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:45:15'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:45:22'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:45:22'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:45:22'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:45:24'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'ma 6/5/2023 02:46:41' prior: 50632266!
isAt: aPosition heading: aHeadingType

	^(position value = aPosition asString) and: [ head isHeading: aHeadingType ]! !

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:46:45'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:46:45'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:46:45'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:46:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:46:47'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:47'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:46:48'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:46:48'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:46:48'!
FAILURE!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:46:48'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:46:48'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:46:54'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:46:54'!
FAILURE!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:46:54'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:46:56'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:47:08'!
FAILURE!

(position value = aPosition asString)!

aPosition asString!

position value!
!MarsRover methodsFor: 'testing' stamp: 'ma 6/5/2023 02:47:46' prior: 50632486!
isAt: aPosition heading: aHeadingType

	^(position value = aPosition) and: [ head isHeading: aHeadingType ]! !

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:47:52'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:47:52'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:47:52'!
ERROR!

----SNAPSHOT----(5 June 2023 02:49:43) CuisUniversity-5706.image priorSource: 9612988!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:49:46'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:49:46'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:49:46'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:49:51'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:49:51'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:49:51'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:53:04'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:53:04'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:53:04'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:54:21'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:54:46'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:54:46'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:54:46'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:54:57'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:55:10'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:55:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:55:10'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 02:57:31' prior: 50631403!
moveSouth
	
	self addToPosition: 0@-1! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 02:57:44' prior: 50631396!
moveWest
	
	self addToPosition: -1@0! !
!MarsRover methodsFor: 'moving' stamp: 'ma 6/5/2023 02:58:03' prior: 50631410!
moveEast
	
	self addToPosition: 1@0! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:58:06'!
PASSED!

----SNAPSHOT----(5 June 2023 02:58:11) CuisUniversity-5706.image priorSource: 9639594!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 02:59:19' prior: 50631923!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover addHeadingWatcher: logger.

	marsRover process: 'f'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	
	self assert: expectedLogs equals: logger show.! !

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 02:59:45'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 02:59:45'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 03:00:06' prior: 50633498!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover addHeadingWatcher: logger.

	marsRover process: 'fr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: 'East'.	

	self assert: expectedLogs equals: logger show.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 03:00:10' prior: 50633611!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover addHeadingWatcher: logger.

	marsRover process: 'fr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: 'Eastt'.	

	self assert: expectedLogs equals: logger show.! !

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:00:10'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 03:00:16' prior: 50633628!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover addHeadingWatcher: logger.

	marsRover process: 'fr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: 'East'.	

	self assert: expectedLogs equals: logger show.! !

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 03:00:17'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:00:17'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 03:00:39'!
test27MarsRoverWithForwardAndRotationShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover addHeadingWatcher: logger.

	marsRover process: 'fr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: 'East'.	

	self assert: expectedLogs equals: logger show.! !

!methodRemoval: MarsRoverTest #test27MarsRoverWithForwardShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:00:39'!
test27MarsRoverWithForwardShowsPositionHeadingLog

	| marsRover logger expectedLogs|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger new.
	
	marsRover addPositionWatcher: logger.
	marsRover addHeadingWatcher: logger.

	marsRover process: 'fr'.
	
	expectedLogs := OrderedCollection  new.
	expectedLogs  add: '1@2'.
	expectedLogs  add: 'East'.	

	self assert: expectedLogs equals: logger show.!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardAndRotationShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardAndRotationShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:00:44'!
PASSED!

----SNAPSHOT----(5 June 2023 03:01:45) CuisUniversity-5706.image priorSource: 9659006!

Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 03:01:49'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #StateWindow
	instanceVariableNames: 'status'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #StateWindow category: 'MarsRover-WithHeading' stamp: 'ma 6/5/2023 03:01:55'!
Object subclass: #StateWindow
	instanceVariableNames: 'status'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #Watcher stamp: 'ma 6/5/2023 03:02:00'!
Object subclass: #Watcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardAndRotationShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:02:03'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardAndRotationShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:02:17'!
PASSED!

----SNAPSHOT----(5 June 2023 03:03:21) CuisUniversity-5706.image priorSource: 9671751!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ma 6/5/2023 03:05:08'!
test28aaa

	| marsRover statusWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	statusWindow := StateWindow new.
	
	marsRover addHeadingWatcher: statusWindow.
	marsRover process: 'r'.
	
	self assert: 'East' equals: statusWindow show.! !

!testRun: #MarsRoverTest #test28aaa stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverWithNoCommandsShowsEmptyPositionLog stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverWithNoCommandsShowsEmptyPositionWindow stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverWithForwardLogsPosition stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverWithTwiceForwardLogsAllPositions stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverWithTwiceForwardShowsPositionWindow stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverWithNoCommandsShowsEmptyHeadingLog stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverWithoutCommandsShowsEmptyHeadingWindow stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverWithRotateCommandShowsHeadingLog stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test25MarsRoverWithTwiceRotateCommandLogsAllHeadings stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test26MarsRoverWithoutCommandsShowsEmptyPositionHeadingLog stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test27MarsRoverWithForwardAndRotationShowsPositionHeadingLog stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!testRun: #MarsRoverTest #test28aaa stamp: 'ma 6/5/2023 03:05:09'!
PASSED!

!methodRemoval: MarsRoverTest #test28aaa stamp: 'ma 6/5/2023 03:05:12'!
test28aaa

	| marsRover statusWindow|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	statusWindow := StateWindow new.
	
	marsRover addHeadingWatcher: statusWindow.
	marsRover process: 'r'.
	
	self assert: 'East' equals: statusWindow show.!

----SNAPSHOT----(5 June 2023 03:05:16) CuisUniversity-5706.image priorSource: 9678807!